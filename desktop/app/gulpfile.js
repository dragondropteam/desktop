const gulp=require("gulp"),clean=require("gulp-clean"),builder=require("electron-builder"),Platform=builder.Platform,install=require("gulp-install"),uglifyjs=require("uglify-es"),composer=require("gulp-uglify/composer"),pump=require("pump"),addsrc=require("gulp-add-src"),minify=composer(uglifyjs,console),del=require("del"),exec=require("child_process").exec,options={mangle:{reserved:["require"]}};gulp.task("clean",()=>del(["app/**/*","!app/*.json"])),gulp.task("install",["mainProcess","projectTypes","ace-builds","arduino_core","filesystem","GoldenLayout","images","media","msg","phaser_core","project","static","workspace"],()=>gulp.src("package.json").pipe(install())),gulp.task("mainProcess",["blocklyBuild"],()=>gulp.src("*.js").pipe(minify(options)).pipe(addsrc("*.html")).pipe(gulp.dest("app"))),gulp.task("buildCurrentPlatform",["install"],()=>builder.build()),gulp.task("arduino",()=>gulp.src("project_types/arduino/**/*.js").pipe(minify(options)).pipe(addsrc(["project_types/arduino/**/*","!project_types/arduino/**/*.js"])).pipe(gulp.dest("app/project_types/arduino"))),gulp.task("basic_javascript",()=>gulp.src("project_types/basic_javascript/**/*.js").pipe(minify(options)).pipe(addsrc(["project_types/basic_javascript/**/*","!project_types/basic_javascript/**/*.js"])).pipe(gulp.dest("app/project_types/basic_javascript"))),gulp.task("ringo_robot",()=>gulp.src("project_types/ringo_robot/**/*.js").pipe(minify(options)).pipe(addsrc(["project_types/ringo_robot/**/*","!project_types/ringo_robot/**/*.js"])).pipe(gulp.dest("app/project_types/ringo_robot"))),gulp.task("text_phaser",()=>gulp.src("project_types/text_phaser/**/*.js").pipe(minify(options)).pipe(addsrc(["project_types/text_phaser/**/*","!project_types/text_phaser/**/*.js"])).pipe(gulp.dest("app/project_types/text_phaser"))),gulp.task("visual_phaser",()=>gulp.src("project_types/visual_phaser/**/*.js").pipe(minify(options)).pipe(addsrc(["project_types/visual_phaser/**/*","!project_types/visual_phaser/**/*.js"])).pipe(gulp.dest("app/project_types/visual_phaser"))),gulp.task("wink_robot",()=>gulp.src("project_types/wink_robot/**/*.js").pipe(minify(options)).pipe(addsrc(["project_types/wink_robot/**/*","!project_types/wik_robot/**/*.js"])).pipe(gulp.dest("app/project_types/wink_robot"))),gulp.task("projectTypes",["arduino","basic_javascript","ringo_robot","text_phaser","visual_phaser","wink_robot"],()=>gulp.src("project_types/project_types.js").pipe(minify(options)).pipe(addsrc(["project_types/dragon_drop_style.css","project_types/package.json"])).pipe(gulp.dest("app/project_types"))),gulp.task("ace-builds",()=>gulp.src("ace-builds/**/*").pipe(gulp.dest("app/ace-builds"))),gulp.task("arduino_core",()=>{gulp.src("arduino_core/**/*.js").pipe(minify(options)).pipe(addsrc(["arduino_core/**/*","!arduino_core/**/*.js"])).pipe(gulp.dest("app/arduino_core"))}),gulp.task("filesystem",()=>{gulp.src("filesystem/**/*.js").pipe(minify(options)).pipe(addsrc(["filesystem/**/*","!filesystem/**/*.js"])).pipe(gulp.dest("app/filesystem"))}),gulp.task("GoldenLayout",()=>{gulp.src("GoldenLayout/**/*.js").pipe(minify(options)).pipe(addsrc(["GoldenLayout/**/*","!GoldenLayout/**/*.js"])).pipe(gulp.dest("app/GoldenLayout"))}),gulp.task("images",()=>{gulp.src("images/**/*").pipe(gulp.dest("app/images"))}),gulp.task("media",()=>{gulp.src("media/**/*").pipe(gulp.dest("app/media"))}),gulp.task("msg",()=>{gulp.src("msg/**/*").pipe(gulp.dest("app/msg"))}),gulp.task("phaser_core",()=>{gulp.src("phaser_core/**/*.js").pipe(minify(options)).pipe(addsrc(["phaser_core/**/*","!phaser_core/**/*.js"])).pipe(gulp.dest("app/phaser_core"))}),gulp.task("project",()=>{gulp.src("project/**/*.js").pipe(minify(options)).pipe(addsrc(["project/**/*","!project/**/*.js"])).pipe(gulp.dest("app/project"))}),gulp.task("static",()=>{gulp.src("static/**/*").pipe(gulp.dest("app/static"))}),gulp.task("workspace",()=>{gulp.src("workspace/**/*.js").pipe(minify(options)).pipe(addsrc(["workspace/**/*","!workspace/**/*.js"])).pipe(gulp.dest("app/workspace"))}),gulp.task("blocklyBuild",p=>{exec("python build.py",function(e,s,t){console.log(s),console.log(t),p(e)})}),gulp.task("default",["buildCurrentPlatform"]);