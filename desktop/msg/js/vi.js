// This file was automatically generated.  Do not modify.
'use strict';
goog.provide('Blockly.Msg.vi');
goog.require('Blockly.Msg');
Blockly.Msg.ACCELERATEMOTORS_FIELD_1 = "accelerate motors";  // untranslated
Blockly.Msg.ACCELERATEMOTORS_FIELD_2 = "start speed";  // untranslated
Blockly.Msg.ACCELERATEMOTORS_FIELD_3 = "end speed";  // untranslated
Blockly.Msg.ACCELERATEMOTORS_FIELD_4 = "duration";  // untranslated
Blockly.Msg.ACCELERATEMOTORS_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.ACCELERATEMOTORS_TOOLTIP = "Accelerates from the start to the end speed over the specified duration";  // untranslated
Blockly.Msg.ACCELERATION_FROM_ROTATION_FIELD_1 = "get forward acceleration from rotation";  // untranslated
Blockly.Msg.ACCELERATION_FROM_ROTATION_FIELD_2 = "at";  // untranslated
Blockly.Msg.ACCELERATION_FROM_ROTATION_FIELD_3 = "pixels/second^2";  // untranslated
Blockly.Msg.ACCELERATION_FROM_ROTATION_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.html#accelerationFromRotation";  // untranslated
Blockly.Msg.ACCELERATION_FROM_ROTATION_TOOLTIP = "Creates an (x, y) acceleration that goes forward from the given rotation. Returns it as a point.";  // untranslated
Blockly.Msg.ADDEMITTER_FIELD_1 = "add emitter";  // untranslated
Blockly.Msg.ADDEMITTER_FIELD_2 = "x";  // untranslated
Blockly.Msg.ADDEMITTER_FIELD_3 = "y";  // untranslated
Blockly.Msg.ADDEMITTER_FIELD_4 = "maxParticles";  // untranslated
Blockly.Msg.ADDEMITTER_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Particles.Arcade.Emitter.html";  // untranslated
Blockly.Msg.ADDEMITTER_TOOLTIP = "Create a particle emitter";  // untranslated
Blockly.Msg.ADDSPRITEWITHATLAS_FIELD_1 = "load atlas image";  // untranslated
Blockly.Msg.ADDSPRITEWITHATLAS_FIELD_2 = "tag";  // untranslated
Blockly.Msg.ADDSPRITEWITHATLAS_FIELD_3 = "spritesheet source";  // untranslated
Blockly.Msg.ADDSPRITEWITHATLAS_FIELD_4 = "texture atlas xml";  // untranslated
Blockly.Msg.ADDSPRITEWITHATLAS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Loader.html#atlasXML";  // untranslated
Blockly.Msg.ADDSPRITEWITHATLAS_TOOLTIP = "Loads a texture atlas into the game. These take more effort to set up, but can contain every animation you want for a single character. See the help for more info.";  // untranslated
Blockly.Msg.ADD_ANIMATION_FIELD_1 = "add animation to";  // untranslated
Blockly.Msg.ADD_ANIMATION_FIELD_2 = "tagged";  // untranslated
Blockly.Msg.ADD_ANIMATION_FIELD_3 = "with frames";  // untranslated
Blockly.Msg.ADD_ANIMATION_FIELD_4 = "displayed at";  // untranslated
Blockly.Msg.ADD_ANIMATION_FIELD_5 = "FPS";  // untranslated
Blockly.Msg.ADD_ANIMATION_FIELD_6 = "loop";  // untranslated
Blockly.Msg.ADD_ANIMATION_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#add";  // untranslated
Blockly.Msg.ADD_ANIMATION_NAME_TEXT_DEFAULT = "name";  // untranslated
Blockly.Msg.ADD_ANIMATION_TOOLTIP = "Add an animation to an object based on a list of frames";  // untranslated
Blockly.Msg.ADD_ANIMATION_VI_FIELD_1 = "add animation to";  // untranslated
Blockly.Msg.ADD_ANIMATION_VI_FIELD_2 = "tagged";  // untranslated
Blockly.Msg.ADD_ANIMATION_VI_FIELD_3 = "with frames";  // untranslated
Blockly.Msg.ADD_ANIMATION_VI_FIELD_4 = "displayed at";  // untranslated
Blockly.Msg.ADD_ANIMATION_VI_FIELD_5 = "FPS";  // untranslated
Blockly.Msg.ADD_ANIMATION_VI_FIELD_6 = "loop";  // untranslated
Blockly.Msg.ADD_ANIMATION_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#add";  // untranslated
Blockly.Msg.ADD_ANIMATION_VI_NAME_TEXT_DEFAULT = "name";  // untranslated
Blockly.Msg.ADD_ANIMATION_VI_TOOLTIP = "Add an animation to an object based on a list of frames";  // untranslated
Blockly.Msg.ADD_CHILD_AT_FIELD_1 = "add child";  // untranslated
Blockly.Msg.ADD_CHILD_AT_FIELD_2 = "to";  // untranslated
Blockly.Msg.ADD_CHILD_AT_FIELD_3 = "at index";  // untranslated
Blockly.Msg.ADD_CHILD_AT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#addChildAt";  // untranslated
Blockly.Msg.ADD_CHILD_AT_TOOLTIP = "Add a child to a sprite at a specific index so you can find it later. This will make them move together.";  // untranslated
Blockly.Msg.ADD_CHILD_AT_VI_FIELD_1 = "add child";  // untranslated
Blockly.Msg.ADD_CHILD_AT_VI_FIELD_2 = "to";  // untranslated
Blockly.Msg.ADD_CHILD_AT_VI_FIELD_3 = "at index";  // untranslated
Blockly.Msg.ADD_CHILD_AT_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#addChildAt";  // untranslated
Blockly.Msg.ADD_CHILD_AT_VI_TOOLTIP = "Add a child to a sprite at a specific index so you can find it later. This will make them move together.";  // untranslated
Blockly.Msg.ADD_CHILD_FIELD_1 = "add child object";  // untranslated
Blockly.Msg.ADD_CHILD_FIELD_2 = "to";  // untranslated
Blockly.Msg.ADD_CHILD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#addChild";  // untranslated
Blockly.Msg.ADD_CHILD_TOOLTIP = "Add a child to a sprite. This will make them move together.";  // untranslated
Blockly.Msg.ADD_CHILD_VI_FIELD_1 = "add child object";  // untranslated
Blockly.Msg.ADD_CHILD_VI_FIELD_2 = "to";  // untranslated
Blockly.Msg.ADD_CHILD_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#addChild";  // untranslated
Blockly.Msg.ADD_CHILD_VI_TOOLTIP = "Add a child to a sprite. This will make them move together.";  // untranslated
Blockly.Msg.ADD_COMMENT = "Thêm Chú Giải";
Blockly.Msg.ADD_COMMENT_BLOCK = "Add Comment Block";  // untranslated
Blockly.Msg.ADD_EVENT_LISTENER_DO = "do";  // untranslated
Blockly.Msg.ADD_EVENT_LISTENER_EVENT_TYPE = "for event of type";  // untranslated
Blockly.Msg.ADD_EVENT_LISTENER_HELP_URL = "";  // untranslated
Blockly.Msg.ADD_EVENT_LISTENER_ON = "on";  // untranslated
Blockly.Msg.ADD_EVENT_LISTENER_TITLE = "add event listener to dom element";  // untranslated
Blockly.Msg.ADD_EVENT_LISTENER_TOOLTIP = "";  // untranslated
Blockly.Msg.ADD_IMAGE_FIELD_1 = "add image to game at";  // untranslated
Blockly.Msg.ADD_IMAGE_FIELD_2 = "x";  // untranslated
Blockly.Msg.ADD_IMAGE_FIELD_3 = "y";  // untranslated
Blockly.Msg.ADD_IMAGE_FIELD_4 = "tagged";  // untranslated
Blockly.Msg.ADD_IMAGE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.GameObjectFactory.html#sprite";  // untranslated
Blockly.Msg.ADD_IMAGE_TOOLTIP = "Creates a sprite with the image specified in the tag. The tag needs to be set up with the 'create image' or 'create sprite sheet' blocks.";  // untranslated
Blockly.Msg.ADD_SOUND_FIELD_1 = "add sound";  // untranslated
Blockly.Msg.ADD_SOUND_FIELD_2 = "at volume";  // untranslated
Blockly.Msg.ADD_SOUND_FIELD_3 = "looping";  // untranslated
Blockly.Msg.ADD_SOUND_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.GameObjectFactory.html#audio";  // untranslated
Blockly.Msg.ADD_SOUND_TOOLTIP = "Add a Sound to the game";  // untranslated
Blockly.Msg.ADD_TEXT_FIELD_1 = "add text at";  // untranslated
Blockly.Msg.ADD_TEXT_FIELD_2 = "x";  // untranslated
Blockly.Msg.ADD_TEXT_FIELD_3 = "y";  // untranslated
Blockly.Msg.ADD_TEXT_FIELD_4 = "initial text";  // untranslated
Blockly.Msg.ADD_TEXT_FIELD_5 = "font size";  // untranslated
Blockly.Msg.ADD_TEXT_FIELD_6 = "font colour";  // untranslated
Blockly.Msg.ADD_TEXT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.GameObjectFactory.html#text";  // untranslated
Blockly.Msg.ADD_TEXT_TOOLTIP = "Add text to the screen at the specified location";  // untranslated
Blockly.Msg.ADD_TO_GROUP_FIELD_1 = "add";  // untranslated
Blockly.Msg.ADD_TO_GROUP_FIELD_2 = "to group";  // untranslated
Blockly.Msg.ADD_TO_GROUP_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#add";  // untranslated
Blockly.Msg.ADD_TO_GROUP_TOOLTIP = "Adds an existing object to a group.";  // untranslated
Blockly.Msg.ADD_TO_WORLD_FIELD_1 = "add";  // untranslated
Blockly.Msg.ADD_TO_WORLD_FIELD_2 = "to the world";  // untranslated
Blockly.Msg.ADD_TO_WORLD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.World.html#add";  // untranslated
Blockly.Msg.ADD_TO_WORLD_TOOLTIP = "Adds an existing object to the world group. Necessary for making an object that has been previously removed from a  group visible again.";  // untranslated
Blockly.Msg.ADVANCED_IO_BIT_FIRST = "most significant bit first";  // untranslated
Blockly.Msg.ADVANCED_IO_BIT_ORDER = "bit order";  // untranslated
Blockly.Msg.ADVANCED_IO_CLOCK_PIN = "clock pin";  // untranslated
Blockly.Msg.ADVANCED_IO_DATA_PIN = "data pin";  // untranslated
Blockly.Msg.ADVANCED_IO_LEAST_SIGNIFICANT_BIT_FIRST = "least significant bit first";  // untranslated
Blockly.Msg.ADVANCED_IO_PULSE_IN = "pulse in";  // untranslated
Blockly.Msg.ADVANCED_IO_PULSE_IN_HELP_URL = "https://www.arduino.cc/reference/en/language/functions/advanced-io/pulsein/";  // untranslated
Blockly.Msg.ADVANCED_IO_PULSE_IN_LONG = "pulse in long";  // untranslated
Blockly.Msg.ADVANCED_IO_PULSE_IN_LONG_HELP_URL = "https://www.arduino.cc/reference/en/language/functions/advanced-io/pulseinlong/";  // untranslated
Blockly.Msg.ADVANCED_IO_PULSE_IN_LONG_TOOLTIP = "Reads a HIGH or LOW pulse from a pin returning the duration";  // untranslated
Blockly.Msg.ADVANCED_IO_PULSE_IN_TOOLTIP = "Reads a HIGH or LOW pulse from a pin returning the duration";  // untranslated
Blockly.Msg.ADVANCED_IO_SHIFT_IN = "shift in";  // untranslated
Blockly.Msg.ADVANCED_IO_SHIFT_IN_HELP_URL = "https://www.arduino.cc/reference/en/language/functions/advanced-io/shiftin/";  // untranslated
Blockly.Msg.ADVANCED_IO_SHIFT_IN_TOOLTIP = "Shifts in a byte of data at a time, this is software based";  // untranslated
Blockly.Msg.ADVANCED_IO_SHIFT_OUT = "shift out";  // untranslated
Blockly.Msg.ADVANCED_IO_SHIFT_OUT_HELP_URL = "https://www.arduino.cc/reference/en/language/functions/advanced-io/shiftout/";  // untranslated
Blockly.Msg.ADVANCED_IO_SHIFT_OUT_TOOLTIP = "Shifts out a byte of data at a time, this is software based";  // untranslated
Blockly.Msg.ALIGN_IN_FIELD_1 = "align";  // untranslated
Blockly.Msg.ALIGN_IN_FIELD_2 = "inside";  // untranslated
Blockly.Msg.ALIGN_IN_FIELD_3 = "at the";  // untranslated
Blockly.Msg.ALIGN_IN_FIELD_4 = "offset x pixels";  // untranslated
Blockly.Msg.ALIGN_IN_FIELD_5 = "offset y pixels";  // untranslated
Blockly.Msg.ALIGN_IN_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#alignIn";  // untranslated
Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_1 = "top left";  // untranslated
Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_2 = "top center";  // untranslated
Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_3 = "top right";  // untranslated
Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_4 = "left center";  // untranslated
Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_5 = "center";  // untranslated
Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_6 = "right center";  // untranslated
Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_7 = "bottom left";  // untranslated
Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_8 = "bottom center";  // untranslated
Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_9 = "bottom right";  // untranslated
Blockly.Msg.ALIGN_IN_TOOLTIP = "Aligns this Game Object within another Game Object, or Rectangle, to one of 9 possible positions.";  // untranslated
Blockly.Msg.ALIGN_TO_FIELD_1 = "align";  // untranslated
Blockly.Msg.ALIGN_TO_FIELD_2 = "to";  // untranslated
Blockly.Msg.ALIGN_TO_FIELD_3 = "at the";  // untranslated
Blockly.Msg.ALIGN_TO_FIELD_4 = "offset x pixels";  // untranslated
Blockly.Msg.ALIGN_TO_FIELD_5 = "offset y pixels";  // untranslated
Blockly.Msg.ALIGN_TO_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#alignTo";  // untranslated
Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_1 = "top left";  // untranslated
Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_10 = "bottom left";  // untranslated
Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_11 = "bottom center";  // untranslated
Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_12 = "bottom right";  // untranslated
Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_2 = "top center";  // untranslated
Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_3 = "top right";  // untranslated
Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_4 = "left top";  // untranslated
Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_5 = "left center";  // untranslated
Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_6 = "left bottom";  // untranslated
Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_7 = "right top";  // untranslated
Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_8 = "right center";  // untranslated
Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_9 = "right bottom";  // untranslated
Blockly.Msg.ALIGN_TO_TOOLTIP = "Aligns this Game Object to the side of another Game Object, or Rectangle, in one of 12 possible positions.";  // untranslated
Blockly.Msg.ANALOG_READ_FIELD_1 = "analog read pin #";  // untranslated
Blockly.Msg.ANALOG_READ_HELP_URL = "https://www.arduino.cc/en/Reference/AnalogRead";  // untranslated
Blockly.Msg.ANALOG_READ_TOOLTIP = "Read the value from the given analog pin";  // untranslated
Blockly.Msg.ANALOG_REFERENCE_FIELD_1 = "set analog reference to";  // untranslated
Blockly.Msg.ANALOG_REFERENCE_HELP_URL = "https://www.arduino.cc/en/Reference/AnalogReference";  // untranslated
Blockly.Msg.ANALOG_REFERENCE_TOOLTIP = "Set the reference voltage for analog input";  // untranslated
Blockly.Msg.ANALOG_REFERENCE_TYPE_DROPDOWN_1 = "DEFAULT";  // untranslated
Blockly.Msg.ANALOG_REFERENCE_TYPE_DROPDOWN_2 = "EXTERNAL";  // untranslated
Blockly.Msg.ANALOG_REFERENCE_TYPE_DROPDOWN_3 = "INTERNAL (Not Available on Mega)";  // untranslated
Blockly.Msg.ANALOG_REFERENCE_TYPE_DROPDOWN_4 = "INTERNAL1V1 (Mega Only)";  // untranslated
Blockly.Msg.ANALOG_REFERENCE_TYPE_DROPDOWN_5 = "INTERNAL2V56 (Mega Only)";  // untranslated
Blockly.Msg.ANALOG_WRITE_FIELD_1 = "analog write ";  // untranslated
Blockly.Msg.ANALOG_WRITE_FIELD_2 = "to pin #";  // untranslated
Blockly.Msg.ANALOG_WRITE_HELP_URL = "https://www.arduino.cc/en/Reference/AnalogWrite";  // untranslated
Blockly.Msg.ANALOG_WRITE_TOOLTIP = "";  // untranslated
Blockly.Msg.ANIMATION_DESTROY_FIELD_1 = "destroy all animations in animation manager of ";  // untranslated
Blockly.Msg.ANIMATION_DESTROY_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#validateFrames";  // untranslated
Blockly.Msg.ANIMATION_DESTROY_TOOLTIP = "Destroy all animations on the object.";  // untranslated
Blockly.Msg.ANIMATION_DESTROY_VI_FIELD_1 = "destroy all animations in animation manager of ";  // untranslated
Blockly.Msg.ANIMATION_DESTROY_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#destroy";  // untranslated
Blockly.Msg.ANIMATION_DESTROY_VI_TOOLTIP = "Destroy all animations on the object.";  // untranslated
Blockly.Msg.ANIMATION_GET_ANIMATION_FIELD_1 = "on gameobject";  // untranslated
Blockly.Msg.ANIMATION_GET_ANIMATION_FIELD_2 = "get animation by name";  // untranslated
Blockly.Msg.ANIMATION_GET_ANIMATION_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#getAnimation";  // untranslated
Blockly.Msg.ANIMATION_GET_ANIMATION_NAME_TEXT_DEFAULT = "default";  // untranslated
Blockly.Msg.ANIMATION_GET_ANIMATION_TOOLTIP = "Returns an animation that was previously added by name.";  // untranslated
Blockly.Msg.ANIMATION_NEXT_FIELD_1 = "increment current animation by";  // untranslated
Blockly.Msg.ANIMATION_NEXT_FIELD_2 = "on ";  // untranslated
Blockly.Msg.ANIMATION_NEXT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#next";  // untranslated
Blockly.Msg.ANIMATION_NEXT_TOOLTIP = "Increment the current animation by a given amount of frames.";  // untranslated
Blockly.Msg.ANIMATION_NEXT_VI_FIELD_1 = "increment current animation by";  // untranslated
Blockly.Msg.ANIMATION_NEXT_VI_FIELD_2 = "frames";  // untranslated
Blockly.Msg.ANIMATION_NEXT_VI_FIELD_3 = "for";  // untranslated
Blockly.Msg.ANIMATION_NEXT_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#next";  // untranslated
Blockly.Msg.ANIMATION_NEXT_VI_TOOLTIP = "Increment the current animation by a given amount of frames.";  // untranslated
Blockly.Msg.ANIMATION_PREVIOUS_FIELD_1 = "decrement current animation by";  // untranslated
Blockly.Msg.ANIMATION_PREVIOUS_FIELD_2 = "on ";  // untranslated
Blockly.Msg.ANIMATION_PREVIOUS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#previous";  // untranslated
Blockly.Msg.ANIMATION_PREVIOUS_TOOLTIP = "Decrement the current animation by a given amount of frames.";  // untranslated
Blockly.Msg.ANIMATION_PREVIOUS_VI_FIELD_1 = "decrement current animation by";  // untranslated
Blockly.Msg.ANIMATION_PREVIOUS_VI_FIELD_2 = "frames";  // untranslated
Blockly.Msg.ANIMATION_PREVIOUS_VI_FIELD_3 = "for";  // untranslated
Blockly.Msg.ANIMATION_PREVIOUS_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#previous";  // untranslated
Blockly.Msg.ANIMATION_PREVIOUS_VI_TOOLTIP = "Decrement the current animation by a given amount of frames.";  // untranslated
Blockly.Msg.ANIMATION_UPDATE_FIELD_1 = "frame update of ";  // untranslated
Blockly.Msg.ANIMATION_UPDATE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#update";  // untranslated
Blockly.Msg.ANIMATION_UPDATE_TOOLTIP = "Internal method do not call";  // untranslated
Blockly.Msg.ARDUINO_MATH_MAP = "map";  // untranslated
Blockly.Msg.ARDUINO_MATH_MAP_FROM_HIGH = "from high";  // untranslated
Blockly.Msg.ARDUINO_MATH_MAP_FROM_LOW = "from low";  // untranslated
Blockly.Msg.ARDUINO_MATH_MAP_TO_HIGH = "to high";  // untranslated
Blockly.Msg.ARDUINO_MATH_MAP_TO_LOW = "to low";  // untranslated
Blockly.Msg.ARDUINO_MATH_MAP_VALUE = "value";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_AVAILABLE = "serial available";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_AVAILABLE_FOR_WRITE = "serial available for write";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_AVAILABLE_FOR_WRITE_HELP_URL = "https://www.arduino.cc/reference/en/language/functions/communication/serial/availableforwrite/";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_AVAILABLE_FOR_WRITE_TOOLTIP = "Gets the number of bytes available to write";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_AVAILABLE_HELP_URL = "https://www.arduino.cc/reference/en/language/functions/communication/serial/available/";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_AVAILABLE_TOOLTIP = "Gets the number of bytes available to be read";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_FIND = "serial find";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_FIND_HELP_URL = "https://www.arduino.cc/reference/en/language/functions/communication/serial/find/";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_FIND_TOOLTIP = "Returns true if the target string is found in the serial stream else false";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_FIND_UNTIL = "serial find";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_FIND_UNTIL_HELP_URL = "https://www.arduino.cc/reference/en/language/functions/communication/serial/finduntil/";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_FIND_UNTIL_TOOLTIP = "Returns true if the target string is found in the serial stream else false if timeout or terminal is found";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_FLUSH = "serial flush";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_FLUSH_HELP_URL = "https://www.arduino.cc/reference/en/language/functions/communication/serial/flush/";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_FLUSH_TOOLTIP = "wait fo outgoing serial data to complete";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_PARSE_FLOAT = "serial parse float";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_PARSE_FLOAT_HELP_URL = "https://www.arduino.cc/reference/en/language/functions/communication/serial/parsefloat/";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_PARSE_FLOAT_TOOLTIP = "read the first valid float form the serial stream";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_PARSE_INT = "serial parse integer";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_PARSE_INT_HELP_URL = "https://www.arduino.cc/reference/en/language/functions/communication/serial/parseint/";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_PARSE_INT_TOOLTIP = "read the first valid integer form the serial stream";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_PEEK = "serial peek next byte";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_PEEK_HELP_URL = "https://www.arduino.cc/reference/en/language/functions/communication/serial/peek/";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_PEEK_TOOLTIP = "gets the next byte without removing it from the stream";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_READ_BYTES = "serial read bytes into";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_READ_BYTES_HELP_URL = "https://www.arduino.cc/reference/en/language/functions/communication/serial/readbytesuntil/";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_READ_BYTES_TOOLTIP = "gets the next byte without removing it from the stream";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_READ_BYTES_UNTIL = "serial read bytes into";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_READ_BYTES_UNTIL_HELP_URL = "https://www.arduino.cc/reference/en/language/functions/communication/serial/readbytesuntil/";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_READ_BYTES_UNTIL_TERMINAL = "or until";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_READ_BYTES_UNTIL_TOOLTIP = "gets the next byte without removing it from the stream";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_READ_BYTES_UP_TO = "up to length";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_SET_TIMEOUT = "serial set timeout to";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_SET_TIMEOUT_HELP_URL = "https://www.arduino.cc/reference/en/language/functions/communication/serial/settimeout/";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_SET_TIMEOUT_TOOLTIP = "sets the max milliseconds to wait for serial data, defaults to 1000 milliseconds";  // untranslated
Blockly.Msg.ARDUINO_SERIAL_UNTIL = "until";  // untranslated
Blockly.Msg.AT_POSITION = "at position";  // untranslated
Blockly.Msg.AUTO_DESTROY = "auto destroy";  // untranslated
Blockly.Msg.BEEPMS_FIELD_1 = "beep";  // untranslated
Blockly.Msg.BEEPMS_FIELD_2 = "milliseconds";  // untranslated
Blockly.Msg.BEEPMS_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.BEEPMS_TOOLTIP = "beeps for a specified duration";  // untranslated
Blockly.Msg.BEEPOFF_FIELD_1 = "turn beep off";  // untranslated
Blockly.Msg.BEEPOFF_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.BEEPOFF_TOOLTIP = "Turns off the beep. Phew.";  // untranslated
Blockly.Msg.BEEPON_FIELD_1 = "turn beep on";  // untranslated
Blockly.Msg.BEEPON_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.BEEPON_TOOLTIP = "Turns on the beep until it's told to stop;";  // untranslated
Blockly.Msg.BEGIN_NAVIGATION_FIELD_1 = "begin navigation";  // untranslated
Blockly.Msg.BEGIN_NAVIGATION_TOOLTIP = "";  // untranslated
Blockly.Msg.BESTILL_FIELD_1 = "be still";  // untranslated
Blockly.Msg.BESTILL_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.BESTILL_TOOLTIP = "Stops the wink robot from moving";  // untranslated
Blockly.Msg.BIT_CLEAR_FIELD_1 = "Clear bit";  // untranslated
Blockly.Msg.BIT_CLEAR_FIELD_2 = "from Number";  // untranslated
Blockly.Msg.BIT_CLEAR_HELP_URL = "https://www.arduino.cc/en/Reference/BitClear";  // untranslated
Blockly.Msg.BIT_CLEAR_TOOLTIP = "";  // untranslated
Blockly.Msg.BIT_FIELD_1 = "Value of bit";  // untranslated
Blockly.Msg.BIT_HELP_URL = "https://www.arduino.cc/en/Reference/Bit";  // untranslated
Blockly.Msg.BIT_READ_FIELD_1 = "Read Number";  // untranslated
Blockly.Msg.BIT_READ_FIELD_2 = "at Position";  // untranslated
Blockly.Msg.BIT_READ_HELP_URL = "https://www.arduino.cc/en/Reference/BitRead";  // untranslated
Blockly.Msg.BIT_READ_TOOLTIP = "";  // untranslated
Blockly.Msg.BIT_SET_FIELD_1 = "Set bit";  // untranslated
Blockly.Msg.BIT_SET_FIELD_2 = "in Number";  // untranslated
Blockly.Msg.BIT_SET_HELP_URL = "https://www.arduino.cc/en/Reference/BitSet";  // untranslated
Blockly.Msg.BIT_SET_TOOLTIP = "";  // untranslated
Blockly.Msg.BIT_TOOLTIP = "";  // untranslated
Blockly.Msg.BIT_WRITE_FIELD_1 = "Set Number";  // untranslated
Blockly.Msg.BIT_WRITE_FIELD_2 = "at Position";  // untranslated
Blockly.Msg.BIT_WRITE_FIELD_3 = "with Value";  // untranslated
Blockly.Msg.BIT_WRITE_HELP_URL = "https://www.arduino.cc/en/Reference/BitWrite";  // untranslated
Blockly.Msg.BIT_WRITE_TOOLTIP = "";  // untranslated
Blockly.Msg.BRING_TO_TOP_FIELD_1 = "bring";  // untranslated
Blockly.Msg.BRING_TO_TOP_FIELD_2 = "to the front";  // untranslated
Blockly.Msg.BRING_TO_TOP_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#bringToTop";  // untranslated
Blockly.Msg.BRING_TO_TOP_TOOLTIP = "Brings this sprite/image to the front of the display order. In case of overlapping sprites, this one will draw on top of everything else.";  // untranslated
Blockly.Msg.BUTTONWAIT_FIELD_1 = "wait for button press";  // untranslated
Blockly.Msg.BUTTONWAIT_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.BUTTONWAIT_TOOLTIP = "Waits until a remote button is pressed to continue.";  // untranslated
Blockly.Msg.BUTTON_PRESSED = "button pressed";  // untranslated
Blockly.Msg.BUTTON_PRESSED_FIELD_1 = "button pressed";  // untranslated
Blockly.Msg.BUTTON_PRESSED_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.BUTTON_PRESSED_TOOLTIP = "";  // untranslated
Blockly.Msg.BY = "by";  // untranslated
Blockly.Msg.CALIBRATE_NAVIGATION_SENSORS_FIELD_1 = "calibrate navigation sensors";  // untranslated
Blockly.Msg.CALIBRATE_NAVIGATION_SENSORS_TOOLTIP = "";  // untranslated
Blockly.Msg.CALL = "call";  // untranslated
Blockly.Msg.CALL_FUNCTION_ON_GROUP_FIELD_1 = "Call function";  // untranslated
Blockly.Msg.CALL_FUNCTION_ON_GROUP_FIELD_2 = "on all children in group";  // untranslated
Blockly.Msg.CALL_FUNCTION_ON_GROUP_FUNCTION_TEXT_DEFAULT = "functionName";  // untranslated
Blockly.Msg.CALL_FUNCTION_ON_GROUP_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#forEachAlive";  // untranslated
Blockly.Msg.CALL_FUNCTION_ON_GROUP_TOOLTIP = "Calls the specified function once for each group member, giving that child as the input.";  // untranslated
Blockly.Msg.CAMERA_FADE_FIELD_1 = "fade screen to";  // untranslated
Blockly.Msg.CAMERA_FADE_FIELD_2 = "over";  // untranslated
Blockly.Msg.CAMERA_FADE_FIELD_3 = "milliseconds";  // untranslated
Blockly.Msg.CAMERA_FADE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Camera.html#fade";  // untranslated
Blockly.Msg.CAMERA_FADE_TOOLTIP = "Fades the screen to the specified colour over time. Ends with the screen completely obscured.";  // untranslated
Blockly.Msg.CAMERA_FLASH_FIELD_1 = "flash screen to";  // untranslated
Blockly.Msg.CAMERA_FLASH_FIELD_2 = "then fade in over";  // untranslated
Blockly.Msg.CAMERA_FLASH_FIELD_3 = "milliseconds";  // untranslated
Blockly.Msg.CAMERA_FLASH_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Camera.html#flash";  // untranslated
Blockly.Msg.CAMERA_FLASH_TOOLTIP = "Immediately covers the camera with the specified colour. Then fades back in over a given time. Useful for fading back in after fading out, or as a big hit effect.";  // untranslated
Blockly.Msg.CAMERA_FOCUS_ON_FIELD_1 = "focus camera on";  // untranslated
Blockly.Msg.CAMERA_FOCUS_ON_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Camera.html#focusOn";  // untranslated
Blockly.Msg.CAMERA_FOCUS_ON_TOOLTIP = "Immediately centers the camera on the specified game object.";  // untranslated
Blockly.Msg.CAMERA_FOCUS_ON_XY_FIELD_1 = "focus camera on position at";  // untranslated
Blockly.Msg.CAMERA_FOCUS_ON_XY_FIELD_2 = "x";  // untranslated
Blockly.Msg.CAMERA_FOCUS_ON_XY_FIELD_3 = "y";  // untranslated
Blockly.Msg.CAMERA_FOCUS_ON_XY_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Camera.html#focusOnXY";  // untranslated
Blockly.Msg.CAMERA_FOCUS_ON_XY_TOOLTIP = "Immediately centers the camera on a given position.";  // untranslated
Blockly.Msg.CAMERA_FOLLOW_FIELD_1 = "make camera follow";  // untranslated
Blockly.Msg.CAMERA_FOLLOW_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Camera.html#follow";  // untranslated
Blockly.Msg.CAMERA_FOLLOW_TOOLTIP = "Make the camera follow the specified game object";  // untranslated
Blockly.Msg.CAMERA_FOLLOW_VI_FIELD_1 = "make camera follow";  // untranslated
Blockly.Msg.CAMERA_FOLLOW_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Camera.html#follow";  // untranslated
Blockly.Msg.CAMERA_FOLLOW_VI_STYLED_FIELD_1 = "make camera follow";  // untranslated
Blockly.Msg.CAMERA_FOLLOW_VI_STYLED_FIELD_2 = "with style";  // untranslated
Blockly.Msg.CAMERA_FOLLOW_VI_STYLED_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Camera.html#follow";  // untranslated
Blockly.Msg.CAMERA_FOLLOW_VI_STYLED_STYLE_DROPDOWN_1 = "lockon";  // untranslated
Blockly.Msg.CAMERA_FOLLOW_VI_STYLED_STYLE_DROPDOWN_2 = "platformer";  // untranslated
Blockly.Msg.CAMERA_FOLLOW_VI_STYLED_STYLE_DROPDOWN_3 = "topdown";  // untranslated
Blockly.Msg.CAMERA_FOLLOW_VI_STYLED_STYLE_DROPDOWN_4 = "topdown tight";  // untranslated
Blockly.Msg.CAMERA_FOLLOW_VI_STYLED_TOOLTIP = "Make the camera follow the specified game object";  // untranslated
Blockly.Msg.CAMERA_FOLLOW_VI_TOOLTIP = "Make the camera follow the specified game object";  // untranslated
Blockly.Msg.CAMERA_RESET_FIELD_1 = "reset camera";  // untranslated
Blockly.Msg.CAMERA_RESET_FX_FIELD_1 = "reset camera effects";  // untranslated
Blockly.Msg.CAMERA_RESET_FX_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Camera.html#resetFX";  // untranslated
Blockly.Msg.CAMERA_RESET_FX_TOOLTIP = "Removes visual effects from the camera such as fading in/out. Does not affect the position, follow target, or screen shake.";  // untranslated
Blockly.Msg.CAMERA_RESET_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Camera.html#reset";  // untranslated
Blockly.Msg.CAMERA_RESET_TOOLTIP = "Completely resets the camera. It goes back to (0, 0), stops following anything, and removes all effects such as shake or flash.";  // untranslated
Blockly.Msg.CAMERA_SET_BOUNDS_TO_WORLD_FIELD_1 = "set camera bounds to world bounds";  // untranslated
Blockly.Msg.CAMERA_SET_BOUNDS_TO_WORLD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Camera.html#setBoundsToWorld";  // untranslated
Blockly.Msg.CAMERA_SET_BOUNDS_TO_WORLD_TOOLTIP = "The camera bounds are not the size of what it shows, but the space it can move around in. This sets those bounds so that the camera can view the entire world, but nothing more.";  // untranslated
Blockly.Msg.CAMERA_SET_POSITION_FIELD_1 = "set camera position to";  // untranslated
Blockly.Msg.CAMERA_SET_POSITION_FIELD_2 = "x";  // untranslated
Blockly.Msg.CAMERA_SET_POSITION_FIELD_3 = "y";  // untranslated
Blockly.Msg.CAMERA_SET_POSITION_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Camera.html#setPosition";  // untranslated
Blockly.Msg.CAMERA_SET_POSITION_TOOLTIP = "Jumps the camera immediately to the given position. Note that the camera's position is its upper left corner, not its center.";  // untranslated
Blockly.Msg.CAMERA_SET_SIZE_FIELD_1 = "set camera size";  // untranslated
Blockly.Msg.CAMERA_SET_SIZE_FIELD_2 = "width";  // untranslated
Blockly.Msg.CAMERA_SET_SIZE_FIELD_3 = "height";  // untranslated
Blockly.Msg.CAMERA_SET_SIZE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Camera.html#setSize";  // untranslated
Blockly.Msg.CAMERA_SET_SIZE_TOOLTIP = "Sets the size of the camera's view window.";  // untranslated
Blockly.Msg.CAMERA_SHAKE_DIRECTION_DROPDOWN_1 = "horizontal and vertical";  // untranslated
Blockly.Msg.CAMERA_SHAKE_DIRECTION_DROPDOWN_2 = "vertically";  // untranslated
Blockly.Msg.CAMERA_SHAKE_DIRECTION_DROPDOWN_3 = "horizontally";  // untranslated
Blockly.Msg.CAMERA_SHAKE_FIELD_1 = "shake the camera";  // untranslated
Blockly.Msg.CAMERA_SHAKE_FIELD_2 = "% intensity";  // untranslated
Blockly.Msg.CAMERA_SHAKE_FIELD_3 = "for";  // untranslated
Blockly.Msg.CAMERA_SHAKE_FIELD_4 = "milliseconds";  // untranslated
Blockly.Msg.CAMERA_SHAKE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Camera.html#shake";  // untranslated
Blockly.Msg.CAMERA_SHAKE_TOOLTIP = "Screen shake. Great for impact effects, or just a little extra umph, but don't go overboard. The intensity goes from 0 to 1. % of bounds it can move";  // untranslated
Blockly.Msg.CAMERA_UNFOLLOW_FIELD_1 = "stop camera follow";  // untranslated
Blockly.Msg.CAMERA_UNFOLLOW_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Camera.html#unfollow";  // untranslated
Blockly.Msg.CAMERA_UNFOLLOW_TOOLTIP = "Makes the camera stop following anything. Equivalent to making the camera follow null.";  // untranslated
Blockly.Msg.CANNOT_DELETE_VARIABLE_PROCEDURE = "Can't delete the variable '%1' because it is part of the definition of the procedure '%2'";  // untranslated
Blockly.Msg.CAST_BLOCK_FIELD_1 = "make";  // untranslated
Blockly.Msg.CAST_BLOCK_FIELD_2 = "a";  // untranslated
Blockly.Msg.CAST_BLOCK_HELP_URL = "https://en.wikipedia.org/wiki/Type_conversion";  // untranslated
Blockly.Msg.CAST_BLOCK_TOOLTIP = "";  // untranslated
Blockly.Msg.CENTER_AND_STRETCH_FIELD_1 = "center and stretch phaser";  // untranslated
Blockly.Msg.CENTER_AND_STRETCH_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.ScaleManager.html#scaleMode";  // untranslated
Blockly.Msg.CENTER_AND_STRETCH_TOOLTIP = "Tells Phaser to center and stretch the game view to fit its window.";  // untranslated
Blockly.Msg.CHANGE_VALUE_TITLE = "Thay giá trị thành:";
Blockly.Msg.CHECK_OVERLAP_FIELD_1 = "Check Overlap Between";  // untranslated
Blockly.Msg.CHECK_OVERLAP_FIELD_2 = "and";  // untranslated
Blockly.Msg.CHECK_OVERLAP_FIELD_3 = "calling";  // untranslated
Blockly.Msg.CHECK_OVERLAP_FIELD_4 = "if overlapping";  // untranslated
Blockly.Msg.CHECK_OVERLAP_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.html#overlap";  // untranslated
Blockly.Msg.CHECK_OVERLAP_NAME_TEXT_DEFAULT = "functionName";  // untranslated
Blockly.Msg.CHECK_OVERLAP_TOOLTIP = "Checks for an overlap between objectA and objectB.";  // untranslated
Blockly.Msg.CHECK_OVERLAP_VI_FIELD_1 = "check overlap between";  // untranslated
Blockly.Msg.CHECK_OVERLAP_VI_FIELD_2 = "and";  // untranslated
Blockly.Msg.CHECK_OVERLAP_VI_FIELD_3 = "calling";  // untranslated
Blockly.Msg.CHECK_OVERLAP_VI_FIELD_4 = "if overlapping";  // untranslated
Blockly.Msg.CHECK_OVERLAP_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.html#overlap";  // untranslated
Blockly.Msg.CHECK_OVERLAP_VI_NAME_TEXT_DEFAULT = "functionName";  // untranslated
Blockly.Msg.CHECK_OVERLAP_VI_TOOLTIP = "Checks for an overlap between objectA and objectB.";  // untranslated
Blockly.Msg.CHECK_WORLD_BOUNDS_FIELD_1 = "make";  // untranslated
Blockly.Msg.CHECK_WORLD_BOUNDS_FIELD_2 = "check to see if it's inside the world?";  // untranslated
Blockly.Msg.CHECK_WORLD_BOUNDS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#checkWorldBounds";  // untranslated
Blockly.Msg.CHECK_WORLD_BOUNDS_TOOLTIP = "This object will start checking if it's inside the world every frame. This takes time, so it's disabled by default.";  // untranslated
Blockly.Msg.CLASSES_SUPER_CONSTRUCTOR_TITLE = "call super constructor";  // untranslated
Blockly.Msg.CLASS_CONTEXT_CREATE_MEMBER_GETTER = "create in %1 instance get %2";  // untranslated
Blockly.Msg.CLASS_CONTEXT_CREATE_MEMBER_SETTER = "create in %1 instance set %2";  // untranslated
Blockly.Msg.CLASS_CONTEXT_CREATE_THIS = "create 'this'";  // untranslated
Blockly.Msg.CLASS_DEFINITION_CLASS = "class";  // untranslated
Blockly.Msg.CLASS_DEFINITION_CONSTRUCT = "construct with ";  // untranslated
Blockly.Msg.CLASS_DEFINITION_CONSTRUCT_PARAM = "construct %1";  // untranslated
Blockly.Msg.CLASS_DEFINITION_DEFAULT_NAME = "name";  // untranslated
Blockly.Msg.CLASS_DEFINITION_DUPLICATE_WARNING = "Warning: The class constructor has duplicate parameters.";  // untranslated
Blockly.Msg.CLASS_DEFINITION_EXTENDS = "extends";  // untranslated
Blockly.Msg.CLASS_DEFINITION_HELP_URL = "";  // untranslated
Blockly.Msg.CLASS_DEFINITION_METHODS = "methods";  // untranslated
Blockly.Msg.CLASS_DEFINITION_TOOLTIP = "Create %1 with: %2";  // untranslated
Blockly.Msg.CLASS_TYPE_HELP_URL = "";  // untranslated
Blockly.Msg.CLASS_TYPE_TOOLTIP = "";  // untranslated
Blockly.Msg.CLEAN_UP = "Clean up Blocks";  // untranslated
Blockly.Msg.CLEAR_CROPPING_FIELD_1 = "stop cropping";  // untranslated
Blockly.Msg.CLEAR_CROPPING_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#crop";  // untranslated
Blockly.Msg.CLEAR_CROPPING_TOOLTIP = "Removes any cropping from a sprite.";  // untranslated
Blockly.Msg.CLEAR_SCALE_MIN_MAX_FIELD_1 = "clear scale constraints on";  // untranslated
Blockly.Msg.CLEAR_SCALE_MIN_MAX_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#setScaleMinMax";  // untranslated
Blockly.Msg.CLEAR_SCALE_MIN_MAX_TOOLTIP = "If scaling constraints were set on a sprite, this removes them.";  // untranslated
Blockly.Msg.COLLAPSE_ALL = "Thu Nhỏ Mọi Mảnh";
Blockly.Msg.COLLAPSE_BLOCK = "Thu Nhỏ Mảnh";
Blockly.Msg.COLLIDE_FIELD_1 = "Collide";  // untranslated
Blockly.Msg.COLLIDE_FIELD_2 = "with";  // untranslated
Blockly.Msg.COLLIDE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.html#collide";  // untranslated
Blockly.Msg.COLLIDE_TOOLTIP = "Collide the first group/object with the second group/object";  // untranslated
Blockly.Msg.COLLIDE_VI_FIELD_1 = "collide";  // untranslated
Blockly.Msg.COLLIDE_VI_FIELD_2 = "with";  // untranslated
Blockly.Msg.COLLIDE_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.html#collide";  // untranslated
Blockly.Msg.COLLIDE_VI_TOOLTIP = "Collide the first group/object with the second group/object";  // untranslated
Blockly.Msg.COLLIDE_WITH_ARROW_FUNCTION_FIELD_1 = "collide";  // untranslated
Blockly.Msg.COLLIDE_WITH_ARROW_FUNCTION_FIELD_2 = "with";  // untranslated
Blockly.Msg.COLLIDE_WITH_ARROW_FUNCTION_FIELD_3 = "if collided do";  // untranslated
Blockly.Msg.COLLIDE_WITH_ARROW_FUNCTION_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.html#collide";  // untranslated
Blockly.Msg.COLLIDE_WITH_ARROW_FUNCTION_TOOLTIP = "Collide two objects, if they are collide do the statements in the block";  // untranslated
Blockly.Msg.COLLIDE_WITH_WORLD_BOUNDS_FIELD_1 = "Collide";  // untranslated
Blockly.Msg.COLLIDE_WITH_WORLD_BOUNDS_FIELD_2 = "with world bounds";  // untranslated
Blockly.Msg.COLLIDE_WITH_WORLD_BOUNDS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Ninja.Body.html#collideWorldBounds";  // untranslated
Blockly.Msg.COLLIDE_WITH_WORLD_BOUNDS_TOOLTIP = "Make this object collide with the world bounds.";  // untranslated
Blockly.Msg.COLLIDE_WITH_WORLD_BOUNDS_VI_FIELD_1 = "make";  // untranslated
Blockly.Msg.COLLIDE_WITH_WORLD_BOUNDS_VI_FIELD_2 = "collide with world bounds";  // untranslated
Blockly.Msg.COLLIDE_WITH_WORLD_BOUNDS_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Ninja.Body.html#collideWorldBounds";  // untranslated
Blockly.Msg.COLLIDE_WITH_WORLD_BOUNDS_VI_TOOLTIP = "Make this object collide with the world bounds.";  // untranslated
Blockly.Msg.COLOUR = "colour";  // untranslated
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "màu 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "màu 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "tỉ lệ";
Blockly.Msg.COLOUR_BLEND_TITLE = "pha";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Pha hai màu với nhau theo tỉ lệ (0 - 100).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://vi.wikipedia.org/wiki/M%C3%A0u_s%E1%BA%AFc";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Chọn một màu từ bảng màu.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "màu bất kỳ";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "chọn một màu bất kỳ.";
Blockly.Msg.COLOUR_RGB_BLUE = "màu xanh dương";
Blockly.Msg.COLOUR_RGB_GREEN = "màu xanh lá cây";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "màu đỏ";
Blockly.Msg.COLOUR_RGB_TITLE = "Tạo màu từ";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Tạo màu từ ba màu: đỏ, xanh lá cây, xanh dương với số lượng cụ thể.  Mỗi số phải có giá trị từ 0 đến 100.";
Blockly.Msg.CONSOLE_LOG_HELP_URL = "";  // untranslated
Blockly.Msg.CONSOLE_LOG_TITLE = "console log";  // untranslated
Blockly.Msg.CONSOLE_LOG_TOOLTIP = "";  // untranslated
Blockly.Msg.CONTAINS_FIELD_1 = "is";  // untranslated
Blockly.Msg.CONTAINS_FIELD_2 = "a child of";  // untranslated
Blockly.Msg.CONTAINS_FIELD_3 = "?";  // untranslated
Blockly.Msg.CONTAINS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#contains";  // untranslated
Blockly.Msg.CONTAINS_TOOLTIP = "Checks to see if one sprite is the child of another.";  // untranslated
Blockly.Msg.CONTAINS_VI_FIELD_1 = "is";  // untranslated
Blockly.Msg.CONTAINS_VI_FIELD_2 = "a child of";  // untranslated
Blockly.Msg.CONTAINS_VI_FIELD_3 = "?";  // untranslated
Blockly.Msg.CONTAINS_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#contains";  // untranslated
Blockly.Msg.CONTAINS_VI_TOOLTIP = "Checks to see if one sprite is the child of another.";  // untranslated
Blockly.Msg.CONTROLS_DOWHILE_HELPURL = "https://en.wikipedia.org/wiki/Do_while_loop";  // untranslated
Blockly.Msg.CONTROLS_DOWHILE_OPERATOR_UNTIL = "repeat until";  // untranslated
Blockly.Msg.CONTROLS_DOWHILE_OPERATOR_WHILE = "repeat while";  // untranslated
Blockly.Msg.CONTROLS_DOWHILE_TOOLTIP_UNTIL = "Do some statements while a value is false. Always does the statements at least once.";  // untranslated
Blockly.Msg.CONTROLS_DOWHILE_TOOLTIP_WHILE = "Do some statements while a value is true. Always does the statements at least once.";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "thoát";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "sang lần lặp tiếp theo";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Thoát khỏi vòng lặp hiện tại.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Bỏ qua phần còn lại trong vòng lặp này, và sang lần lặp tiếp theo.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Chú ý: Mảnh này chỉ có thế dùng trong các vòng lặp.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "với mỗi thành phần %1 trong danh sách %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Trong một danh sách, lấy từng thành phần, gán vào biến \"%1\", rồi thực hiện một số lệnh.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "đếm theo %1 từ %2 đến %3 mỗi lần thêm %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Đếm từ số đầu đến số cuối. Khi đến mỗi số, gán số vào biến \"%1\" rồi thực hiện các lệnh.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Thêm một điều kiện vào mảnh nếu.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Cuối cùng, khi không điều kiện nào đúng.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Thêm, bỏ, hoặc đổi thứ tự các mảnh con để tạo cấu trúc mới cho mảnh nếu.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "nếu không";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "nếu không nếu";
Blockly.Msg.CONTROLS_IF_MSG_IF = "nếu";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Nếu điều kiện đúng, thực hiện các lệnh.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Nếu điều kiện đúng, thực hiện các lệnh đầu.  Nếu sai, thực hiện các lệnh sau.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Nếu điều kiện đúng, thực hiện các lệnh đầu.  Nếu không, nếu điều kiện thứ hai đúng, thực hiện các lệnh thứ hai.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Nếu điều kiện đúng, thực hiện các lệnh đầu.  Nếu không, nếu điều kiện thứ hai đúng, thực hiện các lệnh thứ hai.  Nếu không điều kiện nào đúng, thực hiện các lệnh cuối cùng.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "thực hiện";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "lặp lại %1 lần";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Thực hiện các lệnh vài lần.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "lặp lại cho đến khi";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "lặp lại trong khi";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Miễn là điều kiện còn sai, thì thực hiện các lệnh.  Khi điều kiện đúng thì ngưng.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Miễn là điều kiện còn đúng, thì thực hiện các lệnh.";
Blockly.Msg.CREATE_BITMAPFONT_FIELD_1 = "Create Font";  // untranslated
Blockly.Msg.CREATE_BITMAPFONT_FIELD_2 = "Tag";  // untranslated
Blockly.Msg.CREATE_BITMAPFONT_FIELD_3 = "Source";  // untranslated
Blockly.Msg.CREATE_BITMAPFONT_FIELD_4 = "XML";  // untranslated
Blockly.Msg.CREATE_BITMAPFONT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Loader.html#bitmapFont";  // untranslated
Blockly.Msg.CREATE_BITMAPFONT_TOOLTIP = "Loads a font into the game. These don't work like normal fonts. See the help for more info.";  // untranslated
Blockly.Msg.CREATE_CURSOR_KEYS_FIELD_1 = "Create Cursor Keys";  // untranslated
Blockly.Msg.CREATE_CURSOR_KEYS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Keyboard.html#createCursorKeys";  // untranslated
Blockly.Msg.CREATE_CURSOR_KEYS_TOOLTIP = "Create a cursor allowing access to the UP/DOWN/LEFT/RIGHT keys";  // untranslated
Blockly.Msg.CREATE_GRAPHICS_OBJECT_FIELD_1 = "create graphics object with offsets";  // untranslated
Blockly.Msg.CREATE_GRAPHICS_OBJECT_FIELD_2 = "x:";  // untranslated
Blockly.Msg.CREATE_GRAPHICS_OBJECT_FIELD_3 = "y:";  // untranslated
Blockly.Msg.CREATE_GRAPHICS_OBJECT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Graphics.html";  // untranslated
Blockly.Msg.CREATE_GRAPHICS_OBJECT_TOOLTIP = "Returns an object that can draw shapes in the world.";  // untranslated
Blockly.Msg.CREATE_GROUP_FIELD_1 = "create group";  // untranslated
Blockly.Msg.CREATE_GROUP_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.GameObjectFactory.html#group";  // untranslated
Blockly.Msg.CREATE_GROUP_TOOLTIP = "Create a new group of display objects";  // untranslated
Blockly.Msg.CREATE_IMAGE_FIELD_1 = "create image";  // untranslated
Blockly.Msg.CREATE_IMAGE_FIELD_2 = "tag";  // untranslated
Blockly.Msg.CREATE_IMAGE_FIELD_3 = "source";  // untranslated
Blockly.Msg.CREATE_IMAGE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Loader.html#image";  // untranslated
Blockly.Msg.CREATE_IMAGE_TOOLTIP = "Loads an image into the game so it can be used.";  // untranslated
Blockly.Msg.CREATE_INSTANCE_OF_CLASS_DEFAULT = "create instance of";  // untranslated
Blockly.Msg.CREATE_INSTANCE_OF_CLASS_HELP_URL = "";  // untranslated
Blockly.Msg.CREATE_INSTANCE_OF_CLASS_TITLE = "create %1 instance";  // untranslated
Blockly.Msg.CREATE_INSTANCE_OF_CLASS_TOOLTIP = "Create an instance of a class.";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_FIELD_1 = "create object at";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_FIELD_2 = "x";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_FIELD_3 = "y";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_FIELD_4 = "from tag";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_FIELD_5 = "in the";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_FIELD_6 = "group";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#create";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_TAG_TEXT_DEFAULT = "default";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_TOOLTIP = "Create a new sprite in the group";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_VI_FIELD_1 = "create object at";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_VI_FIELD_2 = "x";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_VI_FIELD_3 = "y";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_VI_FIELD_4 = "from tag";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_VI_FIELD_5 = "in group";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#create";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_VI_TOOLTIP = "Create a new sprite in the group";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_FIELD_1 = "create object at";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_FIELD_2 = "x";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_FIELD_3 = "y";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_FIELD_4 = "from tag";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_FIELD_5 = "in the";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_FIELD_6 = "group";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_FIELD_7 = "displaying frame #";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#create";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_TAG_TEXT_DEFAULT = "default";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_TOOLTIP = "Creates a sprite in the new group using the specified frame from a sprite sheet or texture atlas";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_VI_FIELD_1 = "create object at";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_VI_FIELD_2 = "x";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_VI_FIELD_3 = "y";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_VI_FIELD_4 = "from tag";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_VI_FIELD_5 = "in group";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_VI_FIELD_6 = "displaying frame";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#create";  // untranslated
Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_VI_TOOLTIP = "Creates a sprite in the new group using the specified frame from a sprite sheet or texture atlas";  // untranslated
Blockly.Msg.CREATE_POINT_FIELD_1 = "Create Point";  // untranslated
Blockly.Msg.CREATE_POINT_FIELD_2 = "X";  // untranslated
Blockly.Msg.CREATE_POINT_FIELD_3 = "Y";  // untranslated
Blockly.Msg.CREATE_POINT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Point.html";  // untranslated
Blockly.Msg.CREATE_POINT_TOOLTIP = "Makes a point type. This is a combination of an x and y value which is used to represent either a position, or a combination of width and height.";  // untranslated
Blockly.Msg.CREATE_SPRITE_SHEET_FIELD_1 = "create sprite sheet";  // untranslated
Blockly.Msg.CREATE_SPRITE_SHEET_FIELD_2 = "tag";  // untranslated
Blockly.Msg.CREATE_SPRITE_SHEET_FIELD_3 = "source";  // untranslated
Blockly.Msg.CREATE_SPRITE_SHEET_FIELD_4 = "frame width";  // untranslated
Blockly.Msg.CREATE_SPRITE_SHEET_FIELD_5 = "pixels";  // untranslated
Blockly.Msg.CREATE_SPRITE_SHEET_FIELD_6 = "frame height";  // untranslated
Blockly.Msg.CREATE_SPRITE_SHEET_FIELD_7 = "pixels";  // untranslated
Blockly.Msg.CREATE_SPRITE_SHEET_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Loader.html#spritesheet";  // untranslated
Blockly.Msg.CREATE_SPRITE_SHEET_TOOLTIP = "Loads a sprite sheet, which is a collection of animation frames in a single image. See the help for more info.";  // untranslated
Blockly.Msg.CREATE_TIMER_TITLE = "create new timer";  // untranslated
Blockly.Msg.CREATE_TIMER_TOOLTIP = "Create a new timer, if auto destroy is true this timer will be destoryed after all events are dispatched";  // untranslated
Blockly.Msg.CREATE_TIMER_URL = "http://dragondrop.digipen.edu/docs/Phaser.Timer.html#Timer";  // untranslated
Blockly.Msg.CROP_FIELD_1 = "crop";  // untranslated
Blockly.Msg.CROP_FIELD_2 = "to";  // untranslated
Blockly.Msg.CROP_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#crop";  // untranslated
Blockly.Msg.CROP_TOOLTIP = "crop a sprite to an area defined by a rectangle or other object";  // untranslated
Blockly.Msg.DEBUG_BODY_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Utils.Debug.html#body";  // untranslated
Blockly.Msg.DEBUG_BODY_INFO = "render body info for";  // untranslated
Blockly.Msg.DEBUG_BODY_INFO_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Utils.Debug.html#bodyInfo";  // untranslated
Blockly.Msg.DEBUG_BODY_INFO_TOOLTIP = "Render a Sprites Physic Body information.";  // untranslated
Blockly.Msg.DEBUG_BODY_TEXT = "debug body";  // untranslated
Blockly.Msg.DEBUG_BODY_TOOLTIP = "Enable debug information for the game object";  // untranslated
Blockly.Msg.DEBUG_CAMERA = "debug camera";  // untranslated
Blockly.Msg.DEBUG_CAMERA_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Utils.Debug.html#camera";  // untranslated
Blockly.Msg.DEBUG_CAMERA_INFO = "render camera info at";  // untranslated
Blockly.Msg.DEBUG_CAMERA_INFO_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Utils.Debug.html#cameraInfo";  // untranslated
Blockly.Msg.DEBUG_CAMERA_INFO_TOOLTIP = "Render camera information including dimensions and location.";  // untranslated
Blockly.Msg.DEBUG_CAMERA_TOOLTIP = "Marks the follow target and deadzone.";  // untranslated
Blockly.Msg.DEBUG_INPUT_INFO = "render mouse info at";  // untranslated
Blockly.Msg.DEBUG_INPUT_INFO_HELP_URL = "";  // untranslated
Blockly.Msg.DEBUG_INPUT_INFO_TOOLTIP = "";  // untranslated
Blockly.Msg.DEBUG_KEY = "render key info for";  // untranslated
Blockly.Msg.DEBUG_KEY_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Utils.Debug.html#key";  // untranslated
Blockly.Msg.DEBUG_KEY_TOOLTIP = "Renders Phaser.Key object information.";  // untranslated
Blockly.Msg.DEBUG_PHSYICS_GROUP = "render body info of group";  // untranslated
Blockly.Msg.DEBUG_PHYSICS_GROUP_CHECK = "only for alive members";  // untranslated
Blockly.Msg.DEBUG_PHYSICS_GROUP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Utils.Debug.html#physicsGroup";  // untranslated
Blockly.Msg.DEBUG_PHYSICS_GROUP_TOOLTIP = "Render each physics body in a group.";  // untranslated
Blockly.Msg.DEBUG_RECTANGLE = "render rectangle";  // untranslated
Blockly.Msg.DEBUG_RECTANGLE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Utils.Debug.html#rectangle";  // untranslated
Blockly.Msg.DEBUG_RECTANGLE_TOOLTIP = "Renders a Rectangle.";  // untranslated
Blockly.Msg.DEBUG_SOUND = "render debug info for sound manager at position";  // untranslated
Blockly.Msg.DEBUG_SOUND_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Utils.Debug.html#sound";  // untranslated
Blockly.Msg.DEBUG_SOUND_INFO = "render debug info for sound";  // untranslated
Blockly.Msg.DEBUG_SOUND_INFO_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Utils.Debug.html#sound";  // untranslated
Blockly.Msg.DEBUG_SOUND_INFO_TOOLTIP = "Render Sound Manager information, including volume, mute, audio mode, and locked status.";  // untranslated
Blockly.Msg.DEBUG_SOUND_TOOLTIP = "Render Sound Manager information, including volume, mute, audio mode, and locked status.";  // untranslated
Blockly.Msg.DEBUG_SPRITE_COORDS = "render coordinates of";  // untranslated
Blockly.Msg.DEBUG_SPRITE_COORDS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Utils.Debug.html#spriteCoords";  // untranslated
Blockly.Msg.DEBUG_SPRITE_COORDS_TOOLTIP = "Renders the sprite coordinates in local, positional and world space.";  // untranslated
Blockly.Msg.DEBUG_SPRITE_FIELD_1 = "write debug for sprite";  // untranslated
Blockly.Msg.DEBUG_SPRITE_FIELD_2 = "at x";  // untranslated
Blockly.Msg.DEBUG_SPRITE_FIELD_3 = "y";  // untranslated
Blockly.Msg.DEBUG_SPRITE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Utils.Debug.html#spriteInfo";  // untranslated
Blockly.Msg.DEBUG_SPRITE_INFO = "render info of sprite";  // untranslated
Blockly.Msg.DEBUG_SPRITE_INFO_HELP_URL = "";  // untranslated
Blockly.Msg.DEBUG_SPRITE_INFO_TOOLTIP = "";  // untranslated
Blockly.Msg.DEBUG_SPRITE_TOOLTIP = "Draws various information useful for debugging about the specified sprite at the given world coordinates.";  // untranslated
Blockly.Msg.DEBUG_TEXT = "render";  // untranslated
Blockly.Msg.DEBUG_TEXT_HELP_URL = "";  // untranslated
Blockly.Msg.DEBUG_TEXT_TOOLTIP = "";  // untranslated
Blockly.Msg.DEFAULT_GRAPHICS_OBJECT_NAME = "graphics";  // untranslated
Blockly.Msg.DEGREES = "degrees";  // untranslated
Blockly.Msg.DELAY = "delay";  // untranslated
Blockly.Msg.DELAY_MICROSECONDS_HELP_URL = "https://www.arduino.cc/en/Reference/DelayMicroseconds";  // untranslated
Blockly.Msg.DELAY_MICROSECONDS_TOOLTIP = "Wait the specified number of microseconds before continuing. There are 1,000,000 microseconds in a second.";  // untranslated
Blockly.Msg.DELAY_MILLISECONDS_HELP_URL = "https://www.arduino.cc/en/Reference/Delay";  // untranslated
Blockly.Msg.DELAY_MILLISECONDS_TOOLTIP = "Wait the specified number of milliseconds before continuing. There are 1,000 milliseconds in a second.";  // untranslated
Blockly.Msg.DELAY_SECONDS_TOOLTIP = "Delay a given number of seconds.";  // untranslated
Blockly.Msg.DELAY_WITH_NAVIGATION_MS_FIELD_1 = "delay with navigation for ";  // untranslated
Blockly.Msg.DELAY_WITH_NAVIGATION_MS_FIELD_2 = "milliseconds";  // untranslated
Blockly.Msg.DELAY_WITH_NAVIGATION_MS_TOOLTIP = "";  // untranslated
Blockly.Msg.DELAY_WITH_NAVIGATION_SECONDS = "delay with navigation for";  // untranslated
Blockly.Msg.DELAY_WITH_NAVIGATION_SECONDS_TOOLTIP = "";  // untranslated
Blockly.Msg.DELAY_WITH_SIMPLE_NAVIGATION_MS_FIELD_1 = "delay with simple navigation for";  // untranslated
Blockly.Msg.DELAY_WITH_SIMPLE_NAVIGATION_MS_FIELD_2 = "milliseconds";  // untranslated
Blockly.Msg.DELAY_WITH_SIMPLE_NAVIGATION_MS_TOOLTIP = "";  // untranslated
Blockly.Msg.DELAY_WITH_SIMPLE_NAVIGATION_SECONDS = "delay with simple navigation for";  // untranslated
Blockly.Msg.DELAY_WITH_SIMPLE_NAVIGATION_SECONDS_TOOLTIP = "";  // untranslated
Blockly.Msg.DELETE_ALL_BLOCKS = "Xóa hết %1 mảnh?";
Blockly.Msg.DELETE_BLOCK = "Xóa Mảnh Này";
Blockly.Msg.DELETE_VARIABLE = "Delete the '%1' variable";  // untranslated
Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = "Delete %1 uses of the '%2' variable?";  // untranslated
Blockly.Msg.DELETE_X_BLOCKS = "Xóa %1 Mảnh";
Blockly.Msg.DELTA_TIME_MILLISECONDS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Time.html#physicsElapsedMS";  // untranslated
Blockly.Msg.DELTA_TIME_MILLISECONDS_TITLE = "delta time in milliseconds";  // untranslated
Blockly.Msg.DELTA_TIME_MILLISECONDS_TOOLTIP = "Get the time elapsed since the last frame in milliseconds.";  // untranslated
Blockly.Msg.DELTA_TIME_SECONDS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Time.html#physicsElapsed";  // untranslated
Blockly.Msg.DELTA_TIME_SECONDS_TITLE = "delta time in seconds";  // untranslated
Blockly.Msg.DELTA_TIME_SECONDS_TOOLTIP = "Get the time elapsed since the last frame in seconds.";  // untranslated
Blockly.Msg.DESTROY_GROUP_FIELD_1 = "destroy group";  // untranslated
Blockly.Msg.DESTROY_GROUP_FIELD_2 = "destroy members too";  // untranslated
Blockly.Msg.DESTROY_GROUP_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#destroy";  // untranslated
Blockly.Msg.DESTROY_GROUP_TOOLTIP = "Destroys a group. Can either leave the members where they are, or destroy them too.";  // untranslated
Blockly.Msg.DESTROY_OBJECT_FIELD_1 = "destroy";  // untranslated
Blockly.Msg.DESTROY_OBJECT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Component.Destroy.html";  // untranslated
Blockly.Msg.DESTROY_OBJECT_TOOLTIP = "Will remove the object from the game and memory, after which it can no longer be accessed.";  // untranslated
Blockly.Msg.DESTROY_SPRITE_FIELD_1 = "destroy";  // untranslated
Blockly.Msg.DESTROY_SPRITE_FIELD_2 = "children too?";  // untranslated
Blockly.Msg.DESTROY_SPRITE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#destroy";  // untranslated
Blockly.Msg.DESTROY_SPRITE_TOOLTIP = "Deletes a sprite from the game, with an option to delete its children too.";  // untranslated
Blockly.Msg.DESTROY_TIMER = "destroy timer";  // untranslated
Blockly.Msg.DESTROY_TIMER_TOOLTIP = "destroys the timer andy pending events are not dispatched";  // untranslated
Blockly.Msg.DESTROY_TIMER_URL = "http://dragondrop.digipen.edu/docs/Phaser.Timer.html#destroy";  // untranslated
Blockly.Msg.DIGITALWRITE_FIELD_1 = "digital write";  // untranslated
Blockly.Msg.DIGITALWRITE_FIELD_2 = "to pin #";  // untranslated
Blockly.Msg.DIGITALWRITE_HELP_URL = "https://www.arduino.cc/en/Reference/DigitalWrite";  // untranslated
Blockly.Msg.DIGITALWRITE_TOOLTIP = "Writes either HIGH or LOW to the given pin";  // untranslated
Blockly.Msg.DIGITALWRITE_VALUE_DROPDOWN_1 = "HIGH";  // untranslated
Blockly.Msg.DIGITALWRITE_VALUE_DROPDOWN_2 = "LOW";  // untranslated
Blockly.Msg.DIGITAL_READ_FIELD_1 = "digital read pin #";  // untranslated
Blockly.Msg.DIGITAL_READ_HELP_URL = "https://www.arduino.cc/en/Reference/DigitalRead";  // untranslated
Blockly.Msg.DIGITAL_READ_TOOLTIP = "Reads either HIGH or LOW from a digital pin";  // untranslated
Blockly.Msg.DISABLE_BLOCK = "Ngưng Tác Dụng";
Blockly.Msg.DISABLE_STEP_FIELD_1 = "disable stepping";  // untranslated
Blockly.Msg.DISABLE_STEP_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Game.html#disableStep";  // untranslated
Blockly.Msg.DISABLE_STEP_TOOLTIP = "Disables manually stepping into the next game loop. This is the default behavior.";  // untranslated
Blockly.Msg.DOM_GETCONTEXT_CONTEXT = "get context";  // untranslated
Blockly.Msg.DOM_GETCONTEXT_DOM = "for dom";  // untranslated
Blockly.Msg.DRAWCIRCLE_FIELD_1 = "draw circle at position";  // untranslated
Blockly.Msg.DRAWCIRCLE_FIELD_2 = "x:";  // untranslated
Blockly.Msg.DRAWCIRCLE_FIELD_3 = "y:";  // untranslated
Blockly.Msg.DRAWCIRCLE_FIELD_4 = "with diameter:";  // untranslated
Blockly.Msg.DRAWCIRCLE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Graphics.html#drawCircle";  // untranslated
Blockly.Msg.DRAWCIRCLE_TOOLTIP = "Draws a circle at a given position in the world. Doesn't work on its own. Put it inside the 'fill shapes with' block.";  // untranslated
Blockly.Msg.DRAW_RECTANGLE_FIELD_1 = "draw rectangle at position";  // untranslated
Blockly.Msg.DRAW_RECTANGLE_FIELD_2 = "x:";  // untranslated
Blockly.Msg.DRAW_RECTANGLE_FIELD_3 = "y:";  // untranslated
Blockly.Msg.DRAW_RECTANGLE_FIELD_4 = "with";  // untranslated
Blockly.Msg.DRAW_RECTANGLE_FIELD_5 = "width:";  // untranslated
Blockly.Msg.DRAW_RECTANGLE_FIELD_6 = "height:";  // untranslated
Blockly.Msg.DRAW_RECTANGLE_FIELD_7 = "using";  // untranslated
Blockly.Msg.DRAW_RECTANGLE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Graphics.html#drawRect";  // untranslated
Blockly.Msg.DRAW_RECTANGLE_TOOLTIP = "Draws a rectangle at a given position in the world. Doesn't work on its own. Put it inside the 'fill shapes with' block.";  // untranslated
Blockly.Msg.DRAW_SHAPES_WITH_COLOUR_FIELD_1 = "fill shapes with ";  // untranslated
Blockly.Msg.DRAW_SHAPES_WITH_COLOUR_FIELD_2 = "colour";  // untranslated
Blockly.Msg.DRAW_SHAPES_WITH_COLOUR_FIELD_3 = "using";  // untranslated
Blockly.Msg.DRAW_SHAPES_WITH_COLOUR_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Graphics.html#beginFill";  // untranslated
Blockly.Msg.DRAW_SHAPES_WITH_COLOUR_TOOLTIP = "Start drawing shapes in the world using a given graphics object. Use the shape drawing blocks inside this one.";  // untranslated
Blockly.Msg.DRIVE_ARC_FIELD_1 = "drive in an arc";  // untranslated
Blockly.Msg.DRIVE_ARC_FIELD_2 = "turning (degrees)";  // untranslated
Blockly.Msg.DRIVE_ARC_FIELD_3 = "with left motor at";  // untranslated
Blockly.Msg.DRIVE_ARC_FIELD_4 = "with right motor at";  // untranslated
Blockly.Msg.DRIVE_ARC_FIELD_5 = "with max expected turn time (milliseconds)";  // untranslated
Blockly.Msg.DRIVE_ARC_FIELD_6 = "with max expected skid time (milliseconds)";  // untranslated
Blockly.Msg.DRIVE_ARC_TOOLTIP = "";  // untranslated
Blockly.Msg.DUPLICATE_BLOCK = "Tạo Bản Sao";
Blockly.Msg.EDGE_LIGHTS_OFF = "turn edge lights off";  // untranslated
Blockly.Msg.EDGE_LIGHTS_OFF_TOOLTIP = "";  // untranslated
Blockly.Msg.EDGE_LIGHTS_ON = "turn edge lights on";  // untranslated
Blockly.Msg.EDGE_LIGHTS_ON_TOOLTIP = "";  // untranslated
Blockly.Msg.EEPROM_GET_ADDRESS = "EEPROM get data from address";  // untranslated
Blockly.Msg.EEPROM_GET_HELP_URL = "https://www.arduino.cc/en/Reference/EEPROMGet";  // untranslated
Blockly.Msg.EEPROM_GET_TOOLTIP = "";  // untranslated
Blockly.Msg.EEPROM_GET_VARIABLE = "and store in";  // untranslated
Blockly.Msg.EEPROM_PUT_ADDRESS = "to address";  // untranslated
Blockly.Msg.EEPROM_PUT_HELP_URL = "https://www.arduino.cc/en/Reference/EEPROMPut";  // untranslated
Blockly.Msg.EEPROM_PUT_TOOLTIP = "";  // untranslated
Blockly.Msg.EEPROM_PUT_VALUE = "EEPROM set";  // untranslated
Blockly.Msg.EEPROM_READ_ADDRESS = "EEPROM Read address";  // untranslated
Blockly.Msg.EEPROM_READ_HELP_URL = "https://www.arduino.cc/en/Reference/EEPROMRead";  // untranslated
Blockly.Msg.EEPROM_READ_TOOLTIP = "";  // untranslated
Blockly.Msg.EEPROM_UPDATE_ADDRESS = "(if different than current) to address";  // untranslated
Blockly.Msg.EEPROM_UPDATE_HELP_URL = "https://www.arduino.cc/en/Reference/EEPROMUpdate";  // untranslated
Blockly.Msg.EEPROM_UPDATE_TOOLTIP = "";  // untranslated
Blockly.Msg.EEPROM_UPDATE_VALUE = "EEPROM update value at";  // untranslated
Blockly.Msg.EEPROM_WRITE_ADDRESS = "to address";  // untranslated
Blockly.Msg.EEPROM_WRITE_HELP_URL = "https://www.arduino.cc/en/Reference/EEPROMWrite";  // untranslated
Blockly.Msg.EEPROM_WRITE_TOOLTIP = "";  // untranslated
Blockly.Msg.EEPROM_WRITE_VALUE = "EEPROM write value";  // untranslated
Blockly.Msg.EMITTERS_MAKE_PARTICLES_FIELD_1 = "on emitter";  // untranslated
Blockly.Msg.EMITTERS_MAKE_PARTICLES_FIELD_2 = "make particles from";  // untranslated
Blockly.Msg.EMITTERS_MAKE_PARTICLES_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Particles.Arcade.Emitter.html#makeParticles";  // untranslated
Blockly.Msg.EMITTERS_MAKE_PARTICLES_TAG_TEXT_DEFAULT = "image tag";  // untranslated
Blockly.Msg.EMITTERS_MAKE_PARTICLES_TOOLTIP = "Generate a new set of particles for this emitter";  // untranslated
Blockly.Msg.EMITTERS_SET_ALPHA_FIELD_1 = "on emitter,";  // untranslated
Blockly.Msg.EMITTERS_SET_ALPHA_FIELD_2 = "set Alpha:";  // untranslated
Blockly.Msg.EMITTERS_SET_ALPHA_FIELD_3 = "min";  // untranslated
Blockly.Msg.EMITTERS_SET_ALPHA_FIELD_4 = "max";  // untranslated
Blockly.Msg.EMITTERS_SET_ALPHA_FIELD_5 = "rate";  // untranslated
Blockly.Msg.EMITTERS_SET_ALPHA_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Particles.Arcade.Emitter.html#setAlpha";  // untranslated
Blockly.Msg.EMITTERS_SET_ALPHA_TOOLTIP = "Set the min and max alpha values for this emitter.";  // untranslated
Blockly.Msg.EMITTERS_SET_ALPHA_VI_FIELD_1 = "on emitter,";  // untranslated
Blockly.Msg.EMITTERS_SET_ALPHA_VI_FIELD_2 = "set alpha";  // untranslated
Blockly.Msg.EMITTERS_SET_ALPHA_VI_FIELD_3 = "min";  // untranslated
Blockly.Msg.EMITTERS_SET_ALPHA_VI_FIELD_4 = "max";  // untranslated
Blockly.Msg.EMITTERS_SET_ALPHA_VI_FIELD_5 = "rate";  // untranslated
Blockly.Msg.EMITTERS_SET_ALPHA_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Particles.Arcade.Emitter.html#setAlpha";  // untranslated
Blockly.Msg.EMITTERS_SET_ALPHA_VI_TOOLTIP = "Set the min and max alpha values for this emitter.";  // untranslated
Blockly.Msg.EMITTERS_SET_GRAVITY_FIELD_1 = "on emitter,";  // untranslated
Blockly.Msg.EMITTERS_SET_GRAVITY_FIELD_2 = "set Gravity:";  // untranslated
Blockly.Msg.EMITTERS_SET_GRAVITY_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Particles.Arcade.Emitter.html#gravity";  // untranslated
Blockly.Msg.EMITTERS_SET_GRAVITY_TOOLTIP = "Set the gravity of generated particles.";  // untranslated
Blockly.Msg.EMITTERS_SET_GRAVITY_VI_FIELD_1 = "on emitter";  // untranslated
Blockly.Msg.EMITTERS_SET_GRAVITY_VI_FIELD_2 = "set gravity:";  // untranslated
Blockly.Msg.EMITTERS_SET_GRAVITY_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Particles.Arcade.Emitter.html#gravity";  // untranslated
Blockly.Msg.EMITTERS_SET_GRAVITY_VI_TOOLTIP = "Set the gravity of generated particles";  // untranslated
Blockly.Msg.EMITTERS_SET_ROTATION_FIELD_1 = "on emitter,";  // untranslated
Blockly.Msg.EMITTERS_SET_ROTATION_FIELD_2 = "set rotation:";  // untranslated
Blockly.Msg.EMITTERS_SET_ROTATION_FIELD_3 = "min";  // untranslated
Blockly.Msg.EMITTERS_SET_ROTATION_FIELD_4 = "max";  // untranslated
Blockly.Msg.EMITTERS_SET_ROTATION_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Particles.Arcade.Emitter.html#setRotation";  // untranslated
Blockly.Msg.EMITTERS_SET_ROTATION_TOOLTIP = "Set the angular velocity constraints of the particles";  // untranslated
Blockly.Msg.EMITTERS_SET_ROTATION_VI_FIELD_1 = "on emitter";  // untranslated
Blockly.Msg.EMITTERS_SET_ROTATION_VI_FIELD_2 = "set min/max angular velocity";  // untranslated
Blockly.Msg.EMITTERS_SET_ROTATION_VI_FIELD_3 = "min";  // untranslated
Blockly.Msg.EMITTERS_SET_ROTATION_VI_FIELD_4 = "max";  // untranslated
Blockly.Msg.EMITTERS_SET_ROTATION_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Particles.Arcade.Emitter.html#setRotation";  // untranslated
Blockly.Msg.EMITTERS_SET_ROTATION_VI_TOOLTIP = "Set the angular velocity constraints of the particles.";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_FIELD_1 = "on emitter,";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_FIELD_2 = "set Scale:";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_FIELD_3 = "min X";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_FIELD_4 = "max X";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_FIELD_5 = "min Y";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_FIELD_6 = "max Y";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_FIELD_7 = "rate";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Particles.Arcade.Emitter.html#setScale";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_TOOLTIP = "Set the minimum/maximum scale for particles and the rate to go between.";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_VI_FIELD_1 = "on emitter,";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_VI_FIELD_2 = "set scale";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_VI_FIELD_3 = "min x";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_VI_FIELD_4 = "max x";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_VI_FIELD_5 = "min y";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_VI_FIELD_6 = "max y";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_VI_FIELD_7 = "rate";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Particles.Arcade.Emitter.html#setScale";  // untranslated
Blockly.Msg.EMITTERS_SET_SCALE_VI_TOOLTIP = "Set the minimum/maximum scale for particles and the rate to go between.";  // untranslated
Blockly.Msg.EMITTERS_SET_SPEED_FIELD_1 = "on emitter,";  // untranslated
Blockly.Msg.EMITTERS_SET_SPEED_FIELD_2 = "set Speed:";  // untranslated
Blockly.Msg.EMITTERS_SET_SPEED_FIELD_3 = "min X";  // untranslated
Blockly.Msg.EMITTERS_SET_SPEED_FIELD_4 = "max X";  // untranslated
Blockly.Msg.EMITTERS_SET_SPEED_FIELD_5 = "min Y";  // untranslated
Blockly.Msg.EMITTERS_SET_SPEED_FIELD_6 = "max Y";  // untranslated
Blockly.Msg.EMITTERS_SET_SPEED_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Particles.Arcade.Emitter.html#minParticleSpeed";  // untranslated
Blockly.Msg.EMITTERS_SET_SPEED_TOOLTIP = "Sets the minimum and maximum speeds that an emitted particle will go.";  // untranslated
Blockly.Msg.EMITTERS_SET_SPEED_VI_FIELD_1 = "on emitter";  // untranslated
Blockly.Msg.EMITTERS_SET_SPEED_VI_FIELD_2 = "set speed";  // untranslated
Blockly.Msg.EMITTERS_SET_SPEED_VI_FIELD_3 = "min x";  // untranslated
Blockly.Msg.EMITTERS_SET_SPEED_VI_FIELD_4 = "max x";  // untranslated
Blockly.Msg.EMITTERS_SET_SPEED_VI_FIELD_5 = "min y";  // untranslated
Blockly.Msg.EMITTERS_SET_SPEED_VI_FIELD_6 = "max y";  // untranslated
Blockly.Msg.EMITTERS_SET_SPEED_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Particles.Arcade.Emitter.html#minParticleSpeed";  // untranslated
Blockly.Msg.EMITTERS_SET_SPEED_VI_TOOLTIP = "Sets the minimum and maximum speeds that an emitted particle will go.";  // untranslated
Blockly.Msg.EMITTERS_SET_WIDTH_FIELD_1 = "on emitter,";  // untranslated
Blockly.Msg.EMITTERS_SET_WIDTH_FIELD_2 = "set width:";  // untranslated
Blockly.Msg.EMITTERS_SET_WIDTH_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Particles.Arcade.Emitter.html#width";  // untranslated
Blockly.Msg.EMITTERS_SET_WIDTH_TOOLTIP = "Sets the width of the area in which particles will be emitted.";  // untranslated
Blockly.Msg.EMITTERS_START_FIELD_1 = "on emitter,";  // untranslated
Blockly.Msg.EMITTERS_START_FIELD_2 = "start:";  // untranslated
Blockly.Msg.EMITTERS_START_FIELD_3 = "Should Burst?";  // untranslated
Blockly.Msg.EMITTERS_START_FIELD_4 = "Lifespan";  // untranslated
Blockly.Msg.EMITTERS_START_FIELD_5 = "Frequency";  // untranslated
Blockly.Msg.EMITTERS_START_FIELD_6 = "Quantity";  // untranslated
Blockly.Msg.EMITTERS_START_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Particles.Arcade.Emitter.html#start";  // untranslated
Blockly.Msg.EMITTERS_START_TOOLTIP = "Start emitting particles.";  // untranslated
Blockly.Msg.EMITTERS_START_VI_FIELD_1 = "start emitter,";  // untranslated
Blockly.Msg.EMITTERS_START_VI_FIELD_2 = "explode";  // untranslated
Blockly.Msg.EMITTERS_START_VI_FIELD_3 = "lifespan (ms)";  // untranslated
Blockly.Msg.EMITTERS_START_VI_FIELD_4 = "frequency (ms)";  // untranslated
Blockly.Msg.EMITTERS_START_VI_FIELD_5 = "quantity";  // untranslated
Blockly.Msg.EMITTERS_START_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Particles.Arcade.Emitter.html#start";  // untranslated
Blockly.Msg.EMITTERS_START_VI_TOOLTIP = "Start emitting particles.";  // untranslated
Blockly.Msg.EMITTER_MAKE_PARTICLES_FIELD_1 = "on emitter";  // untranslated
Blockly.Msg.EMITTER_MAKE_PARTICLES_FIELD_2 = "make particles";  // untranslated
Blockly.Msg.EMITTER_MAKE_PARTICLES_FIELD_3 = "keys";  // untranslated
Blockly.Msg.EMITTER_MAKE_PARTICLES_FIELD_4 = "frames";  // untranslated
Blockly.Msg.EMITTER_MAKE_PARTICLES_FIELD_5 = "quantity";  // untranslated
Blockly.Msg.EMITTER_MAKE_PARTICLES_FIELD_6 = "collide";  // untranslated
Blockly.Msg.EMITTER_MAKE_PARTICLES_FIELD_7 = "collide world";  // untranslated
Blockly.Msg.EMITTER_MAKE_PARTICLES_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Particles.Arcade.Emitter.html#makeParticles";  // untranslated
Blockly.Msg.EMITTER_MAKE_PARTICLES_TOOLTIP = "Generate a new set of particles for this emitter";  // untranslated
Blockly.Msg.ENABLE_ARCADE_PHYSICS_FOR_OBJECT_FIELD_1 = "enable arcade physics for";  // untranslated
Blockly.Msg.ENABLE_ARCADE_PHYSICS_FOR_OBJECT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.html#enable";  // untranslated
Blockly.Msg.ENABLE_ARCADE_PHYSICS_FOR_OBJECT_TOOLTIP = "Enable physics for this object";  // untranslated
Blockly.Msg.ENABLE_ARCADE_PHYSICS_FOR_OBJECT_VI_FIELD_1 = "enable arcade physics for sprite";  // untranslated
Blockly.Msg.ENABLE_ARCADE_PHYSICS_FOR_OBJECT_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.html#enable";  // untranslated
Blockly.Msg.ENABLE_ARCADE_PHYSICS_FOR_OBJECT_VI_TOOLTIP = "Enable physics for this sprite";  // untranslated
Blockly.Msg.ENABLE_BLOCK = "Phục Hồi Tác Dụng";
Blockly.Msg.ENABLE_BODY_GROUP_FIELD_1 = "Enable Body for";  // untranslated
Blockly.Msg.ENABLE_BODY_GROUP_FIELD_2 = "Group";  // untranslated
Blockly.Msg.ENABLE_BODY_GROUP_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#enableBody";  // untranslated
Blockly.Msg.ENABLE_BODY_GROUP_TOOLTIP = "Enable physics body on all sprites in or added to this group.";  // untranslated
Blockly.Msg.ENABLE_BODY_GROUP_VI_FIELD_1 = "enable body for group";  // untranslated
Blockly.Msg.ENABLE_BODY_GROUP_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#enableBody";  // untranslated
Blockly.Msg.ENABLE_BODY_GROUP_VI_TOOLTIP = "Enable physics body on all sprites in or added to this group.";  // untranslated
Blockly.Msg.ENABLE_STEP_FIELD_1 = "enable stepping";  // untranslated
Blockly.Msg.ENABLE_STEP_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Game.html#enableStep";  // untranslated
Blockly.Msg.ENABLE_STEP_TOOLTIP = "Enables manually stepping through game frames. Usually for debugging purposes.";  // untranslated
Blockly.Msg.EVERY = "every";  // untranslated
Blockly.Msg.EXPAND_ALL = "Mở Lớn Mọi Mảnh";
Blockly.Msg.EXPAND_BLOCK = "Mở Lớn Mảnh";
Blockly.Msg.EXTERNAL_INPUTS = "Chỗ Gắn Bên Ngoài";
Blockly.Msg.EYESPREVCOLOUR_FIELD_1 = "eyes previous color";  // untranslated
Blockly.Msg.EYESPREVCOLOUR_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.EYESPREVCOLOUR_TOOLTIP = "";  // untranslated
Blockly.Msg.FAINT_OBJECT_FIELD_1 = "faint";  // untranslated
Blockly.Msg.FAINT_OBJECT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#kill";  // untranslated
Blockly.Msg.FAINT_OBJECT_TOOLTIP = "Will faint the object setting making it non-existent. Reverse with revive.";  // untranslated
Blockly.Msg.FOLLOW_LOCKON = "lockon";  // untranslated
Blockly.Msg.FOLLOW_PLATFORMER = "platformer";  // untranslated
Blockly.Msg.FOLLOW_STYLE = "with style";  // untranslated
Blockly.Msg.FOLLOW_TOPDOWN = "topdown";  // untranslated
Blockly.Msg.FOLLOW_TOPDOWN_TIGHT = "topdown tight";  // untranslated
Blockly.Msg.FROM = "from";  // untranslated
Blockly.Msg.GAME_CAMERA = "camera";  // untranslated
Blockly.Msg.GAME_CAMERA_TOOLTIP = "reference to the current games camera";  // untranslated
Blockly.Msg.GAME_CAMERA_URL = "http://dragondrop.digipen.edu/docs/Phaser.Camera.html";  // untranslated
Blockly.Msg.GETELEMENTBYID_HELP_URL = "";  // untranslated
Blockly.Msg.GETELEMENTBYID_TITLE = "getElementById with ID";  // untranslated
Blockly.Msg.GETELEMENTBYID_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_ACCEL_X_FIELD_1 = "get x acceleration";  // untranslated
Blockly.Msg.GET_ACCEL_X_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_ACCEL_Y_FIELD_1 = "get y acceleration";  // untranslated
Blockly.Msg.GET_ACCEL_Y_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_ACCEL_Y_UNZEROED_FIELD_1 = "get y acceleration unzeroed";  // untranslated
Blockly.Msg.GET_ACCEL_Y_UNZEROED_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_ACCEL_Z_FIELD_1 = "get z acceleration";  // untranslated
Blockly.Msg.GET_ACCEL_Z_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_ANIMATION_BOOLEAN_FIELD_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Animation.html";  // untranslated
Blockly.Msg.GET_ANIMATION_BOOLEAN_FIELD_VI_TOOLTIP = "Gets the boolean selected from the specified object.";  // untranslated
Blockly.Msg.GET_ANIMATION_NUMERIC_FIELD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Animation.html";  // untranslated
Blockly.Msg.GET_ANIMATION_NUMERIC_FIELD_TOOLTIP = "Gets the number selected from the specified object.";  // untranslated
Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_1 = "on gameobject";  // untranslated
Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_2 = "get animation.";  // untranslated
Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_1 = "currentAnim";  // untranslated
Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_10 = "paused";  // untranslated
Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_11 = "sprite";  // untranslated
Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_12 = "updateIfVisible";  // untranslated
Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_2 = "currentFrame";  // untranslated
Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_3 = "frame";  // untranslated
Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_4 = "frameData";  // untranslated
Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_5 = "frameName";  // untranslated
Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_6 = "frameTotal";  // untranslated
Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_7 = "game";  // untranslated
Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_8 = "isLoaded";  // untranslated
Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_9 = "name";  // untranslated
Blockly.Msg.GET_ANIMATION_PROPERTY_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#destroy";  // untranslated
Blockly.Msg.GET_ANIMATION_PROPERTY_TOOLTIP = "Get a property on from the animaton manager on the object";  // untranslated
Blockly.Msg.GET_ANIMATION_STRING_FIELD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Animation.html";  // untranslated
Blockly.Msg.GET_ANIMATION_STRING_FIELD_TOOLTIP = "Gets the string selected from the specified object.";  // untranslated
Blockly.Msg.GET_BODY_BOOLEAN_FIELD_ELEMENT_DROPDOWN_1 = "allowRotation";  // untranslated
Blockly.Msg.GET_BODY_BOOLEAN_FIELD_ELEMENT_DROPDOWN_2 = "allowGravity";  // untranslated
Blockly.Msg.GET_BODY_BOOLEAN_FIELD_ELEMENT_DROPDOWN_3 = "immovable";  // untranslated
Blockly.Msg.GET_BODY_BOOLEAN_FIELD_ELEMENT_DROPDOWN_4 = "isMoving";  // untranslated
Blockly.Msg.GET_BODY_BOOLEAN_FIELD_FIELD_1 = "get boolean field";  // untranslated
Blockly.Msg.GET_BODY_BOOLEAN_FIELD_FIELD_2 = "for";  // untranslated
Blockly.Msg.GET_BODY_BOOLEAN_FIELD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.Body.html";  // untranslated
Blockly.Msg.GET_BODY_BOOLEAN_FIELD_TOOLTIP = "Set the value of the specified boolean field";  // untranslated
Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_1 = "get point field";  // untranslated
Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_2 = "for";  // untranslated
Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_DROPDOWN_1 = "bounce";  // untranslated
Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_DROPDOWN_2 = "gravity";  // untranslated
Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_DROPDOWN_3 = "velocity";  // untranslated
Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_DROPDOWN_4 = "acceleration";  // untranslated
Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_DROPDOWN_5 = "drag";  // untranslated
Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_DROPDOWN_6 = "friction";  // untranslated
Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_DROPDOWN_7 = "maxVelocity";  // untranslated
Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_DROPDOWN_8 = "worldBounce";  // untranslated
Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.Body.html";  // untranslated
Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_TOOLTIP = "Gets the value of the specified point as a point object";  // untranslated
Blockly.Msg.GET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_1 = "speed";  // untranslated
Blockly.Msg.GET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_2 = "mass";  // untranslated
Blockly.Msg.GET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_3 = "rotation (degrees)";  // untranslated
Blockly.Msg.GET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_4 = "maxVelocity";  // untranslated
Blockly.Msg.GET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_5 = "angularAcceleration";  // untranslated
Blockly.Msg.GET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_6 = "angularVelocity";  // untranslated
Blockly.Msg.GET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_7 = "maxAngularVelocity";  // untranslated
Blockly.Msg.GET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_8 = "angularDrag";  // untranslated
Blockly.Msg.GET_BODY_NUMERIC_FIELD_FIELD_1 = "get numeric field";  // untranslated
Blockly.Msg.GET_BODY_NUMERIC_FIELD_FIELD_2 = "for";  // untranslated
Blockly.Msg.GET_BODY_NUMERIC_FIELD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.Body.html";  // untranslated
Blockly.Msg.GET_BODY_NUMERIC_FIELD_TOOLTIP = "Get the value of the specified numeric field";  // untranslated
Blockly.Msg.GET_BOOLEAN_FIELD = "get boolean field";  // untranslated
Blockly.Msg.GET_BOUNDS_FIELD_1 = "Get bounds of";  // untranslated
Blockly.Msg.GET_BOUNDS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#getBounds";  // untranslated
Blockly.Msg.GET_BOUNDS_TOOLTIP = "Gets the rectangular bounds of most objects in the game.";  // untranslated
Blockly.Msg.GET_CAMERA_FIELD_1 = "get camera";  // untranslated
Blockly.Msg.GET_CAMERA_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Camera.html";  // untranslated
Blockly.Msg.GET_CAMERA_TOOLTIP = "Returns a reference to the camera.";  // untranslated
Blockly.Msg.GET_CHILD_AT_VI_FIELD_1 = "get child of";  // untranslated
Blockly.Msg.GET_CHILD_AT_VI_FIELD_2 = "at index";  // untranslated
Blockly.Msg.GET_CHILD_AT_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#getChildAt";  // untranslated
Blockly.Msg.GET_CHILD_AT_VI_TOOLTIP = "Finds a specific child on this sprite/image by its index.";  // untranslated
Blockly.Msg.GET_CHILD_INDEX_FIELD_1 = "Get index of Child";  // untranslated
Blockly.Msg.GET_CHILD_INDEX_FIELD_2 = "on ";  // untranslated
Blockly.Msg.GET_CHILD_INDEX_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#getChildIndex";  // untranslated
Blockly.Msg.GET_CHILD_INDEX_TOOLTIP = "Finds an index that describes where on the parent this object is. ";  // untranslated
Blockly.Msg.GET_CHILD_INDEX_VI_FIELD_1 = "get index of child";  // untranslated
Blockly.Msg.GET_CHILD_INDEX_VI_FIELD_2 = "on ";  // untranslated
Blockly.Msg.GET_CHILD_INDEX_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#getChildIndex";  // untranslated
Blockly.Msg.GET_CHILD_INDEX_VI_TOOLTIP = "Finds an index that describes where on the parent this object is. ";  // untranslated
Blockly.Msg.GET_CURRENT_MOUSE_POSITION_DIRECTION_DROPDOWN_1 = "x";  // untranslated
Blockly.Msg.GET_CURRENT_MOUSE_POSITION_DIRECTION_DROPDOWN_2 = "y";  // untranslated
Blockly.Msg.GET_CURRENT_MOUSE_POSITION_DIRECTION_DROPDOWN_3 = "worldX";  // untranslated
Blockly.Msg.GET_CURRENT_MOUSE_POSITION_DIRECTION_DROPDOWN_4 = "worldY";  // untranslated
Blockly.Msg.GET_CURRENT_MOUSE_POSITION_FIELD_1 = "get mouse position";  // untranslated
Blockly.Msg.GET_CURRENT_MOUSE_POSITION_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Pointer.html#x";  // untranslated
Blockly.Msg.GET_CURRENT_MOUSE_POSITION_TOOLTIP = "Get the position of the mouse, or last active pointer for touch screen interfaces";  // untranslated
Blockly.Msg.GET_DEGREES_PER_SECOND_X_FIELD_1 = "get degrees per second x";  // untranslated
Blockly.Msg.GET_DEGREES_PER_SECOND_X_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_DEGREES_PER_SECOND_Y_FIELD_1 = "get degrees per second y";  // untranslated
Blockly.Msg.GET_DEGREES_PER_SECOND_Y_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_DEGREES_PER_SECOND_Z_FIELD_1 = "get degrees per second z";  // untranslated
Blockly.Msg.GET_DEGREES_PER_SECOND_Z_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_DEGREES_TO_STOP_FIELD_1 = "get degrees to stop";  // untranslated
Blockly.Msg.GET_DEGREES_TO_STOP_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_DEGREES_X_FIELD_1 = "get degrees x";  // untranslated
Blockly.Msg.GET_DEGREES_X_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_GAME_OBJECT_BOOLEAN_FIELD_FIELD_1 = "get boolean field";  // untranslated
Blockly.Msg.GET_GAME_OBJECT_BOOLEAN_FIELD_FIELD_2 = "of";  // untranslated
Blockly.Msg.GET_GAME_OBJECT_BOOLEAN_FIELD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html";  // untranslated
Blockly.Msg.GET_GAME_OBJECT_BOOLEAN_FIELD_TOOLTIP = "Get a boolean property on the object";  // untranslated
Blockly.Msg.GET_GAME_OBJECT_NUMERIC_FIELD_FIELD_1 = "get numeric field";  // untranslated
Blockly.Msg.GET_GAME_OBJECT_NUMERIC_FIELD_FIELD_2 = "of";  // untranslated
Blockly.Msg.GET_GAME_OBJECT_NUMERIC_FIELD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html";  // untranslated
Blockly.Msg.GET_GAME_OBJECT_NUMERIC_FIELD_TOOLTIP = "Get a numeric property on the object";  // untranslated
Blockly.Msg.GET_GAME_OBJECT_POINT_FIELD_FIELD_1 = "get point field";  // untranslated
Blockly.Msg.GET_GAME_OBJECT_POINT_FIELD_FIELD_2 = "of";  // untranslated
Blockly.Msg.GET_GAME_OBJECT_POINT_FIELD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html";  // untranslated
Blockly.Msg.GET_GAME_OBJECT_POINT_FIELD_TOOLTIP = "Get a point property on the object";  // untranslated
Blockly.Msg.GET_GYRO_CALIBRATION_MULTIPLIER_FIELD_1 = "get gyro calibration multiplier";  // untranslated
Blockly.Msg.GET_GYRO_CALIBRATION_MULTIPLIER_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_LEFT_MOTOR_FIELD_1 = "get current left motor speed";  // untranslated
Blockly.Msg.GET_LEFT_MOTOR_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_LOCAL_BOUNDS_FIELD_1 = "get local bounds of";  // untranslated
Blockly.Msg.GET_LOCAL_BOUNDS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#getLocalBounds";  // untranslated
Blockly.Msg.GET_LOCAL_BOUNDS_TOOLTIP = "Gets the rectangular bounds of an object. Bounds are relative to the object itself instead of the world.";  // untranslated
Blockly.Msg.GET_MEMBER_IN_CLASS_GET_MEMBER_NAME = "get %1";  // untranslated
Blockly.Msg.GET_MEMBER_IN_CLASS_GET_VALUE = "get value of";  // untranslated
Blockly.Msg.GET_MEMBER_IN_CLASS_HELP_URL = "";  // untranslated
Blockly.Msg.GET_MEMBER_IN_CLASS_INSTANCE_NAME = "in %1 instance";  // untranslated
Blockly.Msg.GET_MEMBER_IN_CLASS_INSTANCE_NAME_DEFAULT = "class";  // untranslated
Blockly.Msg.GET_MEMBER_IN_CLASS_TOOLTIP = "Access the calling instance";  // untranslated
Blockly.Msg.GET_MOTOR_MAX_FIELD_1 = "get motor max";  // untranslated
Blockly.Msg.GET_MOTOR_MAX_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_NUMERIC_FIELD = "get numeric field";  // untranslated
Blockly.Msg.GET_OBJECT_WIDTH_FIELD_1 = "get width of ";  // untranslated
Blockly.Msg.GET_OBJECT_WIDTH_HELP_URL = "http://dragondrop.digipen.edu/docs/PIXI.Sprite.html#width";  // untranslated
Blockly.Msg.GET_OBJECT_WIDTH_TOOLTIP = "Gets the width of an object.";  // untranslated
Blockly.Msg.GET_PARAM_FIELD_1 = "get";  // untranslated
Blockly.Msg.GET_PARAM_FIELD_2 = "from object";  // untranslated
Blockly.Msg.GET_PARAM_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#toc-4";  // untranslated
Blockly.Msg.GET_PARAM_TOOLTIP = "Gets a given numeric field from an object.";  // untranslated
Blockly.Msg.GET_POINT_FIELD = "get point field";  // untranslated
Blockly.Msg.GET_POS_X_FIELD_1 = "get x position";  // untranslated
Blockly.Msg.GET_POS_X_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_POS_Y_FIELD_1 = "get y position";  // untranslated
Blockly.Msg.GET_POS_Y_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_PRESSED_IR_BUTTON_FIELD_1 = "get pressed IR button";  // untranslated
Blockly.Msg.GET_PRESSED_IR_BUTTON_HELP_URL = "";  // untranslated
Blockly.Msg.GET_PRESSED_IR_BUTTON_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_RIGHT_MOTOR_FIELD_1 = "get current right motor speed";  // untranslated
Blockly.Msg.GET_RIGHT_MOTOR_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_ROTATION_FIELD_1 = "get rotation";  // untranslated
Blockly.Msg.GET_ROTATION_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#angle";  // untranslated
Blockly.Msg.GET_ROTATION_TOOLTIP = "Finds the rotation (in degrees) of a Game Object.";  // untranslated
Blockly.Msg.GET_SOUND_BOOLEAN_MEMBER_FIELD_1 = "get";  // untranslated
Blockly.Msg.GET_SOUND_BOOLEAN_MEMBER_FIELD_2 = "of";  // untranslated
Blockly.Msg.GET_SOUND_BOOLEAN_MEMBER_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sound.html";  // untranslated
Blockly.Msg.GET_SOUND_BOOLEAN_MEMBER_TOOLTIP = "Get the selected member from the Sound";  // untranslated
Blockly.Msg.GET_SOUND_NUMERIC_MEMBER_FIELD_1 = "get";  // untranslated
Blockly.Msg.GET_SOUND_NUMERIC_MEMBER_FIELD_2 = "of";  // untranslated
Blockly.Msg.GET_SOUND_NUMERIC_MEMBER_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sound.html";  // untranslated
Blockly.Msg.GET_SOUND_NUMERIC_MEMBER_TOOLTIP = "Get the selected member from the Sound";  // untranslated
Blockly.Msg.GET_SOUND_STRING_MEMBER_FIELD_1 = "get";  // untranslated
Blockly.Msg.GET_SOUND_STRING_MEMBER_FIELD_2 = "of";  // untranslated
Blockly.Msg.GET_SOUND_STRING_MEMBER_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sound.html";  // untranslated
Blockly.Msg.GET_SOUND_STRING_MEMBER_TOOLTIP = "Get the selected member from the Sound";  // untranslated
Blockly.Msg.GET_STRING_FIELD = "get string field";  // untranslated
Blockly.Msg.GET_SUPER_HELPURL = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/super";  // untranslated
Blockly.Msg.GET_SUPER_TOOLTIP = "Get a reference to the super class";  // untranslated
Blockly.Msg.GET_TIME_NUMERIC_MEMBER_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Time.html";  // untranslated
Blockly.Msg.GET_TIME_NUMERIC_MEMBER_TITLE = "get";  // untranslated
Blockly.Msg.GET_TIME_NUMERIC_MEMBER_TOOLTIP = "Read numeric fields of game time.";  // untranslated
Blockly.Msg.GET_VEL_X_FIELD_1 = "get x velocity";  // untranslated
Blockly.Msg.GET_VEL_X_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_VEL_Y_FIELD_1 = "get y velocity";  // untranslated
Blockly.Msg.GET_VEL_Y_TOOLTIP = "";  // untranslated
Blockly.Msg.GET_WORLD_PROPERTY_FIELD_1 = "get";  // untranslated
Blockly.Msg.GET_WORLD_PROPERTY_FIELD_2 = "of the world";  // untranslated
Blockly.Msg.GET_WORLD_PROPERTY_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.World.html";  // untranslated
Blockly.Msg.GET_WORLD_PROPERTY_NAME_DROPDOWN_1 = "height";  // untranslated
Blockly.Msg.GET_WORLD_PROPERTY_NAME_DROPDOWN_2 = "width";  // untranslated
Blockly.Msg.GET_WORLD_PROPERTY_NAME_DROPDOWN_3 = "center x";  // untranslated
Blockly.Msg.GET_WORLD_PROPERTY_NAME_DROPDOWN_4 = "center y";  // untranslated
Blockly.Msg.GET_WORLD_PROPERTY_NAME_DROPDOWN_5 = "random x";  // untranslated
Blockly.Msg.GET_WORLD_PROPERTY_NAME_DROPDOWN_6 = "random y";  // untranslated
Blockly.Msg.GET_WORLD_PROPERTY_TOOLTIP = "Get a property of the world";  // untranslated
Blockly.Msg.GET_WORLD_REFERENCE_FIELD_1 = "world";  // untranslated
Blockly.Msg.GET_WORLD_REFERENCE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.World.html";  // untranslated
Blockly.Msg.GET_WORLD_REFERENCE_TOOLTIP = "Returns a reference to the game world. It functions as a group.";  // untranslated
Blockly.Msg.GROUP_CONTAINS_FIELD_1 = "group";  // untranslated
Blockly.Msg.GROUP_CONTAINS_FIELD_2 = "contains";  // untranslated
Blockly.Msg.GROUP_CONTAINS_FIELD_3 = "?";  // untranslated
Blockly.Msg.GROUP_CONTAINS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#contains";  // untranslated
Blockly.Msg.GROUP_CONTAINS_TOOLTIP = "Returns true if a group contains a specified sprite.";  // untranslated
Blockly.Msg.GROUP_COUNT_ALIVE_DEAD_FIELD_1 = "number of";  // untranslated
Blockly.Msg.GROUP_COUNT_ALIVE_DEAD_FIELD_2 = "objects in group";  // untranslated
Blockly.Msg.GROUP_COUNT_ALIVE_DEAD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#countLiving";  // untranslated
Blockly.Msg.GROUP_COUNT_ALIVE_DEAD_STATE_DROPDOWN_1 = "alive";  // untranslated
Blockly.Msg.GROUP_COUNT_ALIVE_DEAD_STATE_DROPDOWN_2 = "fainted";  // untranslated
Blockly.Msg.GROUP_COUNT_ALIVE_DEAD_TOOLTIP = "Returns the number of alive/dead objects in a group.";  // untranslated
Blockly.Msg.GROUP_GET_ALL_FIELD_1 = "get all members of group";  // untranslated
Blockly.Msg.GROUP_GET_ALL_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#getAll";  // untranslated
Blockly.Msg.GROUP_GET_ALL_TOOLTIP = "Returns a list of all members in the specified group.";  // untranslated
Blockly.Msg.GROUP_GET_AT_FIELD_1 = "get member of group";  // untranslated
Blockly.Msg.GROUP_GET_AT_FIELD_2 = "at index";  // untranslated
Blockly.Msg.GROUP_GET_AT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#getAt";  // untranslated
Blockly.Msg.GROUP_GET_AT_TOOLTIP = "Returns a group member at a specified index. Indices start at 0 and go in creation order by default. Returns -1 if it fails.";  // untranslated
Blockly.Msg.GROUP_GET_CLOSEST_TO_FIELD_1 = "get member of group";  // untranslated
Blockly.Msg.GROUP_GET_CLOSEST_TO_FIELD_2 = "closest to";  // untranslated
Blockly.Msg.GROUP_GET_CLOSEST_TO_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#getClosestTo";  // untranslated
Blockly.Msg.GROUP_GET_CLOSEST_TO_TOOLTIP = "Returns the object in the group whose position is closest to the specified object.";  // untranslated
Blockly.Msg.GROUP_GET_FIRST_ALIVE_DEAD_FIELD_1 = "get first";  // untranslated
Blockly.Msg.GROUP_GET_FIRST_ALIVE_DEAD_FIELD_2 = "member of group";  // untranslated
Blockly.Msg.GROUP_GET_FIRST_ALIVE_DEAD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#getFirstAlive";  // untranslated
Blockly.Msg.GROUP_GET_FIRST_ALIVE_DEAD_MODE_DROPDOWN_1 = "alive";  // untranslated
Blockly.Msg.GROUP_GET_FIRST_ALIVE_DEAD_MODE_DROPDOWN_2 = "dead";  // untranslated
Blockly.Msg.GROUP_GET_FIRST_ALIVE_DEAD_TOOLTIP = "Gets the first group member that has the given value of its 'alive' field. Returns null if no matching member is found.";  // untranslated
Blockly.Msg.GROUP_GET_FIRST_ALIVE_FAINTED_FIELD_1 = "get first";  // untranslated
Blockly.Msg.GROUP_GET_FIRST_ALIVE_FAINTED_FIELD_2 = "member of group";  // untranslated
Blockly.Msg.GROUP_GET_FIRST_ALIVE_FAINTED_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#getFirstAlive";  // untranslated
Blockly.Msg.GROUP_GET_FIRST_ALIVE_FAINTED_MODE_DROPDOWN_1 = "alive";  // untranslated
Blockly.Msg.GROUP_GET_FIRST_ALIVE_FAINTED_MODE_DROPDOWN_2 = "fainted";  // untranslated
Blockly.Msg.GROUP_GET_FIRST_ALIVE_FAINTED_TOOLTIP = "Gets the first group member that has the given value of its 'alive' field. Returns null if no matching member is found.";  // untranslated
Blockly.Msg.GROUP_GET_RANDOM_EXISTS_FIELD_1 = "get a random member of group";  // untranslated
Blockly.Msg.GROUP_GET_RANDOM_EXISTS_FIELD_2 = "that exists";  // untranslated
Blockly.Msg.GROUP_GET_RANDOM_EXISTS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#getRandomExists";  // untranslated
Blockly.Msg.GROUP_GET_RANDOM_EXISTS_TOOLTIP = "Returns a random member of the given group, picking from those whose 'exists' field is set to true.";  // untranslated
Blockly.Msg.GROUP_GET_RANDOM_FIELD_1 = "get random member of group";  // untranslated
Blockly.Msg.GROUP_GET_RANDOM_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#getRandom";  // untranslated
Blockly.Msg.GROUP_GET_RANDOM_TOOLTIP = "Returns a member of the group at random with no bias.";  // untranslated
Blockly.Msg.GROUP_REMOVE_ALL_FIELD_1 = "remove all members of group";  // untranslated
Blockly.Msg.GROUP_REMOVE_ALL_FIELD_2 = "destroy them too";  // untranslated
Blockly.Msg.GROUP_REMOVE_ALL_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#removeAll";  // untranslated
Blockly.Msg.GROUP_REMOVE_ALL_TOOLTIP = "Empties the specified group. Can either do this by releasing its members or deleting them.";  // untranslated
Blockly.Msg.GYRO_BUFFER_SIZE_FIELD_1 = "get gyro buffer size";  // untranslated
Blockly.Msg.GYRO_BUFFER_SIZE_TOOLTIP = "";  // untranslated
Blockly.Msg.GYRO_GET_AXIS_FIELD_1 = "get gyro axis";  // untranslated
Blockly.Msg.GYRO_GET_AXIS_TOOLTIP = "";  // untranslated
Blockly.Msg.GYRO_GET_RANGE_FROM_CHIP_FIELD_1 = "get gyro range from chip";  // untranslated
Blockly.Msg.GYRO_GET_RANGE_FROM_CHIP_TOOLTIP = "";  // untranslated
Blockly.Msg.GYRO_SET_FREQUENCY_FIELD_1 = "set gyro frequency";  // untranslated
Blockly.Msg.GYRO_SET_FREQUENCY_TOOLTIP = "";  // untranslated
Blockly.Msg.GYRO_SET_RANGE_FIELD_1 = "set gyro range";  // untranslated
Blockly.Msg.GYRO_SET_RANGE_TOOLTIP = "";  // untranslated
Blockly.Msg.HALF = "half a second";  // untranslated
Blockly.Msg.HARDWARESTARTUP_ARDUINO_FIELD_1 = "setup";  // untranslated
Blockly.Msg.HARDWARESTARTUP_ARDUINO_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.HARDWARESTARTUP_ARDUINO_TOOLTIP = "";  // untranslated
Blockly.Msg.HARDWARESTARTUP_FIELD_1 = "setup";  // untranslated
Blockly.Msg.HARDWARESTARTUP_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.HARDWARESTARTUP_RINGO_FIELD_1 = "setup";  // untranslated
Blockly.Msg.HARDWARESTARTUP_RINGO_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.HARDWARESTARTUP_RINGO_TOOLTIP = "";  // untranslated
Blockly.Msg.HARDWARESTARTUP_TOOLTIP = "This code is run once when the device is first turned on";  // untranslated
Blockly.Msg.HEADING_WITH_SHORTEST_DISTANCE = "heading with shortest distance from";  // untranslated
Blockly.Msg.HEADING_WITH_SHORTEST_DISTANCE_TOOLTIP = "";  // untranslated
Blockly.Msg.HEIGHT = "height";  // untranslated
Blockly.Msg.HELP = "Trợ Giúp";
Blockly.Msg.HIGH = "HIGH";  // untranslated
Blockly.Msg.HIGH_BYTE_FIELD_1 = "Get high-byte from Number";  // untranslated
Blockly.Msg.HIGH_BYTE_HELP_URL = "https://www.arduino.cc/en/Reference/HighByte";  // untranslated
Blockly.Msg.HIGH_BYTE_TOOLTIP = "";  // untranslated
Blockly.Msg.HIGH_FIELD_1 = "HIGH";  // untranslated
Blockly.Msg.HIGH_HELP_URL = "https://www.arduino.cc/en/Reference/Constants";  // untranslated
Blockly.Msg.HIGH_TOOLTIP = "";  // untranslated
Blockly.Msg.ICON_LOOP = "loop always";  // untranslated
Blockly.Msg.ICON_SETUP = "once at start";  // untranslated
Blockly.Msg.IMAGESUBTEXTUREATLAS_FIELD_1 = "add sprite to game from atlas at";  // untranslated
Blockly.Msg.IMAGESUBTEXTUREATLAS_FIELD_2 = "x";  // untranslated
Blockly.Msg.IMAGESUBTEXTUREATLAS_FIELD_3 = "y";  // untranslated
Blockly.Msg.IMAGESUBTEXTUREATLAS_FIELD_4 = "tagged ";  // untranslated
Blockly.Msg.IMAGESUBTEXTUREATLAS_FIELD_5 = "subtexture id";  // untranslated
Blockly.Msg.IMAGESUBTEXTUREATLAS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Loader.html#atlasXML";  // untranslated
Blockly.Msg.IMAGESUBTEXTUREATLAS_TOOLTIP = "Adds a sprite to the game using data from a texture atlas.";  // untranslated
Blockly.Msg.IN = "in";  // untranslated
Blockly.Msg.INLINE_INPUTS = "Chỗ Gắn Cùng Dòng";
Blockly.Msg.INSIDE_CLASS_ONLY_WARNING = "This block can only be used inside of a class!";  // untranslated
Blockly.Msg.IN_MILLISECONDS = "in milliseconds";  // untranslated
Blockly.Msg.IR_BUTTON_FIELD_1 = "wink IR button:";  // untranslated
Blockly.Msg.IR_BUTTON_HELP_URL = "";  // untranslated
Blockly.Msg.IR_BUTTON_TOOLTIP = "";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_1 = "1";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_10 = "10";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_11 = "Forward";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_12 = "Left";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_13 = "Right";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_14 = "Backward";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_15 = "Power";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_16 = "Plum Logo";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_17 = "Menu";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_18 = "A";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_19 = "B";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_2 = "2";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_20 = "X";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_21 = "Play";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_3 = "3";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_4 = "4";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_5 = "5";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_6 = "6";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_7 = "7";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_8 = "8";  // untranslated
Blockly.Msg.IR_CONTROL_BUTTON_DROPDOWN_9 = "9";  // untranslated
Blockly.Msg.IR_CONTROL_CONTAINER_FIELD_1 = "when IR is done";  // untranslated
Blockly.Msg.IR_CONTROL_CONTAINER_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.IR_CONTROL_CONTAINER_TOOLTIP = "Code starts running from here when IR data is done being recieved.";  // untranslated
Blockly.Msg.IR_CONTROL_CONTROL_FIELD_1 = "check key for press";  // untranslated
Blockly.Msg.IR_CONTROL_CONTROL_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.IR_CONTROL_CONTROL_TOOLTIP = "Check to see what key was pressed";  // untranslated
Blockly.Msg.IR_CONTROL_FIELD_1 = "When ";  // untranslated
Blockly.Msg.IR_CONTROL_FIELD_2 = "is pressed";  // untranslated
Blockly.Msg.IR_CONTROL_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.IR_CONTROL_TOOLTIP = "";  // untranslated
Blockly.Msg.IR_WHEN_FIELD_1 = "when IR is done";  // untranslated
Blockly.Msg.IR_WHEN_FIELD_2 = "if ";  // untranslated
Blockly.Msg.IR_WHEN_FIELD_3 = "button";  // untranslated
Blockly.Msg.IR_WHEN_FIELD_4 = "is pressed";  // untranslated
Blockly.Msg.IR_WHEN_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.IR_WHEN_TOOLTIP = "";  // untranslated
Blockly.Msg.IS_BODY_TOUCHING_FIELD_1 = "touching";  // untranslated
Blockly.Msg.IS_BODY_TOUCHING_FIELD_2 = "?";  // untranslated
Blockly.Msg.IS_BODY_TOUCHING_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.Body.html#touching";  // untranslated
Blockly.Msg.IS_BODY_TOUCHING_TOOLTIP = "Check to see if the object is being touched in the given direction.";  // untranslated
Blockly.Msg.IS_BODY_TOUCHING_VI_DIRECTION_DROPDOWN_1 = "Up";  // untranslated
Blockly.Msg.IS_BODY_TOUCHING_VI_DIRECTION_DROPDOWN_2 = "Down";  // untranslated
Blockly.Msg.IS_BODY_TOUCHING_VI_DIRECTION_DROPDOWN_3 = "Left";  // untranslated
Blockly.Msg.IS_BODY_TOUCHING_VI_DIRECTION_DROPDOWN_4 = "Right";  // untranslated
Blockly.Msg.IS_BODY_TOUCHING_VI_DIRECTION_DROPDOWN_5 = "None";  // untranslated
Blockly.Msg.IS_BODY_TOUCHING_VI_FIELD_1 = "is touching";  // untranslated
Blockly.Msg.IS_BODY_TOUCHING_VI_FIELD_2 = "?";  // untranslated
Blockly.Msg.IS_BODY_TOUCHING_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.Body.html#touching";  // untranslated
Blockly.Msg.IS_BODY_TOUCHING_VI_TOOLTIP = "Check to see if the object is being touched in the given direction.";  // untranslated
Blockly.Msg.IS_IR_DONE_FIELD_1 = "is IR done?";  // untranslated
Blockly.Msg.IS_IR_DONE_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.IS_IR_DONE_TOOLTIP = "Checks to see if we received an IR input to process";  // untranslated
Blockly.Msg.IS_KEY_DOWN_FIELD_1 = "key";  // untranslated
Blockly.Msg.IS_KEY_DOWN_FIELD_2 = "is down?";  // untranslated
Blockly.Msg.IS_KEY_DOWN_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Keyboard.html#isDown";  // untranslated
Blockly.Msg.IS_KEY_DOWN_TOOLTIP = "Checks if the given key is down";  // untranslated
Blockly.Msg.IS_MOUSE_BUTTON_CLICKED_BUTTON_DROPDOWN_1 = "left";  // untranslated
Blockly.Msg.IS_MOUSE_BUTTON_CLICKED_BUTTON_DROPDOWN_2 = "right";  // untranslated
Blockly.Msg.IS_MOUSE_BUTTON_CLICKED_BUTTON_DROPDOWN_3 = "middle";  // untranslated
Blockly.Msg.IS_MOUSE_BUTTON_CLICKED_FIELD_1 = "mouse button is clicked?";  // untranslated
Blockly.Msg.IS_MOUSE_BUTTON_CLICKED_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Pointer.html#isDown";  // untranslated
Blockly.Msg.IS_MOUSE_BUTTON_CLICKED_TOOLTIP = "Is the specified button clicked";  // untranslated
Blockly.Msg.IS_OVER_EDGE = "is over edge";  // untranslated
Blockly.Msg.IS_OVER_EDGE_TOOLTIP = "";  // untranslated
Blockly.Msg.IS_STATIONARY_FIELD_1 = "is ringo stationary";  // untranslated
Blockly.Msg.IS_STATIONARY_TOOLTIP = "";  // untranslated
Blockly.Msg.JAVASCRIPT_EVAL_HELP_URL = "developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval";  // untranslated
Blockly.Msg.JAVASCRIPT_EVAL_OUTPUT_HELP_URL = "developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval";  // untranslated
Blockly.Msg.JAVASCRIPT_EVAL_OUTPUT_TITLE = "eval with output";  // untranslated
Blockly.Msg.JAVASCRIPT_EVAL_OUTPUT_TOOLTIP = "Execute the JavaScript expression returning the value";  // untranslated
Blockly.Msg.JAVASCRIPT_EVAL_TITLE = "eval";  // untranslated
Blockly.Msg.JAVASCRIPT_EVAL_TOOLTIP = "Execute the JavaScript expression";  // untranslated
Blockly.Msg.KILL_OBJECT_FIELD_1 = "kill";  // untranslated
Blockly.Msg.KILL_OBJECT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#kill";  // untranslated
Blockly.Msg.KILL_OBJECT_TOOLTIP = "Will kill the object setting making it non-existent. Reverse with revive.";  // untranslated
Blockly.Msg.LED_BUILTIN_FIELD_1 = "LED_BUILTIN";  // untranslated
Blockly.Msg.LED_BUILTIN_HELP_URL = "https://www.arduino.cc/en/Reference/Constants";  // untranslated
Blockly.Msg.LED_BUILTIN_TOOLTIP = "";  // untranslated
Blockly.Msg.LEFTPREVCOLOUR_FIELD_1 = "left previous color";  // untranslated
Blockly.Msg.LEFTPREVCOLOUR_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.LEFTPREVCOLOUR_TOOLTIP = "";  // untranslated
Blockly.Msg.LERP_X = "lerp x";  // untranslated
Blockly.Msg.LERP_Y = "lerp y";  // untranslated
Blockly.Msg.LIGHT_EFFECT_DISCO_LIGHTS = "Makes the eyes twinkle with blues, greens, and purples for the specified time in seconds.";  // untranslated
Blockly.Msg.LIGHT_EFFECT_FIREWORK_LIGHTS = "Makes the eyes flicker as if a firework had gone off for the specified time in seconds.";  // untranslated
Blockly.Msg.LIGHT_EFFECT_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.LIGHT_EFFECT_POLICE_LIGHTS = "Makes the eyes flash red and blue for the specified time in seconds.";  // untranslated
Blockly.Msg.LIGHT_EFFECT_RAINBOW_LIGHT = "Makes the eyes cycle through the rainbow for the specified time in seconds.";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "tạo danh sách trống";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Hoàn trả một danh sách, với độ dài 0, không có thành tố nào cả";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "danh sách";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Thêm, bỏ, hoặc sắp xếp lại các thành phần để tạo dựng mảnh danh sách này.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "tạo danh sách gồm";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Thêm vật vào danh sách.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Tạo một danh sách bao gồm nhiều vậts, với một số lượng bất kỳ.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "đầu tiên";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "(đếm từ cuối) thứ";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "thứ";
Blockly.Msg.LISTS_GET_INDEX_GET = "lấy thành tố";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "lấy và xóa thành tố";
Blockly.Msg.LISTS_GET_INDEX_LAST = "cuối cùng";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "bất kỳ";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "xóa thành tố";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Hoàn trả thành tố đầu tiên trong danh sách.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "Hoàn trả thành tố trong danh sách ở vị trí ấn định.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Hoàn trả thành tố cuối cùng trong danh sách.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Hoàn trả một thành tố bất kỳ trong danh sách.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Hoàn trả và xóa thành tố đầu tiên trong danh sách.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "Hoàn trả và xóa thành tố trong danh sách ở vị trí ấn định.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Hoàn trả và xóa thành tố cuối cùng trong danh sách.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Hoàn trả và xóa mộtthành tố bất kỳ trong danh sách.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Xóa thành tố đầu tiên trong danh sách.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM = "Xóa thành tố trong danh sách ở vị trí ấn định.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Xóa thành tố cuối cùng trong danh sách.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Xóa thành tố bất kỳ trong danh sách.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "đến (đếm từ cuối) thứ";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "đến thứ";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "đến cuối cùng";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "lấy một danh sách con từ đầu tiên";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "lấy một danh sách con từ (đếm từ cuối) thứ";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "lấy một danh sách con từ thứ";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Lấy một mảng của danh sách này để tạo danh sách con.";
Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP = "%1 là thành tố cuối cùng.";
Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1 là thành tố đầu tiên.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "tìm sự có mặt đầu tiên của vật";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "tìm sự có mặt cuối cùng của vật";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Hoàn trả vị trí xuất hiện đầu/cuối của vật trong danh sách.  Nếu không tìm thấy thì hoàn trả số %1.";
Blockly.Msg.LISTS_INLIST = "trong dánh sách";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 trống rỗng";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Hoàn trả “đúng\" nếu danh sách không có thành tử nào.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "độ dài của %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Hoàn trả độ dài của một danh sách.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "tạo danh sách gồm một vật %1 lặp lại %2 lần";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Tạo danh sách gồm một số lượng vật nhất định với mỗi vật đều giống nhau.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "giá trị";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "gắn chèn vào vị trí";
Blockly.Msg.LISTS_SET_INDEX_SET = "đặt thành tố";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Gắn chèn vật vào đầu danh sách.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM = "Gắn chèn vật vào danh sách theo vị trí ấn định.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Gắn thêm vật vào cuối danh sách.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Gắn chèn vật vào danh sách ở vị trí ngẫu nhiên.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Đặt giá trị của thành tố đầu tiên trong danh sách.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM = "Đặt giá trị của thành tố ở vị trí ấn định trong một danh sách.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Đặt giá trị của thành tố cuối cùng trong danh sách.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Đặt giá trị của thành tố ngẫu nhiên trong danh sách.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";  // untranslated
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";  // untranslated
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "make list from text";  // untranslated
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "make text from list";  // untranslated
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "with delimiter";  // untranslated
Blockly.Msg.LIST_FIND_CLOSEST_FIELD_1 = "find the number closest to";  // untranslated
Blockly.Msg.LIST_FIND_CLOSEST_FIELD_2 = "in the list";  // untranslated
Blockly.Msg.LIST_FIND_CLOSEST_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.ArrayUtils.html#_findClosest";  // untranslated
Blockly.Msg.LIST_FIND_CLOSEST_TOOLTIP = "Returns the value closest to the given number in a sorted, numeric list. If two values are equally close, it returns the higher one.";  // untranslated
Blockly.Msg.LIST_GET_RANDOM_FIELD_1 = "get a random item from";  // untranslated
Blockly.Msg.LIST_GET_RANDOM_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.ArrayUtils.html#_getRandomItem";  // untranslated
Blockly.Msg.LIST_GET_RANDOM_TOOLTIP = "Returns a random item from the given list.";  // untranslated
Blockly.Msg.LIST_REMOVE_RANDOM_ITEM_FIELD_1 = "get and remove a random item from";  // untranslated
Blockly.Msg.LIST_REMOVE_RANDOM_ITEM_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.ArrayUtils.html#_removeRandomItem";  // untranslated
Blockly.Msg.LIST_REMOVE_RANDOM_ITEM_TOOLTIP = "Removes a random item from a list and returns it. Note that this modifies the list.";  // untranslated
Blockly.Msg.LIST_SHUFFLE_FIELD_1 = "shuffle";  // untranslated
Blockly.Msg.LIST_SHUFFLE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.ArrayUtils.html#_shuffle";  // untranslated
Blockly.Msg.LIST_SHUFFLE_TOOLTIP = "Randomly rearranges the order of items in a list. Works for more than just cards.";  // untranslated
Blockly.Msg.LOAD_SOUND_FIELD_1 = "create sound";  // untranslated
Blockly.Msg.LOAD_SOUND_FIELD_2 = "tag";  // untranslated
Blockly.Msg.LOAD_SOUND_FIELD_3 = "source";  // untranslated
Blockly.Msg.LOAD_SOUND_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Loader.html#audio";  // untranslated
Blockly.Msg.LOAD_SOUND_TOOLTIP = "Loads an audio file so you can use it later. The tag is a name you use to access it later. The source is a file path. URLs work as a source too, but this is not recommended.";  // untranslated
Blockly.Msg.LOAD_TEXTURE_FIELD_1 = "change texture of";  // untranslated
Blockly.Msg.LOAD_TEXTURE_FIELD_2 = "to tag";  // untranslated
Blockly.Msg.LOAD_TEXTURE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#loadTexture";  // untranslated
Blockly.Msg.LOAD_TEXTURE_TOOLTIP = "This changes the texture of this sprite/image entirely. If it is part of a sprite sheet. Warning: slow.";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "sai";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Hoàn trả \"đúng\" hoặc \"sai\".";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "đúng";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://vi.wikipedia.org/wiki/B%E1%BA%A5t_%C4%91%E1%BA%B3ng_th%E1%BB%A9c";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Hoàn trả giá trị \"đúng\" (true) nếu giá trị hai đầu vào bằng nhau.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Hoàn trả giá trị \"đúng\" (true) nếu đầu vào thứ nhất lớn hơn đầu vào thứ hai.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Hoàn trả giá trị \"đúng\" (true) nếu đầu vào thứ nhất lớn hơn hoặc bằng đầu vào thứ hai.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Hoàn trả giá trị \"đúng\" (true) nếu đầu vào thứ nhất nhỏ hơn đầu vào thứ hai.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Hoàn trả giá trị \"đúng\" (true) nếu đầu vào thứ nhất nhỏ hơn hoặc bằng đầu vào thứ hai.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Hoàn trả giá trị \"đúng\" (true) nếu giá trị hai đầu vào không bằng nhau.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "không %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Hoàn trả \"đúng\" (true) nếu đầu vào sai.  Hoàn trả \"sai\" (false) nếu đầu vào đúng.";
Blockly.Msg.LOGIC_NULL = "trống không";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Hoàn trả trống không.";
Blockly.Msg.LOGIC_OPERATION_AND = "và";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "hoặc";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Hoàn trả \"đúng\" (true) nếu cả hai đầu vào đều đúng.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Hoàn trả \"đúng\" (true) nếu ít nhất một trong hai đầu vào đúng.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "kiểm tra";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "nếu sai";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "nếu đúng";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Kiểm tra điều kiện. Nếu điều kiện đúng, hoàn trả giá trị từ mệnh đề \"nếu đúng\" nếu không đúng, hoàn trả giá trị từ mệnh đề \"nếu sai\".";
Blockly.Msg.LOG_CONSOLE_HELP_URL = "https://en.wikipedia.org/wiki/System_console";  // untranslated
Blockly.Msg.LOG_CONSOLE_TITLE = "log to console";  // untranslated
Blockly.Msg.LOG_CONSOLE_TOOLTIP = "Logs a message to the debug console. Used correctly, this is a very powerful debugging tool.";  // untranslated
Blockly.Msg.LOOK_AT_EDGE = "look at edge";  // untranslated
Blockly.Msg.LOOK_AT_EDGE_TOOLTIP = "It looks at each edge sensor with the light off and then on. It also updates a running average for each sensor, and updates global variables.";  // untranslated
Blockly.Msg.LOOK_FOR_EDGE = "look for edge";  // untranslated
Blockly.Msg.LOOK_FOR_EDGE_TOOLTIP = "LookForEdge()calls LookAtEdge(). After calling LookAtEdge(), the rest of the LookForEdge()function determines if an edge was seen for each of the 3 sensors, andfurthermore, determines if a bright edge was seen or a dark edge is seen. LookForEdge() returns a byte which includes 8 “bits”. Each “bit” is flipped to a 1depending on which edge was seen and whether it was bright or dark.";  // untranslated
Blockly.Msg.LOOP_FIELD_1 = "loop";  // untranslated
Blockly.Msg.LOOP_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.LOOP_TOOLTIP = "This code is run continuously once the device is turned on";  // untranslated
Blockly.Msg.LOW = "LOW";  // untranslated
Blockly.Msg.LOW_BYTE_FIELD_1 = "Get low-byte from Number";  // untranslated
Blockly.Msg.LOW_BYTE_HELP_URL = "https://www.arduino.cc/en/Reference/LowByte";  // untranslated
Blockly.Msg.LOW_BYTE_TOOLTIP = "";  // untranslated
Blockly.Msg.LOW_FIELD_1 = "LOW";  // untranslated
Blockly.Msg.LOW_HELP_URL = "https://www.arduino.cc/en/Reference/Constants";  // untranslated
Blockly.Msg.LOW_TOOLTIP = "";  // untranslated
Blockly.Msg.MAINTAIN_HEADING_FIELD_1 = "maintain heading with ";  // untranslated
Blockly.Msg.MAINTAIN_HEADING_FIELD_2 = "direction";  // untranslated
Blockly.Msg.MAINTAIN_HEADING_FIELD_3 = "and speed";  // untranslated
Blockly.Msg.MAINTAIN_HEADING_FIELD_4 = "and wiggle";  // untranslated
Blockly.Msg.MAINTAIN_HEADING_RESET_FIELD_1 = "reset maintain heading";  // untranslated
Blockly.Msg.MAINTAIN_HEADING_RESET_TOOLTIP = "";  // untranslated
Blockly.Msg.MAINTAIN_HEADING_TOOLTIP = "";  // untranslated
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://vi.wikipedia.org/wiki/S%E1%BB%91_h%E1%BB%8Dc";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Hoàn trả tổng của hai con số.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Hoàn trả thương của hai con số.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Hoàn trả hiệu của hai con số.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Hoàn trả tích của hai con số.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Hoàn trả số lũy thừa với số thứ nhất là cơ số và số thứ hai là số mũ.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://vi.wikipedia.org/wiki/Ph%C3%A9p_c%E1%BB%99ng";
Blockly.Msg.MATH_CHANGE_TITLE = "cộng vào %1 giá trị %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Cộng số đầu vào vào biến \"%1\".";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Hoàn trả các đẳng số thường gặp: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (vô cực).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "giới hạn %1 không dưới %2 không hơn %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Giới hạn số đầu vào để không dưới số thứ nhất và không hơn số thứ hai.";
Blockly.Msg.MATH_DEG_TO_RAD_FIELD_1 = "convert degrees";  // untranslated
Blockly.Msg.MATH_DEG_TO_RAD_FIELD_2 = "to radians";  // untranslated
Blockly.Msg.MATH_DEG_TO_RAD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Math.html#degToRad";  // untranslated
Blockly.Msg.MATH_DEG_TO_RAD_TOOLTIP = "Converts a value in degrees to an equivalent in radians.";  // untranslated
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "chia hết cho";
Blockly.Msg.MATH_IS_EVEN = "chẵn";
Blockly.Msg.MATH_IS_NEGATIVE = "là số âm";
Blockly.Msg.MATH_IS_ODD = "lẻ";
Blockly.Msg.MATH_IS_POSITIVE = "là số dương";
Blockly.Msg.MATH_IS_PRIME = "là số nguyên tố";
Blockly.Msg.MATH_IS_TOOLTIP = "Kiểm tra con số xem nó có phải là số chẵn, lẻ, nguyên tố, nguyên, dương, âm,  hay xem nó có chia hết cho số đầu vào hay không.  Hoàn trả đúng hay sai.";
Blockly.Msg.MATH_IS_WHOLE = "là số nguyên";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "số dư của %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Chia số thứ nhất cho số thứ hai rồi hoàn trả số dư từ.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_BINARY = "binary";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://vi.wikipedia.org/wiki/S%E1%BB%91";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Một con số.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "giá trị trung bình của một danh sách";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "số lớn nhât của một danh sách";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "số trung vị của một danh sách";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "số nhỏ nhất của một danh sách";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "các mode của một danh sách";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "một số bất kỳ của một danh sách";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "độ lệch chuẩn của một danh sách";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "tổng của một danh sách";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Hoàn trả giá trị trung bình từ của danh sách số.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Hoàn trả số lớn nhất trong tất cả các số trong danh sách.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Hoàn trả số trung vị của danh sách số.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Hoàn trả số nhỏ nhất trong tất cả các số trong danh sách.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Hoàn trả các số có mặt nhiều nhất trong danh sách.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Hoàn trả một số bất kỳ từ các số trong danh sách.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Hoàn trả độ lệch chuẩn của danh sách số.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Hoàn trả tổng số của tất cả các số trong danh sách.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RAD_TO_DEG_FIELD_1 = "convert radians";  // untranslated
Blockly.Msg.MATH_RAD_TO_DEG_FIELD_2 = "to degrees";  // untranslated
Blockly.Msg.MATH_RAD_TO_DEG_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Math.html#radToDeg";  // untranslated
Blockly.Msg.MATH_RAD_TO_DEG_TOOLTIP = "Converts an angle in degrees to an equivalent in radians.";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "phân số bất kỳ";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Hoàn trả một phân số bất kỳ không nhỏ hơn 0.0 và không lớn hơn 1.0.";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "Một số nguyên bất kỳ từ %1 đến %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Hoàn trả một số nguyên bất kỳ lớn hơn hoặc bằng số đầu và nhỏ hơn hoặc bằng số sau.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "làm tròn";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "làm tròn xuống";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "làm tròn lên";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Làm tròn lên hoặc tròn xuống số đầu vào.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://vi.wikipedia.org/wiki/C%C4%83n_b%E1%BA%ADc_hai";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "giá trị tuyệt đối";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "căn bật hai";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Hoàn trả giá trị tuyệt đối của số đầu vào.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Hoàn trả lũy thừa của số e với số mũ đầu vào.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Hoàn trả lôgarit tự nhiên của số đầu vào.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Hoàn trả lôgarit cơ số 10 của số đầu vào.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Đổi dấu của số đầu vào: âm thành dương và dương thành âm, và hoàn trả số mới.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Hoàn trả lũy thừa của số 10 với số mũ đầu vào.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Hoàn trả căn bật hai của số đầu vào.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://vi.wikipedia.org/wiki/H%C3%A0m_l%C6%B0%E1%BB%A3ng_gi%C3%A1c";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Hoàn trả Arccos của một góc (theo độ).";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Hoàn trả Arcsin của một góc (theo độ).";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Hoàn trả Arctang của một góc (theo độ).";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Hoàn trả Cos của một góc (theo độ).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Hoàn trả Sin của một góc (theo độ).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Hoàn trả Tang của một góc (theo độ).";
Blockly.Msg.MAX_EXPECTED_TURN_TIME = "with max expected turn time (milliseconds)";  // untranslated
Blockly.Msg.MEMBER_DEFINITION_CREATE = "create";  // untranslated
Blockly.Msg.MEMBER_DEFINITION_DEFAULT_TEXT = "name";  // untranslated
Blockly.Msg.MEMBER_DEFINITION_HELP_URL = "";  // untranslated
Blockly.Msg.MEMBER_DEFINITION_TOOLTIP = "";  // untranslated
Blockly.Msg.MEMBER_DEFINITION_WITH_VALUE = "with value";  // untranslated
Blockly.Msg.METHOD_DEFINITION_DEFAULT_TEXT = "to do something";  // untranslated
Blockly.Msg.METHOD_DEFINITION_HELP_URL = "";  // untranslated
Blockly.Msg.METHOD_DEFINITION_TITLE = "to";  // untranslated
Blockly.Msg.METHOD_DEFINITION_TOOLTIP = "";  // untranslated
Blockly.Msg.MICROSECONDS = "microseconds";  // untranslated
Blockly.Msg.MICROSECONDS_SINCE_START_HELP_URL = "https://www.arduino.cc/en/Reference/Micros";  // untranslated
Blockly.Msg.MICROSECONDS_SINCE_START_TOOLTIP = "Gets the number of microseconds since start of the program. There are 1,000,000 microseconds in a second.";  // untranslated
Blockly.Msg.MILLISECONDS = "milliseconds";  // untranslated
Blockly.Msg.MILLISECONDS_SINCE_START_HELP_URL = "https://www.arduino.cc/en/Reference/Millis";  // untranslated
Blockly.Msg.MILLISECONDS_SINCE_START_TOOLTIP = "Gets the number of milliseconds since start of the program. There are 1,000 milliseconds in a second.";  // untranslated
Blockly.Msg.MINUTE = "one minute";  // untranslated
Blockly.Msg.MIN_TURN_FIELD_1 = "minimum turn";  // untranslated
Blockly.Msg.MIN_TURN_FIELD_2 = "degrees";  // untranslated
Blockly.Msg.MIN_TURN_TOOLTIP = "";  // untranslated
Blockly.Msg.MIN_TURN_TO_HEADING_FIELD_1 = "minimum turn to heading";  // untranslated
Blockly.Msg.MIN_TURN_TO_HEADING_TOOLTIP = "";  // untranslated
Blockly.Msg.MOTORS_BEGIN_FIELD_1 = "begin motors";  // untranslated
Blockly.Msg.MOTORS_BEGIN_TOOLTIP = "";  // untranslated
Blockly.Msg.MOTORS_FIELD_1 = "set motor speed";  // untranslated
Blockly.Msg.MOTORS_FIELD_2 = "left speed";  // untranslated
Blockly.Msg.MOTORS_FIELD_3 = "right speed";  // untranslated
Blockly.Msg.MOTORS_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.MOTORS_TOOLTIP = "Sets the motor speed to something positive or negative for both the left and right motor";  // untranslated
Blockly.Msg.MOVE_BY = "move position of object";  // untranslated
Blockly.Msg.MOVE_BY_HELP_URL = "";  // untranslated
Blockly.Msg.MOVE_BY_TOOLTIP = "Add (x,y) to the position of the object";  // untranslated
Blockly.Msg.MOVE_DOWN_FIELD_1 = "move";  // untranslated
Blockly.Msg.MOVE_DOWN_FIELD_2 = "down";  // untranslated
Blockly.Msg.MOVE_DOWN_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#moveDown";  // untranslated
Blockly.Msg.MOVE_DOWN_TOOLTIP = "Moves this sprite/image down one place in the display order. If sprites overlap, it will be more likely to display underneath others.";  // untranslated
Blockly.Msg.MOVE_TO_OBJECT_FIELD_1 = "move game object";  // untranslated
Blockly.Msg.MOVE_TO_OBJECT_FIELD_2 = "to object";  // untranslated
Blockly.Msg.MOVE_TO_OBJECT_FIELD_3 = "at";  // untranslated
Blockly.Msg.MOVE_TO_OBJECT_FIELD_4 = "pixels per second";  // untranslated
Blockly.Msg.MOVE_TO_OBJECT_FIELD_5 = "max time (ms)";  // untranslated
Blockly.Msg.MOVE_TO_OBJECT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.html#moveToObject";  // untranslated
Blockly.Msg.MOVE_TO_OBJECT_TOOLTIP = "Move the object to the given object at the given speed";  // untranslated
Blockly.Msg.MOVE_TO_POINTER_EXTENDED_FIELD_1 = "move game object";  // untranslated
Blockly.Msg.MOVE_TO_POINTER_EXTENDED_FIELD_2 = "to mouse pointer at";  // untranslated
Blockly.Msg.MOVE_TO_POINTER_EXTENDED_FIELD_3 = "pixels per second.";  // untranslated
Blockly.Msg.MOVE_TO_POINTER_EXTENDED_FIELD_4 = "Max time (ms)";  // untranslated
Blockly.Msg.MOVE_TO_POINTER_EXTENDED_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.html#moveToPointer";  // untranslated
Blockly.Msg.MOVE_TO_POINTER_EXTENDED_TOOLTIP = "Move the object to the pointer at the given speed";  // untranslated
Blockly.Msg.MOVE_TO_POINTER_FIELD_1 = "move game object";  // untranslated
Blockly.Msg.MOVE_TO_POINTER_FIELD_2 = "to mouse pointer at";  // untranslated
Blockly.Msg.MOVE_TO_POINTER_FIELD_3 = "pixels per second";  // untranslated
Blockly.Msg.MOVE_TO_POINTER_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.html#moveToPointer";  // untranslated
Blockly.Msg.MOVE_TO_POINTER_TOOLTIP = "Move the object to the pointer at the given speed";  // untranslated
Blockly.Msg.MOVE_UP_FIELD_1 = "move";  // untranslated
Blockly.Msg.MOVE_UP_FIELD_2 = "up";  // untranslated
Blockly.Msg.MOVE_UP_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#moveUp";  // untranslated
Blockly.Msg.MOVE_UP_TOOLTIP = "Moves this sprite up one place in the display order. If sprites overlap, it will be more likely to display on top of others.";  // untranslated
Blockly.Msg.NAVIGATION_PAUSED_FIELD_1 = "is navigation paused";  // untranslated
Blockly.Msg.NAVIGATION_PAUSED_TOOLTIP = "";  // untranslated
Blockly.Msg.NAVIGATION_XY_FIELD_1 = "navigation xy with";  // untranslated
Blockly.Msg.NAVIGATION_XY_FIELD_2 = "gyro sensitivity";  // untranslated
Blockly.Msg.NAVIGATION_XY_FIELD_3 = "acceleration sensitivity";  // untranslated
Blockly.Msg.NAVIGATION_XY_TOOLTIP = "";  // untranslated
Blockly.Msg.NEW_VARIABLE = "Biến mới...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Tên của biến mới:";
Blockly.Msg.NON_STATIONARY_AXIS_FIELD_1 = "get non-stationary axis";  // untranslated
Blockly.Msg.NON_STATIONARY_AXIS_TOOLTIP = "";  // untranslated
Blockly.Msg.NON_STATIONARY_VALUE_FIELD_1 = "get non-stationary value";  // untranslated
Blockly.Msg.NON_STATIONARY_VALUE_TOOLTIP = "";  // untranslated
Blockly.Msg.NUMBER_LIST_FIELD_1 = "create a list with every number from";  // untranslated
Blockly.Msg.NUMBER_LIST_FIELD_2 = "to";  // untranslated
Blockly.Msg.NUMBER_LIST_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.ArrayUtils.html#_numberArray";  // untranslated
Blockly.Msg.NUMBER_LIST_STEP_FIELD_1 = "create a list from";  // untranslated
Blockly.Msg.NUMBER_LIST_STEP_FIELD_2 = "to";  // untranslated
Blockly.Msg.NUMBER_LIST_STEP_FIELD_3 = "stepping by";  // untranslated
Blockly.Msg.NUMBER_LIST_STEP_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.ArrayUtils.html#_numberArrayStep";  // untranslated
Blockly.Msg.NUMBER_LIST_STEP_TOOLTIP = "Creates a list in the given range, counting up by a specified value. Does NOT include the end of the range.";  // untranslated
Blockly.Msg.NUMBER_LIST_TOOLTIP = "Creates a list of numbers, in order within the specified range, including the start and end.";  // untranslated
Blockly.Msg.OBJECT_INCAMERA_FIELD_1 = "is";  // untranslated
Blockly.Msg.OBJECT_INCAMERA_FIELD_2 = "in camera?";  // untranslated
Blockly.Msg.OBJECT_INCAMERA_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Component.InCamera.html";  // untranslated
Blockly.Msg.OBJECT_INCAMERA_TOOLTIP = "Checks if an object is inside the boundaries of the camera.";  // untranslated
Blockly.Msg.OBJECT_SET_TO_FIELD_1 = "for";  // untranslated
Blockly.Msg.OBJECT_SET_TO_FIELD_2 = "set x to";  // untranslated
Blockly.Msg.OBJECT_SET_TO_FIELD_3 = "set y to";  // untranslated
Blockly.Msg.OBJECT_SET_TO_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Point.html#setTo";  // untranslated
Blockly.Msg.OBJECT_SET_TO_TOOLTIP = "Sets the x and y fields of an object.";  // untranslated
Blockly.Msg.OF = "of";  // untranslated
Blockly.Msg.OFF_CHIRP_FIELD_1 = "turn chirp off";  // untranslated
Blockly.Msg.OFF_CHIRP_TOOLTIP = "";  // untranslated
Blockly.Msg.OFF_PIXELS_FIELD_1 = "turn all pixels off";  // untranslated
Blockly.Msg.OFF_PIXELS_TOOLTIP = "";  // untranslated
Blockly.Msg.OFF_PIXEL_FIELD_1 = "turn";  // untranslated
Blockly.Msg.OFF_PIXEL_FIELD_2 = "off";  // untranslated
Blockly.Msg.OFF_PIXEL_PIXEL_DROPDOWN_1 = "left eye";  // untranslated
Blockly.Msg.OFF_PIXEL_PIXEL_DROPDOWN_2 = "right eye";  // untranslated
Blockly.Msg.OFF_PIXEL_PIXEL_DROPDOWN_3 = "body top";  // untranslated
Blockly.Msg.OFF_PIXEL_PIXEL_DROPDOWN_4 = "body bottom";  // untranslated
Blockly.Msg.OFF_PIXEL_PIXEL_DROPDOWN_5 = "tail top";  // untranslated
Blockly.Msg.OFF_PIXEL_PIXEL_DROPDOWN_6 = "tail bottom";  // untranslated
Blockly.Msg.OFF_PIXEL_TOOLTIP = "";  // untranslated
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.OUT_OF_BOUNDS_FAINT_FIELD_1 = "make";  // untranslated
Blockly.Msg.OUT_OF_BOUNDS_FAINT_FIELD_2 = "get deleted if it leaves the world?";  // untranslated
Blockly.Msg.OUT_OF_BOUNDS_FAINT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#outOfBoundsKill";  // untranslated
Blockly.Msg.OUT_OF_BOUNDS_FAINT_TOOLTIP = "Will automatically destroy this object if it goes outside the world bounds. Warning: this will not work on objects that are not checking to see if they are inside the world.";  // untranslated
Blockly.Msg.OUT_OF_BOUNDS_KILL_FIELD_1 = "make";  // untranslated
Blockly.Msg.OUT_OF_BOUNDS_KILL_FIELD_2 = "get deleted if it leaves the world?";  // untranslated
Blockly.Msg.OUT_OF_BOUNDS_KILL_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#outOfBoundsKill";  // untranslated
Blockly.Msg.OUT_OF_BOUNDS_KILL_TOOLTIP = "Will automatically destroy this object if it goes outside the world bounds. Warning: this will not work on objects that are not checking to see if they are inside the world.";  // untranslated
Blockly.Msg.PAUSE_NAVIGATION_FIELD_1 = "pause navigation";  // untranslated
Blockly.Msg.PAUSE_NAVIGATION_TOOLTIP = "";  // untranslated
Blockly.Msg.PAUSE_TIMER = "pause timer";  // untranslated
Blockly.Msg.PAUSE_TIMER_TOOLTIP = "Pauses the timer and all events in the queue";  // untranslated
Blockly.Msg.PAUSE_TIMER_URL = "http://dragondrop.digipen.edu/docs/Phaser.Timer.html#pause";  // untranslated
Blockly.Msg.PHASER_EASING_TOOLTIP = "Prebuilt easing functions you can utilize through out your code";  // untranslated
Blockly.Msg.PHASER_EASING_URL = "http://dragondrop.digipen.edu/docs/Phaser.Easing.html";  // untranslated
Blockly.Msg.PHASER_GAME_ADD_TWEEN_FROM_TITLE = "create tween from";  // untranslated
Blockly.Msg.PHASER_GAME_ADD_TWEEN_FROM_TOOLTIP = "Create a tween from the end value to the current values, setting the values to end first";  // untranslated
Blockly.Msg.PHASER_GAME_ADD_TWEEN_FROM_URL = "http://dragondrop.digipen.edu/docs/Phaser.Tween.html#from";  // untranslated
Blockly.Msg.PHASER_GAME_ADD_TWEEN_TO_TITLE = "create tween to";  // untranslated
Blockly.Msg.PHASER_GAME_ADD_TWEEN_TO_TOOLTIP = "Create a tween from the current value to the end values";  // untranslated
Blockly.Msg.PHASER_GAME_ADD_TWEEN_TO_URL = "http://dragondrop.digipen.edu/docs/Phaser.Tween.html#to";  // untranslated
Blockly.Msg.PHASER_PAUSE_TWEEN = "pause tween";  // untranslated
Blockly.Msg.PHASER_PAUSE_TWEEN_TOOLTIP = "pause the tween dispatching onComplete if complete is checked";  // untranslated
Blockly.Msg.PHASER_PAUSE_TWEEN_URL = "http://dragondrop.digipen.edu/docs/Phaser.Tween.html#pause";  // untranslated
Blockly.Msg.PHASER_RESUME_TWEEN = "resume tween";  // untranslated
Blockly.Msg.PHASER_RESUME_TWEEN_TOOLTIP = "resume the tween dispatching onComplete if complete is checked";  // untranslated
Blockly.Msg.PHASER_RESUME_TWEEN_URL = "http://dragondrop.digipen.edu/docs/Phaser.Tween.html#resume";  // untranslated
Blockly.Msg.PHASER_SIMPLE_INIT_FIELD_1 = "run phaser";  // untranslated
Blockly.Msg.PHASER_SIMPLE_INIT_FIELD_2 = "width";  // untranslated
Blockly.Msg.PHASER_SIMPLE_INIT_FIELD_3 = "height";  // untranslated
Blockly.Msg.PHASER_SIMPLE_INIT_FIELD_4 = "on preload do";  // untranslated
Blockly.Msg.PHASER_SIMPLE_INIT_FIELD_5 = "on create do";  // untranslated
Blockly.Msg.PHASER_SIMPLE_INIT_FIELD_6 = "on update do";  // untranslated
Blockly.Msg.PHASER_SIMPLE_INIT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Game.html";  // untranslated
Blockly.Msg.PHASER_SIMPLE_INIT_TOOLTIP = "Create a Phaser Game with given width and height.";  // untranslated
Blockly.Msg.PHASER_START_TWEEN = "start tween";  // untranslated
Blockly.Msg.PHASER_START_TWEEN_TOOLTIP = "start the tween dispatching onComplete if complete is checked";  // untranslated
Blockly.Msg.PHASER_START_TWEEN_URL = "http://dragondrop.digipen.edu/docs/Phaser.Tween.html#start";  // untranslated
Blockly.Msg.PHASER_STOP_TWEEN = "stop tween";  // untranslated
Blockly.Msg.PHASER_STOP_TWEEN_COMPLETE = "fire onComplete";  // untranslated
Blockly.Msg.PHASER_STOP_TWEEN_TOOLTIP = "Stop the tween dispatching onComplete if complete is checked";  // untranslated
Blockly.Msg.PHASER_STOP_TWEEN_URL = "http://dragondrop.digipen.edu/docs/Phaser.Tween.html#stop";  // untranslated
Blockly.Msg.PHASER_TWEEN_AUTO_START = "auto start";  // untranslated
Blockly.Msg.PHASER_TWEEN_DELAY = "delay";  // untranslated
Blockly.Msg.PHASER_TWEEN_DURATION = "duration";  // untranslated
Blockly.Msg.PHASER_TWEEN_EASE = "ease";  // untranslated
Blockly.Msg.PHASER_TWEEN_MUTATORARG_TITLE = "property";  // untranslated
Blockly.Msg.PHASER_TWEEN_MUTATORARG_TOOLTIP = "Property to tween on the target object";  // untranslated
Blockly.Msg.PHASER_TWEEN_MUTATORCONTAINER_TITLE = "properties";  // untranslated
Blockly.Msg.PHASER_TWEEN_MUTATORCONTAINER_TOOLTIP = "List of properties to tween on the target object";  // untranslated
Blockly.Msg.PHASER_TWEEN_PROPERTIES_HEADER = "properties:";  // untranslated
Blockly.Msg.PHASER_TWEEN_REPEAT = "repeat";  // untranslated
Blockly.Msg.PHASER_TWEEN_TARGET = "target";  // untranslated
Blockly.Msg.PHASER_TWEEN_YOYO = "yoyo";  // untranslated
Blockly.Msg.PHASER_YOYO_CHILD_TWEEN_INDEX = "child index";  // untranslated
Blockly.Msg.PHASER_YOYO_TWEEN = "yoyo tween";  // untranslated
Blockly.Msg.PHASER_YOYO_TWEEN_DELAY = "delay";  // untranslated
Blockly.Msg.PHASER_YOYO_TWEEN_TOOLTIP = "enable or disable yoyoing for this tween";  // untranslated
Blockly.Msg.PHASER_YOYO_TWEEN_URL = "http://dragondrop.digipen.edu/docs/Phaser.Tween.html#yoyo";  // untranslated
Blockly.Msg.PIN = "pin";  // untranslated
Blockly.Msg.PININPUT_FIELD_1 = "set pin # ";  // untranslated
Blockly.Msg.PININPUT_FIELD_2 = "to";  // untranslated
Blockly.Msg.PININPUT_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.PININPUT_MODE_DROPDOWN_1 = "input";  // untranslated
Blockly.Msg.PININPUT_MODE_DROPDOWN_2 = "output";  // untranslated
Blockly.Msg.PININPUT_MODE_DROPDOWN_3 = "input_pullup";  // untranslated
Blockly.Msg.PININPUT_TOOLTIP = "";  // untranslated
Blockly.Msg.PLAY_ACK_FIELD_1 = "play acknowledgment chirp";  // untranslated
Blockly.Msg.PLAY_ACK_TOOLTIP = "";  // untranslated
Blockly.Msg.PLAY_ANGER_FIELD_1 = "play anger";  // untranslated
Blockly.Msg.PLAY_ANGER_TOOLTIP = "";  // untranslated
Blockly.Msg.PLAY_ANIMATION_FIELD_1 = "play animation";  // untranslated
Blockly.Msg.PLAY_ANIMATION_FIELD_2 = "on";  // untranslated
Blockly.Msg.PLAY_ANIMATION_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#play";  // untranslated
Blockly.Msg.PLAY_ANIMATION_TOOLTIP = "Starts playing an animation on the given sprite.";  // untranslated
Blockly.Msg.PLAY_ANIMATION_VI_FIELD_1 = "play animation";  // untranslated
Blockly.Msg.PLAY_ANIMATION_VI_FIELD_2 = "on";  // untranslated
Blockly.Msg.PLAY_ANIMATION_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#play";  // untranslated
Blockly.Msg.PLAY_ANIMATION_VI_TOOLTIP = "Plays an animation on the given sprite.";  // untranslated
Blockly.Msg.PLAY_BOREDOM_FIELD_1 = "play boredom";  // untranslated
Blockly.Msg.PLAY_BOREDOM_TOOLTIP = "";  // untranslated
Blockly.Msg.PLAY_CHIRP_FIELD_1 = "play chirp";  // untranslated
Blockly.Msg.PLAY_CHIRP_FIELD_2 = "with frequency";  // untranslated
Blockly.Msg.PLAY_CHIRP_FIELD_3 = "with amplitude";  // untranslated
Blockly.Msg.PLAY_CHIRP_TOOLTIP = "";  // untranslated
Blockly.Msg.PLAY_EXCITED_FIELD_1 = "play excited";  // untranslated
Blockly.Msg.PLAY_EXCITED_TOOLTIP = "";  // untranslated
Blockly.Msg.PLAY_NON_ACK_FIELD_1 = "play non-acknowledgment chirp";  // untranslated
Blockly.Msg.PLAY_NON_ACK_TOOLTIP = "";  // untranslated
Blockly.Msg.PLAY_SOUND_FIELD_1 = "play sound";  // untranslated
Blockly.Msg.PLAY_SOUND_FIELD_2 = "at volume";  // untranslated
Blockly.Msg.PLAY_SOUND_FIELD_3 = "looping";  // untranslated
Blockly.Msg.PLAY_SOUND_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.SoundManager.html#play";  // untranslated
Blockly.Msg.PLAY_SOUND_TOOLTIP = "Plays a sound that has been created. The volume goes from 0 to 1.";  // untranslated
Blockly.Msg.PLAY_START_CHIRP_FIELD_1 = "play start chirp";  // untranslated
Blockly.Msg.PLAY_START_CHIRP_TOOLTIP = "";  // untranslated
Blockly.Msg.POINTS_ADD_FIELD_1 = "add points";  // untranslated
Blockly.Msg.POINTS_ADD_FIELD_2 = "and";  // untranslated
Blockly.Msg.POINTS_ADD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Point.html#.add";  // untranslated
Blockly.Msg.POINTS_ADD_TOOLTIP = "Adds the two points and returns the result";  // untranslated
Blockly.Msg.POINTS_ANGLE_BETWEEN_FIELD_1 = "angle between";  // untranslated
Blockly.Msg.POINTS_ANGLE_BETWEEN_FIELD_2 = "and";  // untranslated
Blockly.Msg.POINTS_ANGLE_BETWEEN_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Point.html#.angle";  // untranslated
Blockly.Msg.POINTS_ANGLE_BETWEEN_TOOLTIP = "Returns the angle in radians between the two point objects";  // untranslated
Blockly.Msg.POINTS_DISTANCE_FIELD_1 = "distance between";  // untranslated
Blockly.Msg.POINTS_DISTANCE_FIELD_2 = "and";  // untranslated
Blockly.Msg.POINTS_DISTANCE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Point.html#.distance";  // untranslated
Blockly.Msg.POINTS_DISTANCE_TOOLTIP = "Returns the distance between the two point objects";  // untranslated
Blockly.Msg.POINTS_DIVIDE_FIELD_1 = "divide";  // untranslated
Blockly.Msg.POINTS_DIVIDE_FIELD_2 = "and";  // untranslated
Blockly.Msg.POINTS_DIVIDE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Point.html#.divide";  // untranslated
Blockly.Msg.POINTS_DIVIDE_TOOLTIP = "Returns a new point p = [a.x / b.x, a.y / b.y]";  // untranslated
Blockly.Msg.POINTS_EQUALS_FIELD_1 = "is equal to";  // untranslated
Blockly.Msg.POINTS_EQUALS_FIELD_2 = "?";  // untranslated
Blockly.Msg.POINTS_EQUALS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Point.html#.equals";  // untranslated
Blockly.Msg.POINTS_EQUALS_TOOLTIP = "Determines if two points are equal";  // untranslated
Blockly.Msg.POINTS_INTERPOLATE_FIELD_1 = "interpolate between A";  // untranslated
Blockly.Msg.POINTS_INTERPOLATE_FIELD_2 = "and B";  // untranslated
Blockly.Msg.POINTS_INTERPOLATE_FIELD_3 = "percent to B";  // untranslated
Blockly.Msg.POINTS_INTERPOLATE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Point.html#.interpolate";  // untranslated
Blockly.Msg.POINTS_INTERPOLATE_TOOLTIP = "Interpolate between two points, the percent (0.0 - 1.0) determines how far towards the second point (1 - F) * A + F * B";  // untranslated
Blockly.Msg.POINTS_MULTIPLY_FIELD_1 = "multiply";  // untranslated
Blockly.Msg.POINTS_MULTIPLY_FIELD_2 = "and";  // untranslated
Blockly.Msg.POINTS_MULTIPLY_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Point.html#.multiply";  // untranslated
Blockly.Msg.POINTS_MULTIPLY_TOOLTIP = "Multiply two points";  // untranslated
Blockly.Msg.POINTS_NEGATE_FIELD_1 = "negate";  // untranslated
Blockly.Msg.POINTS_NEGATE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Point.html#.negative";  // untranslated
Blockly.Msg.POINTS_NEGATE_TOOLTIP = "Negate the point";  // untranslated
Blockly.Msg.POINTS_NORMALIZE_FIELD_1 = "normalize";  // untranslated
Blockly.Msg.POINTS_NORMALIZE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Point.html#.normalize";  // untranslated
Blockly.Msg.POINTS_NORMALIZE_TOOLTIP = "Normalize the point (make unit length)";  // untranslated
Blockly.Msg.POINTS_PERPENDICULAR_FIELD_1 = "find pependicular vector to";  // untranslated
Blockly.Msg.POINTS_PERPENDICULAR_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Point.html#.perp";  // untranslated
Blockly.Msg.POINTS_PERPENDICULAR_TOOLTIP = "Find a perpendicular vector to this point";  // untranslated
Blockly.Msg.POINTS_SUBTRACT_FIELD_1 = "subtract points";  // untranslated
Blockly.Msg.POINTS_SUBTRACT_FIELD_2 = "and";  // untranslated
Blockly.Msg.POINTS_SUBTRACT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Point.html#.subtract";  // untranslated
Blockly.Msg.POINTS_SUBTRACT_TOOLTIP = "Adds the two points and returns the result";  // untranslated
Blockly.Msg.POINT_CREATE_FIELD_1 = "make point";  // untranslated
Blockly.Msg.POINT_CREATE_FIELD_2 = "x";  // untranslated
Blockly.Msg.POINT_CREATE_FIELD_3 = "y";  // untranslated
Blockly.Msg.POINT_CREATE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Point.html";  // untranslated
Blockly.Msg.POINT_CREATE_TOOLTIP = "Defines a point which represents a location in 2D";  // untranslated
Blockly.Msg.POINT_GET_ELEMENT_ELEMENT_DROPDOWN_1 = "x";  // untranslated
Blockly.Msg.POINT_GET_ELEMENT_ELEMENT_DROPDOWN_2 = "y";  // untranslated
Blockly.Msg.POINT_GET_ELEMENT_FIELD_1 = "get point.";  // untranslated
Blockly.Msg.POINT_GET_ELEMENT_FIELD_2 = "of";  // untranslated
Blockly.Msg.POINT_GET_ELEMENT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Point.html";  // untranslated
Blockly.Msg.POINT_GET_ELEMENT_TOOLTIP = "Defines a point which represents a location in 2D";  // untranslated
Blockly.Msg.POINT_SET_ELEMENT_ELEMENT_DROPDOWN_1 = "x";  // untranslated
Blockly.Msg.POINT_SET_ELEMENT_ELEMENT_DROPDOWN_2 = "y";  // untranslated
Blockly.Msg.POINT_SET_ELEMENT_FIELD_1 = "set point.";  // untranslated
Blockly.Msg.POINT_SET_ELEMENT_FIELD_2 = "of";  // untranslated
Blockly.Msg.POINT_SET_ELEMENT_FIELD_3 = "to";  // untranslated
Blockly.Msg.POINT_SET_ELEMENT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Point.html";  // untranslated
Blockly.Msg.POINT_SET_ELEMENT_TOOLTIP = "Defines a point which represents a location in 2D";  // untranslated
Blockly.Msg.POINT_SET_MAGNITUDE_FIELD_1 = "set magnitude for";  // untranslated
Blockly.Msg.POINT_SET_MAGNITUDE_FIELD_2 = "to";  // untranslated
Blockly.Msg.POINT_SET_MAGNITUDE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Point.html#setMagnitude";  // untranslated
Blockly.Msg.POINT_SET_MAGNITUDE_TOOLTIP = "Sets the magnitude of the point";  // untranslated
Blockly.Msg.PRESENT_HEADING_FIELD_1 = "get present heading";  // untranslated
Blockly.Msg.PRESENT_HEADING_TOOLTIP = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "cho phép báo cáo";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "với:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Chạy một thủ tục không có giá trị hoàn trả.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Chạy một thủ tục có giá trị hoàn trả.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "với:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Tạo mảnh \"thực hiện %1\"";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function...";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "thủ tục";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Một thủ tục không có giá trị hoàn trả.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "hoàn trả";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Một thủ tục có giá trị hoàn trả.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Chú ý: Thủ tục này có lặp lại tên các tham số.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Làm nổi bật thủ tục";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Khi điều kiện đúng thì hoàn trả một giá trị.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Chú ý: Mảnh này chỉ có thể dùng trong một thủ tục.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "biến:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Thêm một đầu vào cho hàm.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "các tham số";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Thêm, xóa hoặc sắp xếp lại các đầu vào cho hàm này.";
Blockly.Msg.QUARTER = "quarter of a second";  // untranslated
Blockly.Msg.RANDOM_ANGLE_FIELD_1 = "get random angle";  // untranslated
Blockly.Msg.RANDOM_ANGLE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.RandomDataGenerator.html#angle";  // untranslated
Blockly.Msg.RANDOM_ANGLE_TOOLTIP = "Returns a random angle between -180 and 180.";  // untranslated
Blockly.Msg.RANDOM_BOOLEAN = "random boolean";  // untranslated
Blockly.Msg.RANDOM_BOOLEAN_TOOLTIP = "generates either true or false";  // untranslated
Blockly.Msg.RANDOM_EYES_FIELD_1 = "set eyes to a random colour";  // untranslated
Blockly.Msg.RANDOM_EYES_TOOLTIP = "";  // untranslated
Blockly.Msg.RANDOM_FIELD_1 = "Random value between";  // untranslated
Blockly.Msg.RANDOM_FIELD_2 = "and";  // untranslated
Blockly.Msg.RANDOM_HELP_URL = "https://www.arduino.cc/en/Reference/Random";  // untranslated
Blockly.Msg.RANDOM_PICK_FIELD_1 = "get random item from list";  // untranslated
Blockly.Msg.RANDOM_PICK_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.RandomDataGenerator.html#pick";  // untranslated
Blockly.Msg.RANDOM_PICK_TOOLTIP = "Returns a random member in a given list.";  // untranslated
Blockly.Msg.RANDOM_PICK_WEIGHTED_FIELD_1 = "get random item from list (weighted)";  // untranslated
Blockly.Msg.RANDOM_PICK_WEIGHTED_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.RandomDataGenerator.html#weightedPick";  // untranslated
Blockly.Msg.RANDOM_PICK_WEIGHTED_TOOLTIP = "Returns a random member in a given list. This version chooses items close to the start of the list more frequently.";  // untranslated
Blockly.Msg.RANDOM_REAL_FIELD_1 = "get random number";  // untranslated
Blockly.Msg.RANDOM_REAL_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.RandomDataGenerator.html#real";  // untranslated
Blockly.Msg.RANDOM_REAL_IN_RANGE_FIELD_1 = "get random number between";  // untranslated
Blockly.Msg.RANDOM_REAL_IN_RANGE_FIELD_2 = "and";  // untranslated
Blockly.Msg.RANDOM_REAL_IN_RANGE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.RandomDataGenerator.html#realInRange";  // untranslated
Blockly.Msg.RANDOM_REAL_IN_RANGE_TOOLTIP = "Returns a random real number in the specified range.";  // untranslated
Blockly.Msg.RANDOM_REAL_TOOLTIP = "Returns a random real number. This can be anywhere between 0 and 2^32 (about 4 billion).";  // untranslated
Blockly.Msg.RANDOM_SEED_FIELD_1 = "Randomize seed with value";  // untranslated
Blockly.Msg.RANDOM_SEED_HELP_URL = "https://www.arduino.cc/en/Reference/RandomSeed";  // untranslated
Blockly.Msg.RANDOM_SEED_TOOLTIP = "";  // untranslated
Blockly.Msg.RANDOM_SIGN_FIELD_1 = "get random sign";  // untranslated
Blockly.Msg.RANDOM_SIGN_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.RandomDataGenerator.html#sign";  // untranslated
Blockly.Msg.RANDOM_SIGN_TOOLTIP = "Returns either +1 or -1. For deciding if something needs to be positive or negative.";  // untranslated
Blockly.Msg.RANDOM_TOOLTIP = "";  // untranslated
Blockly.Msg.READSENSOR_FIELD_1 = "read";  // untranslated
Blockly.Msg.READSENSOR_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.READSENSOR_LIGHT_DROPDOWN_1 = "line sensor left";  // untranslated
Blockly.Msg.READSENSOR_LIGHT_DROPDOWN_2 = "line sensor right";  // untranslated
Blockly.Msg.READSENSOR_LIGHT_DROPDOWN_3 = "ambient sensor left";  // untranslated
Blockly.Msg.READSENSOR_LIGHT_DROPDOWN_4 = "ambient sensor center";  // untranslated
Blockly.Msg.READSENSOR_LIGHT_DROPDOWN_5 = "ambient sensor right";  // untranslated
Blockly.Msg.READSENSOR_TOOLTIP = "";  // untranslated
Blockly.Msg.READ_EDGE_LIGHT_SENSORS = "read edge light sensors using";  // untranslated
Blockly.Msg.READ_EDGE_LIGHT_SENSORS_AVERAGE = "average values";  // untranslated
Blockly.Msg.READ_EDGE_LIGHT_SENSORS_TOOLTIP = "Averages several reads and outputs to LeftEdgeSensorValue, etc.";  // untranslated
Blockly.Msg.READ_LEFT_LIGHT_SENSOR = "read left light sensor";  // untranslated
Blockly.Msg.READ_LEFT_LIGHT_SENSOR_TOOLTIP = "Return the reading of the left light sensor";  // untranslated
Blockly.Msg.READ_RIGHT_LIGHT_SENSOR = "read right light sensor";  // untranslated
Blockly.Msg.READ_RIGHT_LIGHT_SENSOR_TOOLTIP = "Return the reading of the right light sensor";  // untranslated
Blockly.Msg.READ_SIDE_SENSORS = "read side sensors";  // untranslated
Blockly.Msg.READ_SIDE_SENSORS_TOOLTIP = "Single relative & ambient reading from each of the 3 side sensors (pauses and/or repeats if IRReceiving).";  // untranslated
Blockly.Msg.RECTANGLE_CREATE_FIELD_1 = "make rectangle";  // untranslated
Blockly.Msg.RECTANGLE_CREATE_FIELD_2 = "x";  // untranslated
Blockly.Msg.RECTANGLE_CREATE_FIELD_3 = "y";  // untranslated
Blockly.Msg.RECTANGLE_CREATE_FIELD_4 = "width";  // untranslated
Blockly.Msg.RECTANGLE_CREATE_FIELD_5 = "height";  // untranslated
Blockly.Msg.RECTANGLE_CREATE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Rectangle.html";  // untranslated
Blockly.Msg.RECTANGLE_CREATE_TOOLTIP = "Defines a rectangle, can be used for cropping, alignment and other tasks";  // untranslated
Blockly.Msg.REDO = "Redo";  // untranslated
Blockly.Msg.REFRESH_FRAME_FIELD_1 = "refresh frame of ";  // untranslated
Blockly.Msg.REFRESH_FRAME_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#refreshFrame";  // untranslated
Blockly.Msg.REFRESH_FRAME_TOOLTIP = "Refreshes the current frame data back to the parent Sprite and also resets the texture data.";  // untranslated
Blockly.Msg.REFRESH_PIXELS_FIELD_1 = "refresh pixels";  // untranslated
Blockly.Msg.REFRESH_PIXELS_TOOLTIP = "";  // untranslated
Blockly.Msg.REMOVE_CHILDREN_FIELD_1 = "remove all children from";  // untranslated
Blockly.Msg.REMOVE_CHILDREN_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#removeChildren";  // untranslated
Blockly.Msg.REMOVE_CHILDREN_TOOLTIP = "Removes all children from the parent. They will all stop moving together.";  // untranslated
Blockly.Msg.REMOVE_CHILDREN_VI_FIELD_1 = "remove all children from";  // untranslated
Blockly.Msg.REMOVE_CHILDREN_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#removeChildren";  // untranslated
Blockly.Msg.REMOVE_CHILDREN_VI_TOOLTIP = "Removes all children from the parent. They will all stop moving together.";  // untranslated
Blockly.Msg.REMOVE_CHILD_AT_FIELD_1 = "remove the child at index";  // untranslated
Blockly.Msg.REMOVE_CHILD_AT_FIELD_2 = "from";  // untranslated
Blockly.Msg.REMOVE_CHILD_AT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#removeChildAt";  // untranslated
Blockly.Msg.REMOVE_CHILD_AT_TOOLTIP = "Finds the child at the given index and removes it from its parent. It will no longer move with the parent.";  // untranslated
Blockly.Msg.REMOVE_CHILD_AT_VI_FIELD_1 = "remove the child at index";  // untranslated
Blockly.Msg.REMOVE_CHILD_AT_VI_FIELD_2 = "from";  // untranslated
Blockly.Msg.REMOVE_CHILD_AT_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#removeChildAt";  // untranslated
Blockly.Msg.REMOVE_CHILD_AT_VI_TOOLTIP = "Finds the child at the given index and removes it from its parent. It will no longer move with the parent.";  // untranslated
Blockly.Msg.REMOVE_CHILD_FIELD_1 = "remove child";  // untranslated
Blockly.Msg.REMOVE_CHILD_FIELD_2 = "from";  // untranslated
Blockly.Msg.REMOVE_CHILD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#removeChild";  // untranslated
Blockly.Msg.REMOVE_CHILD_TOOLTIP = "Makes this sprite/image stop being a child and moving with its parent.";  // untranslated
Blockly.Msg.REMOVE_CHILD_VI_FIELD_1 = "remove child";  // untranslated
Blockly.Msg.REMOVE_CHILD_VI_FIELD_2 = "from";  // untranslated
Blockly.Msg.REMOVE_CHILD_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#removeChild";  // untranslated
Blockly.Msg.REMOVE_CHILD_VI_TOOLTIP = "Makes this sprite/image stop being a child and moving with its parent.";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Xóa Chú Giải";
Blockly.Msg.REMOVE_FROM_GROUP_FIELD_1 = "remove";  // untranslated
Blockly.Msg.REMOVE_FROM_GROUP_FIELD_2 = "from group";  // untranslated
Blockly.Msg.REMOVE_FROM_GROUP_FIELD_3 = "destroy it too";  // untranslated
Blockly.Msg.REMOVE_FROM_GROUP_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Group.html#remove";  // untranslated
Blockly.Msg.REMOVE_FROM_GROUP_TOOLTIP = "Removes an object from a group. Optionally, destroy it as well.";  // untranslated
Blockly.Msg.REMOVE_SOUND_FIELD_1 = "stop all sounds tagged";  // untranslated
Blockly.Msg.REMOVE_SOUND_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.SoundManager.html#removeByKey";  // untranslated
Blockly.Msg.REMOVE_SOUND_TOOLTIP = "Stops all sounds with the given tag.";  // untranslated
Blockly.Msg.RENAME_VARIABLE = "Thay tên biến...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Thay tên tất cả \"%1\" biến này thành:";
Blockly.Msg.RESET_FIELD_1 = "reset object";  // untranslated
Blockly.Msg.RESET_FIELD_2 = "x";  // untranslated
Blockly.Msg.RESET_FIELD_3 = "y";  // untranslated
Blockly.Msg.RESET_FRAME_FIELD_1 = "reset the frame dimensions of";  // untranslated
Blockly.Msg.RESET_FRAME_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#resetFrame";  // untranslated
Blockly.Msg.RESET_FRAME_TOOLTIP = "Resets the texture frame dimensions that the sprite uses for rendering.";  // untranslated
Blockly.Msg.RESET_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#reset";  // untranslated
Blockly.Msg.RESET_LOOK_AT_EDGE = "reset look at edge";  // untranslated
Blockly.Msg.RESET_LOOK_AT_EDGE_TOOLTIP = "Zeros the LookAtEdge() running average";  // untranslated
Blockly.Msg.RESET_TOOLTIP = "Gets most objects ready to play again in various ways and treats it like new. Specifically, moves it to a new position then makes sure it is visible, rendering, alive, and actually exists in the game world.";  // untranslated
Blockly.Msg.RESIZE_FRAME_FIELD_1 = "resize the frame of";  // untranslated
Blockly.Msg.RESIZE_FRAME_FIELD_2 = "to accomodate";  // untranslated
Blockly.Msg.RESIZE_FRAME_FIELD_3 = "Width";  // untranslated
Blockly.Msg.RESIZE_FRAME_FIELD_4 = "Height";  // untranslated
Blockly.Msg.RESIZE_FRAME_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#resizeFrame";  // untranslated
Blockly.Msg.RESIZE_FRAME_TOOLTIP = "Resizes the Frame dimensions that the Game Object uses for rendering. You shouldn't normally need to ever call this, but in the case of special texture types such as Video or BitmapData it can be useful to adjust the dimensions directly in this way.";  // untranslated
Blockly.Msg.RESTART_IR_FIELD_1 = "restart IR";  // untranslated
Blockly.Msg.RESTART_IR_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.RESTART_IR_TOOLTIP = "Start listening for IR should be setup and in loop after processing an input";  // untranslated
Blockly.Msg.RESUME_NAVIGATION_FIELD_1 = "resume navigation";  // untranslated
Blockly.Msg.RESUME_NAVIGATION_TOOLTIP = "";  // untranslated
Blockly.Msg.RESUME_TIMER = "resume timer";  // untranslated
Blockly.Msg.RESUME_TIMER_TOOLTIP = "Resumes the timer and all events in the queue";  // untranslated
Blockly.Msg.RESUME_TIMER_URL = "http://dragondrop.digipen.edu/docs/Phaser.Timer.html#resume";  // untranslated
Blockly.Msg.REVIVE_FIELD_1 = "revive";  // untranslated
Blockly.Msg.REVIVE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#revive";  // untranslated
Blockly.Msg.REVIVE_TOOLTIP = "Brings a 'dead' Game Object back to life. Makes sure it counts as alive, existing, and visible. Will send an event named onRevived.";  // untranslated
Blockly.Msg.RIGHTPREVCOLOUR_FIELD_1 = "right previous color";  // untranslated
Blockly.Msg.RIGHTPREVCOLOUR_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.RIGHTPREVCOLOUR_TOOLTIP = "";  // untranslated
Blockly.Msg.ROTATE = "rotate";  // untranslated
Blockly.Msg.ROTATE_ACCURATE_TOOLTIP = "Rotate ringo the given degrees within the maximum time.";  // untranslated
Blockly.Msg.ROTATE_FIELD_1 = "rotate";  // untranslated
Blockly.Msg.ROTATE_FIELD_2 = "by";  // untranslated
Blockly.Msg.ROTATE_FIELD_3 = "degrees";  // untranslated
Blockly.Msg.ROTATE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#angle";  // untranslated
Blockly.Msg.ROTATE_TOOLTIP = "Rotates a game object by the given angle in degrees. Negative numbers will rotate it the opposite direction.";  // untranslated
Blockly.Msg.SECOND = "one second";  // untranslated
Blockly.Msg.SECONDS = "seconds";  // untranslated
Blockly.Msg.SECONDS_SINCE_START_TOOLTIP = "Gets the number of seconds since start of the program.";  // untranslated
Blockly.Msg.SEND_TO_BACK_FIELD_1 = "send";  // untranslated
Blockly.Msg.SEND_TO_BACK_FIELD_2 = "to the back";  // untranslated
Blockly.Msg.SEND_TO_BACK_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#sendToBack";  // untranslated
Blockly.Msg.SEND_TO_BACK_TOOLTIP = "Sends this sprite/image to the back of the display order. In case of overlapping sprites, it will draw behind everything else.";  // untranslated
Blockly.Msg.SENSOR_LINE_AVOID_TOOLTIP = "Wink robot will avoid black lines. For best results, use solid lines at least 1/2cm thick or more on white paper.";  // untranslated
Blockly.Msg.SENSOR_LINE_FOLLOW_TOOLTIP = "Wink robot will follow a black line. For best results, use a solid dark line 3/4cm - 1cm thick on white paper.";  // untranslated
Blockly.Msg.SENSOR_OBSTACLE_APPROACH_TOOLTIP = "Wink robot approaches an obstacle placed in front of it then moved.";  // untranslated
Blockly.Msg.SENSOR_OBSTACLE_AVOID_TOOLTIP = "Wink robot travels around and attempts to avoid obstacles in front of it.";  // untranslated
Blockly.Msg.SERIAL_BEGIN_FIELD_1 = "serial begin at ";  // untranslated
Blockly.Msg.SERIAL_BEGIN_FIELD_2 = "bits per second (baud)";  // untranslated
Blockly.Msg.SERIAL_BEGIN_HELP_URL = "";  // untranslated
Blockly.Msg.SERIAL_BEGIN_TOOLTIP = "";  // untranslated
Blockly.Msg.SERIAL_END_FIELD_1 = "serial end";  // untranslated
Blockly.Msg.SERIAL_END_HELP_URL = "";  // untranslated
Blockly.Msg.SERIAL_END_TOOLTIP = "";  // untranslated
Blockly.Msg.SERIAL_PRINT_FIELD_1 = "serial print";  // untranslated
Blockly.Msg.SERIAL_PRINT_HELP_URL = "";  // untranslated
Blockly.Msg.SERIAL_PRINT_LINE_FIELD_1 = "serial print line";  // untranslated
Blockly.Msg.SERIAL_PRINT_LINE_HELP_URL = "";  // untranslated
Blockly.Msg.SERIAL_PRINT_LINE_TOOLTIP = "";  // untranslated
Blockly.Msg.SERIAL_PRINT_TOOLTIP = "";  // untranslated
Blockly.Msg.SERIAL_READ_FIELD_1 = "serial read first byte";  // untranslated
Blockly.Msg.SERIAL_READ_HELP_URL = "";  // untranslated
Blockly.Msg.SERIAL_READ_TOOLTIP = "";  // untranslated
Blockly.Msg.SERVO_ATTACHED_FIELD_1 = "servo attached?";  // untranslated
Blockly.Msg.SERVO_ATTACHED_HELP_URL = "https://www.arduino.cc/en/Reference/ServoAttached";  // untranslated
Blockly.Msg.SERVO_ATTACHED_TOOLTIP = "";  // untranslated
Blockly.Msg.SERVO_ATTACH_FIELD_1 = "attach pin";  // untranslated
Blockly.Msg.SERVO_ATTACH_FIELD_2 = "to servo";  // untranslated
Blockly.Msg.SERVO_ATTACH_HELP_URL = "https://www.arduino.cc/en/Reference/ServoAttach";  // untranslated
Blockly.Msg.SERVO_ATTACH_TOOLTIP = "";  // untranslated
Blockly.Msg.SERVO_CANNOT_BE_NULL = "servo field cannot be left empty";  // untranslated
Blockly.Msg.SERVO_DETACH_FIELD_1 = "detach servo";  // untranslated
Blockly.Msg.SERVO_DETACH_HELP_URL = "https://www.arduino.cc/en/Reference/ServoDetach";  // untranslated
Blockly.Msg.SERVO_DETACH_TOOLTIP = "";  // untranslated
Blockly.Msg.SERVO_READ_FIELD_1 = "read from servo";  // untranslated
Blockly.Msg.SERVO_READ_HELP_URL = "https://www.arduino.cc/en/Reference/ServoRead";  // untranslated
Blockly.Msg.SERVO_READ_TOOLTIP = "";  // untranslated
Blockly.Msg.SERVO_WRITE_FIELD_1 = "set angle to";  // untranslated
Blockly.Msg.SERVO_WRITE_FIELD_2 = "on servo";  // untranslated
Blockly.Msg.SERVO_WRITE_HELP_URL = "https://www.arduino.cc/en/Reference/ServoWrite";  // untranslated
Blockly.Msg.SERVO_WRITE_MICROSECONDS_FIELD_1 = "set microseconds to";  // untranslated
Blockly.Msg.SERVO_WRITE_MICROSECONDS_FIELD_2 = "on servo";  // untranslated
Blockly.Msg.SERVO_WRITE_MICROSECONDS_HELP_URL = "https://www.arduino.cc/en/Reference/ServoWriteMicroseconds";  // untranslated
Blockly.Msg.SERVO_WRITE_MICROSECONDS_TOOLTIP = "";  // untranslated
Blockly.Msg.SERVO_WRITE_TOOLTIP = "";  // untranslated
Blockly.Msg.SETEYESBLUE_FIELD_1 = "set eyes blue";  // untranslated
Blockly.Msg.SETEYESBLUE_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETEYESBLUE_TOOLTIP = "";  // untranslated
Blockly.Msg.SETEYESCYAN_FIELD_1 = "set eyes cyan";  // untranslated
Blockly.Msg.SETEYESCYAN_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETEYESCYAN_TOOLTIP = "";  // untranslated
Blockly.Msg.SETEYESGREEN_FIELD_1 = "set eyes green";  // untranslated
Blockly.Msg.SETEYESGREEN_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETEYESGREEN_TOOLTIP = "";  // untranslated
Blockly.Msg.SETEYESORANGE_FIELD_1 = "set eyes orange";  // untranslated
Blockly.Msg.SETEYESORANGE_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETEYESORANGE_TOOLTIP = "";  // untranslated
Blockly.Msg.SETEYESPINK_FIELD_1 = "set eyes pink";  // untranslated
Blockly.Msg.SETEYESPINK_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETEYESPINK_TOOLTIP = "";  // untranslated
Blockly.Msg.SETEYESPURPLE_FIELD_1 = "set eyes purple";  // untranslated
Blockly.Msg.SETEYESPURPLE_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETEYESPURPLE_TOOLTIP = "";  // untranslated
Blockly.Msg.SETEYESRED_FIELD_1 = "set eyes red";  // untranslated
Blockly.Msg.SETEYESRED_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETEYESRED_TOOLTIP = "";  // untranslated
Blockly.Msg.SETEYESRGB_FIELD_1 = "set eyes color";  // untranslated
Blockly.Msg.SETEYESRGB_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETEYESRGB_TOOLTIP = "";  // untranslated
Blockly.Msg.SETEYESWHITE_FIELD_1 = "set eyes white";  // untranslated
Blockly.Msg.SETEYESWHITE_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETEYESWHITE_TOOLTIP = "";  // untranslated
Blockly.Msg.SETEYESYELLOW_FIELD_1 = "set eyes yellow";  // untranslated
Blockly.Msg.SETEYESYELLOW_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETEYESYELLOW_TOOLTIP = "";  // untranslated
Blockly.Msg.SETIRLIGHT_FIELD_1 = "turn";  // untranslated
Blockly.Msg.SETIRLIGHT_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETIRLIGHT_LIGHT_DROPDOWN_1 = "head light";  // untranslated
Blockly.Msg.SETIRLIGHT_LIGHT_DROPDOWN_2 = "line left outer";  // untranslated
Blockly.Msg.SETIRLIGHT_LIGHT_DROPDOWN_3 = "line left inner";  // untranslated
Blockly.Msg.SETIRLIGHT_LIGHT_DROPDOWN_4 = "line right outer";  // untranslated
Blockly.Msg.SETIRLIGHT_LIGHT_DROPDOWN_5 = "line right inner";  // untranslated
Blockly.Msg.SETIRLIGHT_STATE_DROPDOWN_1 = "on";  // untranslated
Blockly.Msg.SETIRLIGHT_STATE_DROPDOWN_2 = "off";  // untranslated
Blockly.Msg.SETIRLIGHT_TOOLTIP = "";  // untranslated
Blockly.Msg.SETLEFTBLUE_FIELD_1 = "set left blue";  // untranslated
Blockly.Msg.SETLEFTBLUE_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETLEFTBLUE_TOOLTIP = "";  // untranslated
Blockly.Msg.SETLEFTCYAN_FIELD_1 = "set left cyan";  // untranslated
Blockly.Msg.SETLEFTCYAN_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETLEFTCYAN_TOOLTIP = "";  // untranslated
Blockly.Msg.SETLEFTGREEN_FIELD_1 = "set left green";  // untranslated
Blockly.Msg.SETLEFTGREEN_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETLEFTGREEN_TOOLTIP = "";  // untranslated
Blockly.Msg.SETLEFTORANGE_FIELD_1 = "set left orange";  // untranslated
Blockly.Msg.SETLEFTORANGE_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETLEFTORANGE_TOOLTIP = "";  // untranslated
Blockly.Msg.SETLEFTPINK_FIELD_1 = "set left pink";  // untranslated
Blockly.Msg.SETLEFTPINK_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETLEFTPINK_TOOLTIP = "";  // untranslated
Blockly.Msg.SETLEFTPURPLE_FIELD_1 = "set left purple";  // untranslated
Blockly.Msg.SETLEFTPURPLE_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETLEFTPURPLE_TOOLTIP = "";  // untranslated
Blockly.Msg.SETLEFTRED_FIELD_1 = "set left red";  // untranslated
Blockly.Msg.SETLEFTRED_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETLEFTRED_TOOLTIP = "";  // untranslated
Blockly.Msg.SETLEFTRGB_FIELD_1 = "set left color";  // untranslated
Blockly.Msg.SETLEFTRGB_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETLEFTRGB_TOOLTIP = "";  // untranslated
Blockly.Msg.SETLEFTWHITE_FIELD_1 = "set left white";  // untranslated
Blockly.Msg.SETLEFTWHITE_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETLEFTWHITE_TOOLTIP = "";  // untranslated
Blockly.Msg.SETLEFTYELLOW_FIELD_1 = "set left yellow";  // untranslated
Blockly.Msg.SETLEFTYELLOW_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETLEFTYELLOW_TOOLTIP = "";  // untranslated
Blockly.Msg.SETRIGHTBLUE_FIELD_1 = "set right blue";  // untranslated
Blockly.Msg.SETRIGHTBLUE_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETRIGHTBLUE_TOOLTIP = "";  // untranslated
Blockly.Msg.SETRIGHTCYAN_FIELD_1 = "set right cyan";  // untranslated
Blockly.Msg.SETRIGHTCYAN_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETRIGHTCYAN_TOOLTIP = "";  // untranslated
Blockly.Msg.SETRIGHTGREEN_FIELD_1 = "set right green";  // untranslated
Blockly.Msg.SETRIGHTGREEN_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETRIGHTGREEN_TOOLTIP = "";  // untranslated
Blockly.Msg.SETRIGHTORANGE_FIELD_1 = "set right orange";  // untranslated
Blockly.Msg.SETRIGHTORANGE_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETRIGHTORANGE_TOOLTIP = "";  // untranslated
Blockly.Msg.SETRIGHTPINK_FIELD_1 = "set right pink";  // untranslated
Blockly.Msg.SETRIGHTPINK_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETRIGHTPINK_TOOLTIP = "";  // untranslated
Blockly.Msg.SETRIGHTPURPLE_FIELD_1 = "set right purple";  // untranslated
Blockly.Msg.SETRIGHTPURPLE_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETRIGHTPURPLE_TOOLTIP = "";  // untranslated
Blockly.Msg.SETRIGHTRED_FIELD_1 = "set right red";  // untranslated
Blockly.Msg.SETRIGHTRED_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETRIGHTRED_TOOLTIP = "";  // untranslated
Blockly.Msg.SETRIGHTRGB_FIELD_1 = "set right color";  // untranslated
Blockly.Msg.SETRIGHTRGB_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETRIGHTRGB_TOOLTIP = "";  // untranslated
Blockly.Msg.SETRIGHTWHITE_FIELD_1 = "set right white";  // untranslated
Blockly.Msg.SETRIGHTWHITE_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETRIGHTWHITE_TOOLTIP = "";  // untranslated
Blockly.Msg.SETRIGHTYELLOW_FIELD_1 = "set right yellow";  // untranslated
Blockly.Msg.SETRIGHTYELLOW_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SETRIGHTYELLOW_TOOLTIP = "";  // untranslated
Blockly.Msg.SET_ALL_PIXEL_RGB_COLOUR_FIELD_1 = "set all pixels to";  // untranslated
Blockly.Msg.SET_ALL_PIXEL_RGB_COLOUR_TOOLTIP = "";  // untranslated
Blockly.Msg.SET_ALL_PIXEL_RGB_FIELD_1 = "set all pixels to";  // untranslated
Blockly.Msg.SET_ALL_PIXEL_RGB_FIELD_2 = "red";  // untranslated
Blockly.Msg.SET_ALL_PIXEL_RGB_FIELD_3 = "green";  // untranslated
Blockly.Msg.SET_ALL_PIXEL_RGB_FIELD_4 = "blue";  // untranslated
Blockly.Msg.SET_ALL_PIXEL_RGB_TOOLTIP = "";  // untranslated
Blockly.Msg.SET_ANIMATION_BOOLEAN_FIELD_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Animation.html";  // untranslated
Blockly.Msg.SET_ANIMATION_BOOLEAN_FIELD_VI_TOOLTIP = "Sets the boolean value for the selected animation property";  // untranslated
Blockly.Msg.SET_ANIMATION_NUMERIC_FIELD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Animation.html";  // untranslated
Blockly.Msg.SET_ANIMATION_NUMERIC_FIELD_TOOLTIP = "Sets the numeric value for the selected animation property";  // untranslated
Blockly.Msg.SET_ANIMATION_PROPERTY_FIELD_1 = "set animation.";  // untranslated
Blockly.Msg.SET_ANIMATION_PROPERTY_FIELD_2 = "on ";  // untranslated
Blockly.Msg.SET_ANIMATION_PROPERTY_FIELD_3 = "to";  // untranslated
Blockly.Msg.SET_ANIMATION_PROPERTY_FIELD_DROPDOWN_1 = "frame";  // untranslated
Blockly.Msg.SET_ANIMATION_PROPERTY_FIELD_DROPDOWN_2 = "frameName";  // untranslated
Blockly.Msg.SET_ANIMATION_PROPERTY_FIELD_DROPDOWN_3 = "paused";  // untranslated
Blockly.Msg.SET_ANIMATION_PROPERTY_FIELD_DROPDOWN_4 = "updateIfVisible";  // untranslated
Blockly.Msg.SET_ANIMATION_PROPERTY_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#destroy";  // untranslated
Blockly.Msg.SET_ANIMATION_PROPERTY_TOOLTIP = "Set a property from the animation manager on the object";  // untranslated
Blockly.Msg.SET_ANIMATION_PROPERTY_VI_FIELD_1 = "set animation.";  // untranslated
Blockly.Msg.SET_ANIMATION_PROPERTY_VI_FIELD_2 = "on ";  // untranslated
Blockly.Msg.SET_ANIMATION_PROPERTY_VI_FIELD_3 = "to";  // untranslated
Blockly.Msg.SET_ANIMATION_PROPERTY_VI_FIELD_DROPDOWN_1 = "paused";  // untranslated
Blockly.Msg.SET_ANIMATION_PROPERTY_VI_FIELD_DROPDOWN_2 = "updateIfVisible";  // untranslated
Blockly.Msg.SET_ANIMATION_PROPERTY_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#destroy";  // untranslated
Blockly.Msg.SET_ANIMATION_PROPERTY_VI_TOOLTIP = "Set a property from the animation manager on the object";  // untranslated
Blockly.Msg.SET_ANIMATION_STRING_FIELD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Animation.html";  // untranslated
Blockly.Msg.SET_ANIMATION_STRING_FIELD_TOOLTIP = "Sets the string value for the selected animation property";  // untranslated
Blockly.Msg.SET_ATTRIBUTE_DOM = "for dom element";  // untranslated
Blockly.Msg.SET_ATTRIBUTE_TITLE = "set Attribute";  // untranslated
Blockly.Msg.SET_BODY_BOOLEAN_FIELD_ELEMENT_DROPDOWN_1 = "allowRotation";  // untranslated
Blockly.Msg.SET_BODY_BOOLEAN_FIELD_ELEMENT_DROPDOWN_2 = "allowGravity";  // untranslated
Blockly.Msg.SET_BODY_BOOLEAN_FIELD_ELEMENT_DROPDOWN_3 = "immovable";  // untranslated
Blockly.Msg.SET_BODY_BOOLEAN_FIELD_FIELD_1 = "set boolean field";  // untranslated
Blockly.Msg.SET_BODY_BOOLEAN_FIELD_FIELD_2 = "for";  // untranslated
Blockly.Msg.SET_BODY_BOOLEAN_FIELD_FIELD_3 = "to";  // untranslated
Blockly.Msg.SET_BODY_BOOLEAN_FIELD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.Body.html";  // untranslated
Blockly.Msg.SET_BODY_BOOLEAN_FIELD_TOOLTIP = "Set the value of the specified boolean field";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_FIELD_1 = "set point field";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_FIELD_2 = "for";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_FIELD_3 = "to";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.Body.html";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_TOOLTIP = "Set the value of the body point field";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_ELEMENT_DROPDOWN_1 = "x";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_ELEMENT_DROPDOWN_2 = "y";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_1 = "Set";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_2 = "for";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_3 = "to";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_DROPDOWN_1 = "bounce";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_DROPDOWN_2 = "gravity";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_DROPDOWN_3 = "velocity";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_DROPDOWN_4 = "acceleration";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_DROPDOWN_5 = "drag";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_DROPDOWN_6 = "friction";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_DROPDOWN_7 = "maxVelocity";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_DROPDOWN_8 = "worldBounce";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.Body.html";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_TOOLTIP = "Set the x or y value of the specified field";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_ELEMENT_DROPDOWN_1 = "x";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_ELEMENT_DROPDOWN_2 = "y";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_1 = "set point field";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_1_5 = "in the";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_2 = "direction for";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_3 = "to";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_1 = "bounce";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_10 = "offset";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_11 = "tilePadding";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_2 = "gravity";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_3 = "velocity";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_4 = "acceleration";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_5 = "drag";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_6 = "friction";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_7 = "maxVelocity";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_8 = "worldBounce";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_9 = "deltaMax";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.Body.html";  // untranslated
Blockly.Msg.SET_BODY_FIELD_POINT_VI_TOOLTIP = "Set the x or y value of the specified field";  // untranslated
Blockly.Msg.SET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_1 = "mass";  // untranslated
Blockly.Msg.SET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_2 = "rotation (degrees)";  // untranslated
Blockly.Msg.SET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_3 = "angularAcceleration";  // untranslated
Blockly.Msg.SET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_4 = "angularVelocity";  // untranslated
Blockly.Msg.SET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_5 = "maxAngularVelocity";  // untranslated
Blockly.Msg.SET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_6 = "angularDrag";  // untranslated
Blockly.Msg.SET_BODY_NUMERIC_FIELD_FIELD_1 = "set numeric field";  // untranslated
Blockly.Msg.SET_BODY_NUMERIC_FIELD_FIELD_2 = "for";  // untranslated
Blockly.Msg.SET_BODY_NUMERIC_FIELD_FIELD_3 = "to";  // untranslated
Blockly.Msg.SET_BODY_NUMERIC_FIELD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.Body.html";  // untranslated
Blockly.Msg.SET_BODY_NUMERIC_FIELD_TOOLTIP = "Set the value of the specified numeric field";  // untranslated
Blockly.Msg.SET_BOOLEAN_FIELD = "set boolean field";  // untranslated
Blockly.Msg.SET_CHILD_INDEX_FIELD_1 = "move the child";  // untranslated
Blockly.Msg.SET_CHILD_INDEX_FIELD_2 = "of";  // untranslated
Blockly.Msg.SET_CHILD_INDEX_FIELD_3 = "to index";  // untranslated
Blockly.Msg.SET_CHILD_INDEX_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#setChildIndex";  // untranslated
Blockly.Msg.SET_CHILD_INDEX_TOOLTIP = "Moves the child to a specific index on its parent. This will affect how you find it in the future.";  // untranslated
Blockly.Msg.SET_CHILD_INDEX_VI_FIELD_1 = "move the child";  // untranslated
Blockly.Msg.SET_CHILD_INDEX_VI_FIELD_2 = "of";  // untranslated
Blockly.Msg.SET_CHILD_INDEX_VI_FIELD_3 = "to index";  // untranslated
Blockly.Msg.SET_CHILD_INDEX_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#setChildIndex";  // untranslated
Blockly.Msg.SET_CHILD_INDEX_VI_TOOLTIP = "Moves the child to a specific index on its parent. This will affect how you find it in the future.";  // untranslated
Blockly.Msg.SET_EMIT_FROM_CORD_DROPDOWN_1 = "X";  // untranslated
Blockly.Msg.SET_EMIT_FROM_CORD_DROPDOWN_2 = "Y";  // untranslated
Blockly.Msg.SET_EMIT_FROM_FIELD_1 = "on";  // untranslated
Blockly.Msg.SET_EMIT_FROM_FIELD_2 = "set emit from";  // untranslated
Blockly.Msg.SET_EMIT_FROM_FIELD_3 = "to";  // untranslated
Blockly.Msg.SET_EMIT_FROM_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Particles.Arcade.Emitter.html#emitX";  // untranslated
Blockly.Msg.SET_EMIT_FROM_TOOLTIP = "Set where the particles emit from, by individual coordinate.";  // untranslated
Blockly.Msg.SET_EYES_FIELD_1 = "set eyes";  // untranslated
Blockly.Msg.SET_EYES_FIELD_2 = "red";  // untranslated
Blockly.Msg.SET_EYES_FIELD_3 = "green";  // untranslated
Blockly.Msg.SET_EYES_FIELD_4 = "blue";  // untranslated
Blockly.Msg.SET_EYES_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SET_EYES_TOOLTIP = "Sets the color of both eyes.";  // untranslated
Blockly.Msg.SET_FRAME_FIELD_1 = "Set Current Frame # For";  // untranslated
Blockly.Msg.SET_FRAME_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#frame";  // untranslated
Blockly.Msg.SET_FRAME_TOOLTIP = "Jumps to a given animation frame.";  // untranslated
Blockly.Msg.SET_FRAME_VI_FIELD_1 = "set current frame # to";  // untranslated
Blockly.Msg.SET_FRAME_VI_FIELD_2 = "for";  // untranslated
Blockly.Msg.SET_FRAME_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Animation.html#frame";  // untranslated
Blockly.Msg.SET_FRAME_VI_TOOLTIP = "Sets the current frame number on the specified object";  // untranslated
Blockly.Msg.SET_GAME_OBJECT_BOOLEAN_FIELD_FIELD_1 = "set boolean field";  // untranslated
Blockly.Msg.SET_GAME_OBJECT_BOOLEAN_FIELD_FIELD_2 = "of";  // untranslated
Blockly.Msg.SET_GAME_OBJECT_BOOLEAN_FIELD_FIELD_3 = "to";  // untranslated
Blockly.Msg.SET_GAME_OBJECT_BOOLEAN_FIELD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html";  // untranslated
Blockly.Msg.SET_GAME_OBJECT_BOOLEAN_FIELD_TOOLTIP = "Set a boolean property on the object";  // untranslated
Blockly.Msg.SET_GAME_OBJECT_NUMERIC_FIELD_FIELD_1 = "set numeric field";  // untranslated
Blockly.Msg.SET_GAME_OBJECT_NUMERIC_FIELD_FIELD_2 = "of";  // untranslated
Blockly.Msg.SET_GAME_OBJECT_NUMERIC_FIELD_FIELD_3 = "to";  // untranslated
Blockly.Msg.SET_GAME_OBJECT_NUMERIC_FIELD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html";  // untranslated
Blockly.Msg.SET_GAME_OBJECT_NUMERIC_FIELD_TOOLTIP = "Set a numeric property on the object";  // untranslated
Blockly.Msg.SET_GAME_OBJECT_POINT_FIELD_FIELD_1 = "set point field";  // untranslated
Blockly.Msg.SET_GAME_OBJECT_POINT_FIELD_FIELD_2 = "of";  // untranslated
Blockly.Msg.SET_GAME_OBJECT_POINT_FIELD_FIELD_3 = "to";  // untranslated
Blockly.Msg.SET_GAME_OBJECT_POINT_FIELD_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html";  // untranslated
Blockly.Msg.SET_GAME_OBJECT_POINT_FIELD_TOOLTIP = "Set a point property on the object";  // untranslated
Blockly.Msg.SET_HEIGHT_DOM = "DOM variable";  // untranslated
Blockly.Msg.SET_HEIGHT_HELP_URL = "";  // untranslated
Blockly.Msg.SET_HEIGHT_TITLE = "set height";  // untranslated
Blockly.Msg.SET_HEIGHT_TOOLTIP = "";  // untranslated
Blockly.Msg.SET_IMMOVABLE_FIELD_1 = "Set Immovable for Object";  // untranslated
Blockly.Msg.SET_IMMOVABLE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.Body.html#immovable";  // untranslated
Blockly.Msg.SET_IMMOVABLE_TOOLTIP = "Immovable bodies don't recoil from impacts at all. If two immovable bodies overlap or collide, it is ignored. Yes, we're sidestepping the question of unstoppable force versus immovable object.";  // untranslated
Blockly.Msg.SET_LEFT_EYE_FIELD_1 = "set left eye";  // untranslated
Blockly.Msg.SET_LEFT_EYE_FIELD_2 = "red";  // untranslated
Blockly.Msg.SET_LEFT_EYE_FIELD_3 = "green";  // untranslated
Blockly.Msg.SET_LEFT_EYE_FIELD_4 = "blue";  // untranslated
Blockly.Msg.SET_LEFT_EYE_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SET_LEFT_EYE_TOOLTIP = "Sets the color of the left eye.";  // untranslated
Blockly.Msg.SET_MEMBER_IN_CLASS_GET_MEMBER_NAME = "get %1";  // untranslated
Blockly.Msg.SET_MEMBER_IN_CLASS_HELP_URL = "";  // untranslated
Blockly.Msg.SET_MEMBER_IN_CLASS_INSTANCE_DEFAULT = "class";  // untranslated
Blockly.Msg.SET_MEMBER_IN_CLASS_IN_INSTANCE = "in %1 instance";  // untranslated
Blockly.Msg.SET_MEMBER_IN_CLASS_MEMBER_NAME_DEFUALT = "set value of";  // untranslated
Blockly.Msg.SET_MEMBER_IN_CLASS_SET_MEMBER_NAME = "set %1 to";  // untranslated
Blockly.Msg.SET_MEMBER_IN_CLASS_TOOLTIP = "Access the calling instance.";  // untranslated
Blockly.Msg.SET_NUMERIC_FIELD = "set numeric field";  // untranslated
Blockly.Msg.SET_OBJECT_ANCHOR_FIELD_1 = "set anchor for";  // untranslated
Blockly.Msg.SET_OBJECT_ANCHOR_FIELD_2 = "to";  // untranslated
Blockly.Msg.SET_OBJECT_ANCHOR_FIELD_3 = "x";  // untranslated
Blockly.Msg.SET_OBJECT_ANCHOR_FIELD_4 = "y";  // untranslated
Blockly.Msg.SET_OBJECT_ANCHOR_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#anchor";  // untranslated
Blockly.Msg.SET_OBJECT_ANCHOR_TOOLTIP = "Sets an object's anchor.";  // untranslated
Blockly.Msg.SET_OBJECT_WIDTH_FIELD_1 = "set width of ";  // untranslated
Blockly.Msg.SET_OBJECT_WIDTH_HELP_URL = "http://dragondrop.digipen.edu/docs/PIXI.Sprite.html#width";  // untranslated
Blockly.Msg.SET_OBJECT_WIDTH_TOOLTIP = "Sets the width of an object.";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_COLOUR_FIELD_1 = "set";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_COLOUR_FIELD_2 = "to";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_COLOUR_PIXEL_DROPDOWN_1 = "left eye";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_COLOUR_PIXEL_DROPDOWN_2 = "right eye";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_COLOUR_PIXEL_DROPDOWN_3 = "body top";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_COLOUR_PIXEL_DROPDOWN_4 = "body bottom";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_COLOUR_PIXEL_DROPDOWN_5 = "tail top";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_COLOUR_PIXEL_DROPDOWN_6 = "tail bottom";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_COLOUR_TOOLTIP = "";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_FIELD_1 = "set";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_FIELD_2 = "pixel";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_FIELD_3 = "red";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_FIELD_4 = "green";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_FIELD_5 = "blue";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_PIXEL_DROPDOWN_1 = "left eye";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_PIXEL_DROPDOWN_2 = "right eye";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_PIXEL_DROPDOWN_3 = "body top";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_PIXEL_DROPDOWN_4 = "body bottom";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_PIXEL_DROPDOWN_5 = "tail top";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_PIXEL_DROPDOWN_6 = "tail bottom";  // untranslated
Blockly.Msg.SET_PIXEL_RGB_TOOLTIP = "";  // untranslated
Blockly.Msg.SET_POINT_FIELD = "set point field";  // untranslated
Blockly.Msg.SET_POS_FIELD_1 = "Set";  // untranslated
Blockly.Msg.SET_POS_FIELD_2 = "on";  // untranslated
Blockly.Msg.SET_POS_FIELD_3 = "to";  // untranslated
Blockly.Msg.SET_POS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#position";  // untranslated
Blockly.Msg.SET_POS_PARAM_DROPDOWN_1 = "x";  // untranslated
Blockly.Msg.SET_POS_PARAM_DROPDOWN_2 = "y";  // untranslated
Blockly.Msg.SET_POS_TOOLTIP = "Sets the individual x or y coordinate of an object.";  // untranslated
Blockly.Msg.SET_RIGHT_EYE_FIELD_1 = "set right eye";  // untranslated
Blockly.Msg.SET_RIGHT_EYE_FIELD_2 = "red";  // untranslated
Blockly.Msg.SET_RIGHT_EYE_FIELD_3 = "green";  // untranslated
Blockly.Msg.SET_RIGHT_EYE_FIELD_4 = "blue";  // untranslated
Blockly.Msg.SET_RIGHT_EYE_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SET_RIGHT_EYE_TOOLTIP = "Sets the color of the right eye.";  // untranslated
Blockly.Msg.SET_ROTATION_FIELD_1 = "set the rotation of";  // untranslated
Blockly.Msg.SET_ROTATION_FIELD_2 = "to";  // untranslated
Blockly.Msg.SET_ROTATION_FIELD_3 = "degrees";  // untranslated
Blockly.Msg.SET_ROTATION_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#angle";  // untranslated
Blockly.Msg.SET_ROTATION_TOOLTIP = "Directly sets the rotation (in degrees) of this game object to the given value.";  // untranslated
Blockly.Msg.SET_SCALE_FIELD_1 = "Scale";  // untranslated
Blockly.Msg.SET_SCALE_FIELD_2 = "by";  // untranslated
Blockly.Msg.SET_SCALE_FIELD_3 = "X";  // untranslated
Blockly.Msg.SET_SCALE_FIELD_4 = "Y";  // untranslated
Blockly.Msg.SET_SCALE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#scale";  // untranslated
Blockly.Msg.SET_SCALE_MIN_MAX_FIELD_1 = "set scale constraints on";  // untranslated
Blockly.Msg.SET_SCALE_MIN_MAX_FIELD_2 = "min X";  // untranslated
Blockly.Msg.SET_SCALE_MIN_MAX_FIELD_3 = "min Y";  // untranslated
Blockly.Msg.SET_SCALE_MIN_MAX_FIELD_4 = "max X";  // untranslated
Blockly.Msg.SET_SCALE_MIN_MAX_FIELD_5 = "max Y";  // untranslated
Blockly.Msg.SET_SCALE_MIN_MAX_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#setScaleMinMax";  // untranslated
Blockly.Msg.SET_SCALE_MIN_MAX_TOOLTIP = "Limits how far this sprite will scale based on its parent.";  // untranslated
Blockly.Msg.SET_SCALE_TOOLTIP = "Sets the given object's width and height.";  // untranslated
Blockly.Msg.SET_SCALE_VI_FIELD_1 = "scale";  // untranslated
Blockly.Msg.SET_SCALE_VI_FIELD_2 = "by";  // untranslated
Blockly.Msg.SET_SCALE_VI_FIELD_3 = "x";  // untranslated
Blockly.Msg.SET_SCALE_VI_FIELD_4 = "y";  // untranslated
Blockly.Msg.SET_SCALE_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#scale";  // untranslated
Blockly.Msg.SET_SCALE_VI_TOOLTIP = "Sets the given object's width and height.";  // untranslated
Blockly.Msg.SET_SOUND_BOOLEAN_MEMBER_FIELD_1 = "set";  // untranslated
Blockly.Msg.SET_SOUND_BOOLEAN_MEMBER_FIELD_2 = "of";  // untranslated
Blockly.Msg.SET_SOUND_BOOLEAN_MEMBER_FIELD_3 = "to";  // untranslated
Blockly.Msg.SET_SOUND_BOOLEAN_MEMBER_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sound.html";  // untranslated
Blockly.Msg.SET_SOUND_BOOLEAN_MEMBER_TOOLTIP = "Set the selected member on the Sound";  // untranslated
Blockly.Msg.SET_SOUND_NUMERIC_MEMBER_FIELD_1 = "set";  // untranslated
Blockly.Msg.SET_SOUND_NUMERIC_MEMBER_FIELD_2 = "of";  // untranslated
Blockly.Msg.SET_SOUND_NUMERIC_MEMBER_FIELD_3 = "to";  // untranslated
Blockly.Msg.SET_SOUND_NUMERIC_MEMBER_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sound.html";  // untranslated
Blockly.Msg.SET_SOUND_NUMERIC_MEMBER_TOOLTIP = "Set the selected member on the Sound";  // untranslated
Blockly.Msg.SET_SPRITE_FRAME_FIELD_1 = "Set texture frame of";  // untranslated
Blockly.Msg.SET_SPRITE_FRAME_FIELD_2 = "to";  // untranslated
Blockly.Msg.SET_SPRITE_FRAME_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#setFrame";  // untranslated
Blockly.Msg.SET_SPRITE_FRAME_TOOLTIP = "Sets the Texture frame the Sprite uses for rendering. This is primarily an internal method used by Sprite.loadTexture, although you may call it directly.";  // untranslated
Blockly.Msg.SET_STRING_FIELD = "set string field";  // untranslated
Blockly.Msg.SET_TEXTURE_FIELD_1 = "Set texture of";  // untranslated
Blockly.Msg.SET_TEXTURE_FIELD_2 = "to";  // untranslated
Blockly.Msg.SET_TEXTURE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#setTexture";  // untranslated
Blockly.Msg.SET_TEXTURE_TOOLTIP = "Sets the texture of the sprite. Be warned that this doesn't remove or destroy the previous texture this Sprite was using. Note that this takes a specific texture, not a tag.";  // untranslated
Blockly.Msg.SET_TEXT_FIELD_1 = "set text for";  // untranslated
Blockly.Msg.SET_TEXT_FIELD_2 = "to";  // untranslated
Blockly.Msg.SET_TEXT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Text.html#setText";  // untranslated
Blockly.Msg.SET_TEXT_TOOLTIP = "Sets what phaser text will display on the screen.";  // untranslated
Blockly.Msg.SET_TEXT_VI_FIELD_1 = "set text for";  // untranslated
Blockly.Msg.SET_TEXT_VI_FIELD_2 = "to";  // untranslated
Blockly.Msg.SET_TEXT_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Text.html#setText";  // untranslated
Blockly.Msg.SET_TEXT_VI_TOOLTIP = "Sets what phaser text will display on the screen.";  // untranslated
Blockly.Msg.SET_TIME_NUMERIC_MEMBER_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Time.html";  // untranslated
Blockly.Msg.SET_TIME_NUMERIC_MEMBER_TITLE = "set";  // untranslated
Blockly.Msg.SET_TIME_NUMERIC_MEMBER_TO = "to";  // untranslated
Blockly.Msg.SET_TIME_NUMERIC_MEMBER_TOOLTIP = "Write to one of the game time's numeric fields.";  // untranslated
Blockly.Msg.SET_VELOCITY_FIELD_1 = "Set Velocity";  // untranslated
Blockly.Msg.SET_VELOCITY_FIELD_2 = "on";  // untranslated
Blockly.Msg.SET_VELOCITY_FIELD_3 = "to";  // untranslated
Blockly.Msg.SET_VELOCITY_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.Body.html#velocity";  // untranslated
Blockly.Msg.SET_VELOCITY_TOOLTIP = "Sets an objects velocity. This is a combination of speed and direction.";  // untranslated
Blockly.Msg.SET_WIDTH_DOM = "DOM variable";  // untranslated
Blockly.Msg.SET_WIDTH_HELP_URL = "";  // untranslated
Blockly.Msg.SET_WIDTH_TITLE = "set width";  // untranslated
Blockly.Msg.SET_WIDTH_TOOLTIP = "";  // untranslated
Blockly.Msg.SET_WORLD_BOUNDS_FIELD_1 = "set world bounds";  // untranslated
Blockly.Msg.SET_WORLD_BOUNDS_FIELD_2 = "x:";  // untranslated
Blockly.Msg.SET_WORLD_BOUNDS_FIELD_3 = "y:";  // untranslated
Blockly.Msg.SET_WORLD_BOUNDS_FIELD_4 = "width:";  // untranslated
Blockly.Msg.SET_WORLD_BOUNDS_FIELD_5 = "height:";  // untranslated
Blockly.Msg.SET_WORLD_BOUNDS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.World.html#setBounds";  // untranslated
Blockly.Msg.SET_WORLD_BOUNDS_TOOLTIP = "Updates the size of the world and sets the leftmost corner";  // untranslated
Blockly.Msg.SIMPLE_GYRO_NAVIGATION_FIELD_1 = "simple gyro navigation";  // untranslated
Blockly.Msg.SIMPLE_GYRO_NAVIGATION_TOOLTIP = "";  // untranslated
Blockly.Msg.SIMPLE_NAVIGATION_FIELD_1 = "simple navigation";  // untranslated
Blockly.Msg.SIMPLE_NAVIGATION_TOOLTIP = "";  // untranslated
Blockly.Msg.SINCE_START = "since start";  // untranslated
Blockly.Msg.SOUND_FADE_IN_FIELD_1 = "fade in sound";  // untranslated
Blockly.Msg.SOUND_FADE_IN_FIELD_2 = "over";  // untranslated
Blockly.Msg.SOUND_FADE_IN_FIELD_3 = "milliseconds loop";  // untranslated
Blockly.Msg.SOUND_FADE_IN_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sound.html#fadeIn";  // untranslated
Blockly.Msg.SOUND_FADE_IN_TOOLTIP = "Starts/Restarts the sound sets the volume to zero and increases from 0 to 1 over duration";  // untranslated
Blockly.Msg.SOUND_FADE_OUT_FIELD_1 = "fade out sound";  // untranslated
Blockly.Msg.SOUND_FADE_OUT_FIELD_2 = "over";  // untranslated
Blockly.Msg.SOUND_FADE_OUT_FIELD_3 = "milliseconds";  // untranslated
Blockly.Msg.SOUND_FADE_OUT_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sound.html#fadeOut";  // untranslated
Blockly.Msg.SOUND_FADE_OUT_TOOLTIP = "Fades the sounds volume to 0 over the given duration";  // untranslated
Blockly.Msg.SOUND_FADE_TO_FIELD_1 = "fade sound";  // untranslated
Blockly.Msg.SOUND_FADE_TO_FIELD_2 = "over";  // untranslated
Blockly.Msg.SOUND_FADE_TO_FIELD_3 = "milliseconds";  // untranslated
Blockly.Msg.SOUND_FADE_TO_FIELD_4 = "to volume";  // untranslated
Blockly.Msg.SOUND_FADE_TO_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sound.html#fadeTo";  // untranslated
Blockly.Msg.SOUND_FADE_TO_TOOLTIP = "Fades the sounds volume to a given volume over the given duration";  // untranslated
Blockly.Msg.SOUND_LOOP_FULL_FIELD_1 = "loop sound";  // untranslated
Blockly.Msg.SOUND_LOOP_FULL_FIELD_2 = "at volume";  // untranslated
Blockly.Msg.SOUND_LOOP_FULL_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sound.html#loopFull";  // untranslated
Blockly.Msg.SOUND_LOOP_FULL_TOOLTIP = "Loops the entire sound";  // untranslated
Blockly.Msg.SOUND_PAUSE_FIELD_1 = "pause sound";  // untranslated
Blockly.Msg.SOUND_PAUSE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sound.html#pause";  // untranslated
Blockly.Msg.SOUND_PAUSE_TOOLTIP = "Pause the sound";  // untranslated
Blockly.Msg.SOUND_PLAY_FIELD_1 = "play sound";  // untranslated
Blockly.Msg.SOUND_PLAY_FIELD_2 = "starting at position";  // untranslated
Blockly.Msg.SOUND_PLAY_FIELD_3 = "at volume";  // untranslated
Blockly.Msg.SOUND_PLAY_FIELD_4 = "loop";  // untranslated
Blockly.Msg.SOUND_PLAY_FIELD_5 = "force restart";  // untranslated
Blockly.Msg.SOUND_PLAY_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sound.html#play";  // untranslated
Blockly.Msg.SOUND_PLAY_TOOLTIP = "Play the sound";  // untranslated
Blockly.Msg.SOUND_RESTART_FIELD_1 = "restart sound";  // untranslated
Blockly.Msg.SOUND_RESTART_FIELD_2 = "starting at position";  // untranslated
Blockly.Msg.SOUND_RESTART_FIELD_3 = "at volume";  // untranslated
Blockly.Msg.SOUND_RESTART_FIELD_4 = "loop";  // untranslated
Blockly.Msg.SOUND_RESTART_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sound.html#restart";  // untranslated
Blockly.Msg.SOUND_RESTART_TOOLTIP = "Restart the entire sound";  // untranslated
Blockly.Msg.SOUND_RESUME_FIELD_1 = "resume sound";  // untranslated
Blockly.Msg.SOUND_RESUME_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sound.html#resume";  // untranslated
Blockly.Msg.SOUND_RESUME_TOOLTIP = "Resumes the sound";  // untranslated
Blockly.Msg.SOUND_STOP_FIELD_1 = "stop sound";  // untranslated
Blockly.Msg.SOUND_STOP_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sound.html#stop";  // untranslated
Blockly.Msg.SOUND_STOP_TOOLTIP = "Stops the sound";  // untranslated
Blockly.Msg.SPINLEFT_FIELD_1 = "spin left";  // untranslated
Blockly.Msg.SPINLEFT_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SPINLEFT_TOOLTIP = "Spins the wink robot to the left";  // untranslated
Blockly.Msg.SPINRIGHT_FIELD_1 = "spin right";  // untranslated
Blockly.Msg.SPINRIGHT_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.SPINRIGHT_TOOLTIP = "Spins the wink robot to the right";  // untranslated
Blockly.Msg.SPRITE_OVERLAP_FIELD_1 = "does";  // untranslated
Blockly.Msg.SPRITE_OVERLAP_FIELD_2 = "overlap with";  // untranslated
Blockly.Msg.SPRITE_OVERLAP_FIELD_3 = "?";  // untranslated
Blockly.Msg.SPRITE_OVERLAP_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#overlap";  // untranslated
Blockly.Msg.SPRITE_OVERLAP_TOOLTIP = "Checks to see if the rectangular bounds of the two given sprites overlap. Not a good substitute for the physics engine, but fine for something like UI.";  // untranslated
Blockly.Msg.START_ARCADE_PHYSICS_FIELD_1 = "start arcade physics system";  // untranslated
Blockly.Msg.START_ARCADE_PHYSICS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.html#startSystem";  // untranslated
Blockly.Msg.START_ARCADE_PHYSICS_TOOLTIP = "Start the specified arcade physics system";  // untranslated
Blockly.Msg.START_PHASER_FOR_STATES_FIELD_1 = "start phaser for states with";  // untranslated
Blockly.Msg.START_PHASER_FOR_STATES_FIELD_2 = "width";  // untranslated
Blockly.Msg.START_PHASER_FOR_STATES_FIELD_3 = "height";  // untranslated
Blockly.Msg.START_PHASER_FOR_STATES_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Game.html";  // untranslated
Blockly.Msg.START_PHASER_FOR_STATES_TOOLTIP = "Create a Phaser game using explicit states.";  // untranslated
Blockly.Msg.START_PHYSICS_FIELD_1 = "start";  // untranslated
Blockly.Msg.START_PHYSICS_FIELD_2 = "physics system";  // untranslated
Blockly.Msg.START_PHYSICS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.html#startSystem";  // untranslated
Blockly.Msg.START_PHYSICS_SYSTEM_DROPDOWN_1 = "Arcade";  // untranslated
Blockly.Msg.START_PHYSICS_SYSTEM_DROPDOWN_2 = "P2JS";  // untranslated
Blockly.Msg.START_PHYSICS_TOOLTIP = "Start physics with the specified system";  // untranslated
Blockly.Msg.START_TIMER = "start timer";  // untranslated
Blockly.Msg.START_TIMER_TOOLTIP = "Start timer after a given delay in milliseconds";  // untranslated
Blockly.Msg.START_TIMER_URL = "http://dragondrop.digipen.edu/docs/Phaser.Timer.html#start";  // untranslated
Blockly.Msg.STATEMANAGER_ADD_STATE_FIELD_1 = "add state";  // untranslated
Blockly.Msg.STATEMANAGER_ADD_STATE_FIELD_2 = "tagged";  // untranslated
Blockly.Msg.STATEMANAGER_ADD_STATE_FIELD_3 = "to state manager";  // untranslated
Blockly.Msg.STATEMANAGER_ADD_STATE_KEY_TEXT_DEFAULT = "tag";  // untranslated
Blockly.Msg.STATEMANAGER_ADD_STATE_TOOLTIP = "Adds a state to the game engine, this should be an instance of a state class.";  // untranslated
Blockly.Msg.STATEMANAGER_CHECK_STATE = "is valid state?";  // untranslated
Blockly.Msg.STATEMANAGER_CHECK_STATE_HELP_URL = "http://phaser.io/docs/2.6.2/Phaser.StateManager.html#checkState";  // untranslated
Blockly.Msg.STATEMANAGER_CHECK_STATE_TOOLTIP = "Returns if a given phaser state is valid. A State is considered valid if it has at least one of the core functions: preload, create, update or render.";  // untranslated
Blockly.Msg.STATEMANAGER_GET_CURRENT_STATE = "get current state";  // untranslated
Blockly.Msg.STATEMANAGER_GET_CURRENT_STATE_HELP_URL = "http://phaser.io/docs/2.6.2/Phaser.StateManager.html#getCurrentState";  // untranslated
Blockly.Msg.STATEMANAGER_GET_CURRENT_STATE_TOOLTIP = "Gets the current State";  // untranslated
Blockly.Msg.STATEMANAGER_RESTART_STATE = "restart state";  // untranslated
Blockly.Msg.STATEMANAGER_RESTART_STATE_HELP_URL = "http://phaser.io/docs/2.6.2/Phaser.StateManager.html#restart";  // untranslated
Blockly.Msg.STATEMANAGER_RESTART_STATE_TOOLTIP = "Restarts the current State. State.shutDown will be called (if it exists) before the State is restarted.";  // untranslated
Blockly.Msg.STATEMANAGER_START_STATE_FIELD_1 = "start state with tag";  // untranslated
Blockly.Msg.STATEMANAGER_START_STATE_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.StateManager.html#start";  // untranslated
Blockly.Msg.STATEMANAGER_START_STATE_TAG_TEXT_DEFAULT = "tag";  // untranslated
Blockly.Msg.STATEMANAGER_START_STATE_TOOLTIP = "Start the specified state, this should be a state that has been added to the game engine";  // untranslated
Blockly.Msg.STEP_FIELD_1 = "Step";  // untranslated
Blockly.Msg.STEP_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Game.html#step";  // untranslated
Blockly.Msg.STEP_TOOLTIP = "Manually steps to the next game loop. Stepping should be enabled before using this.";  // untranslated
Blockly.Msg.STOP_ANIMATION_FIELD_1 = "stop animation on";  // untranslated
Blockly.Msg.STOP_ANIMATION_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#stop";  // untranslated
Blockly.Msg.STOP_ANIMATION_TOOLTIP = "Stops any animation from playing on the given sprite.";  // untranslated
Blockly.Msg.STOP_ANIMATION_VI_FIELD_1 = "stop animation on";  // untranslated
Blockly.Msg.STOP_ANIMATION_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Animation.html#stop";  // untranslated
Blockly.Msg.STOP_ANIMATION_VI_TOOLTIP = "Stops the current animation on the specified Sprite";  // untranslated
Blockly.Msg.STOP_BODY_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Physics.Arcade.Body.html#stop";  // untranslated
Blockly.Msg.STOP_BODY_TEXT = "stop body";  // untranslated
Blockly.Msg.STOP_BODY_TOOLTIP = "stops any existing movement or acceleration of the body";  // untranslated
Blockly.Msg.STOP_PAUSE_RESUME_SOUNDS_FIELD_1 = "all sounds";  // untranslated
Blockly.Msg.STOP_PAUSE_RESUME_SOUNDS_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.SoundManager.html#stopAll";  // untranslated
Blockly.Msg.STOP_PAUSE_RESUME_SOUNDS_OPTION_DROPDOWN_1 = "stop";  // untranslated
Blockly.Msg.STOP_PAUSE_RESUME_SOUNDS_OPTION_DROPDOWN_2 = "pause";  // untranslated
Blockly.Msg.STOP_PAUSE_RESUME_SOUNDS_OPTION_DROPDOWN_3 = "resume";  // untranslated
Blockly.Msg.STOP_PAUSE_RESUME_SOUNDS_TOOLTIP = "Stop - Stop everything dead. Pause - Stop everything, but remember where you were. Resume - Start playing paused sounds from where they left off.";  // untranslated
Blockly.Msg.STOP_TIMER = "stop timer";  // untranslated
Blockly.Msg.STOP_TIMER_CLEAR_EVENTS = "clear events";  // untranslated
Blockly.Msg.STOP_TIMER_TOOLTIP = "Stops the timer and all events in the queue, if auto destroy is true this will not cause it to be destroyed";  // untranslated
Blockly.Msg.STOP_TIMER_URL = "http://dragondrop.digipen.edu/docs/Phaser.Timer.html#stop";  // untranslated
Blockly.Msg.SUPER = "super";  // untranslated
Blockly.Msg.SWAP_CHILDREN_FIELD_1 = "swap children of";  // untranslated
Blockly.Msg.SWAP_CHILDREN_FIELD_2 = "child 1";  // untranslated
Blockly.Msg.SWAP_CHILDREN_FIELD_3 = "child 2";  // untranslated
Blockly.Msg.SWAP_CHILDREN_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.Sprite.html#swapChildren";  // untranslated
Blockly.Msg.SWAP_CHILDREN_TOOLTIP = "Swaps the indices of the given children. They must both be on the same parent.";  // untranslated
Blockly.Msg.SWITCH_AMBIENT_TO_EDGE = "switch ambient to edge";  // untranslated
Blockly.Msg.SWITCH_AMBIENT_TO_EDGE_TOOLTIP = "";  // untranslated
Blockly.Msg.SWITCH_BUTTON_TO_PIXELS = "switch button to pixels";  // untranslated
Blockly.Msg.SWITCH_BUTTON_TO_PIXELS_TOOLTIP = "Sets shared line to control NeoPixel lights";  // untranslated
Blockly.Msg.SWITCH_EDGE_TO_AMBIENT = "switch ambient to edge";  // untranslated
Blockly.Msg.SWITCH_EDGE_TO_AMBIENT_TOOLTIP = "";  // untranslated
Blockly.Msg.SWITCH_MOTORS_TO_SERIAL = "switch motors to serial";  // untranslated
Blockly.Msg.SWITCH_MOTORS_TO_SERIAL_TOOLTIP = "";  // untranslated
Blockly.Msg.SWITCH_PIXELS_TO_BUTTON = "switch pixels to button";  // untranslated
Blockly.Msg.SWITCH_PIXELS_TO_BUTTON_TOOLTIP = "Sets shared line to control NeoPixel lights";  // untranslated
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "thêm văn bản";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "ở cuối";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Thêm một mảng văn bản vào biến \"%1\".";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "thành chữ thường";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "thành Chữ In Đầu Mỗi Từ";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "thành CHỮ IN HOA";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Hoàn trả văn bản sau khi chuyển đổi chữ in hoa hay thường.";
Blockly.Msg.TEXT_CHARAT_FIRST = "lấy ký tự đầu tiên";
Blockly.Msg.TEXT_CHARAT_FROM_END = "lấy từ phía cuối, ký tự thứ";
Blockly.Msg.TEXT_CHARAT_FROM_START = "lấy ký tự thứ";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "trong văn bản";
Blockly.Msg.TEXT_CHARAT_LAST = "lấy ký tự cuối cùng";
Blockly.Msg.TEXT_CHARAT_RANDOM = "lấy ký tự bất kỳ";
Blockly.Msg.TEXT_CHARAT_TAIL = "";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Hoàn trả ký tự ở vị trí đặt ra.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "thêm vật mới vào văn bản.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "kết nối";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Thêm, bỏ, hoặc sắp xếp lại các thành phần để tạo dựng mảnh văn bản này.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "đến từ phía cuối, ký tự thứ";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "đến ký tự thứ";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "đến ký tự cuối cùng";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "trong văn bản";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "lấy từ ký tự đầu tiên";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "lấy từ phía cuối, ký tự thứ";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "lấy từ ký tự thứ";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Hoàn trả một mảng ký tự ấn định từ trong văn bản.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "trong văn bản";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "tìm sự có mặt đầu tiên của";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "tìm sự có mặt cuối cùng của";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Hoàn trả vị trí xuất hiện đầu/cuối của văn bản thứ nhất trong văn bản thứ hai.  Nếu không tìm thấy thì hoàn trả số %1.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 trống không";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Hoàn trả “đúng nếu văn bản không có ký tự nào.";
Blockly.Msg.TEXT_JOIN_HELPURL = "";
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "tạo văn bản từ";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Tạo một văn bản từ các thành phần.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "độ dài của %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Hoàn trả số lượng ký tự (kể cả khoảng trắng) trong văn bản đầu vào.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "in lên màng hình %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "In ra màng hình một văn bản, con số, hay một giá trị đầu vào khác.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Xin người dùng nhập vào một con số.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Xin người dùng nhập vào một văn bản.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "Xin người dùng nhập vào con số với dòng hướng dẫn";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "Xin người dùng nhập vào văn bản với dòng hướng dẫn";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/string_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Một ký tự, một từ, hay một dòng.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "cắt các không gian từ cả hai mặt của";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "cắt các không gian từ bên trái của";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "cắt các không gian từ bên phải của";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Hoàn trả bản sao của văn bản sau khi xóa khoảng trắng từ một hoặc hai bên.";
Blockly.Msg.THIS_REFERENCE_HELP_URL = "https://en.wikipedia.org/wiki/This_(computer_programming)";  // untranslated
Blockly.Msg.THIS_REFERENCE_TOOLTIP = "Access the calling instance.";  // untranslated
Blockly.Msg.TIMEOUT = "timeout";  // untranslated
Blockly.Msg.TIMER = "timer";  // untranslated
Blockly.Msg.TIMER_ADD_EVENT = "add event to timer";  // untranslated
Blockly.Msg.TIMER_ADD_EVENT_TOOLTIP = "Fire the event after the specified delay after the start of the timer";  // untranslated
Blockly.Msg.TIMER_ADD_EVENT_URL = "http://dragondrop.digipen.edu/docs/Phaser.Timer.html#add";  // untranslated
Blockly.Msg.TIMER_CONSTANTS_TOOLTIP = "Constants for some common values in milliseconds";  // untranslated
Blockly.Msg.TIMER_LOOP_EVENT = "loop event on timer";  // untranslated
Blockly.Msg.TIMER_LOOP_EVENT_TOOLTIP = "Loops the given event forever or until the timer is stopped or destroyed";  // untranslated
Blockly.Msg.TIMER_LOOP_EVENT_URL = "http://dragondrop.digipen.edu/docs/Phaser.Timer.html#loop";  // untranslated
Blockly.Msg.TIMER_REPEAT_EVENT = "repeat event on timer";  // untranslated
Blockly.Msg.TIMER_REPEAT_EVENT_COUNT = "times";  // untranslated
Blockly.Msg.TIMER_REPEAT_EVENT_TOOLTIP = "Loops the given event forever or until the timer is stopped or destroyed";  // untranslated
Blockly.Msg.TIMER_REPEAT_EVENT_URL = "http://dragondrop.digipen.edu/docs/Phaser.Timer.html#loop";  // untranslated
Blockly.Msg.TIMER_SET_ON_COMPLETE_CALLBACK = "when timer";  // untranslated
Blockly.Msg.TIMER_SET_ON_COMPLETE_CALLBACK_COMPLETED = "completes call";  // untranslated
Blockly.Msg.TIMER_SET_ON_COMPLETE_CALLBACK_TOOLTIP = "Called when the timer completes all of the actions in its queue. This will not be called if the timer is stopped or destroyed before it completes its queue.";  // untranslated
Blockly.Msg.TIMER_SET_ON_COMPLETE_CALLBACK_URL = "http://dragondrop.digipen.edu/docs/Phaser.Timer.html#onComplete";  // untranslated
Blockly.Msg.TO = "to";  // untranslated
Blockly.Msg.TODAY = "Today";  // untranslated
Blockly.Msg.TONE_PIN_FREQ_DURATION_FIELD_1 = "play frequency";  // untranslated
Blockly.Msg.TONE_PIN_FREQ_DURATION_FIELD_2 = "on pin #";  // untranslated
Blockly.Msg.TONE_PIN_FREQ_DURATION_FIELD_3 = "for ";  // untranslated
Blockly.Msg.TONE_PIN_FREQ_DURATION_FIELD_4 = "milliseconds";  // untranslated
Blockly.Msg.TONE_PIN_FREQ_DURATION_HELP_URL = "https://www.arduino.cc/en/Reference/Tone";  // untranslated
Blockly.Msg.TONE_PIN_FREQ_DURATION_TOOLTIP = "";  // untranslated
Blockly.Msg.TONE_PIN_FREQ_FIELD_1 = "play frequency";  // untranslated
Blockly.Msg.TONE_PIN_FREQ_FIELD_2 = "on pin #";  // untranslated
Blockly.Msg.TONE_PIN_FREQ_HELP_URL = "https://www.arduino.cc/en/Reference/Tone";  // untranslated
Blockly.Msg.TONE_PIN_FREQ_TOOLTIP = "";  // untranslated
Blockly.Msg.TURNEYESOFF_FIELD_1 = "turn eyes off";  // untranslated
Blockly.Msg.TURNEYESOFF_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.TURNEYESOFF_TOOLTIP = "";  // untranslated
Blockly.Msg.TURNLEFTEYEOFF_FIELD_1 = "turn left eye off";  // untranslated
Blockly.Msg.TURNLEFTEYEOFF_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.TURNLEFTEYEOFF_TOOLTIP = "";  // untranslated
Blockly.Msg.TURNRIGHTEYEOFF_FIELD_1 = "turn right eye off";  // untranslated
Blockly.Msg.TURNRIGHTEYEOFF_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.TURNRIGHTEYEOFF_TOOLTIP = "";  // untranslated
Blockly.Msg.TURN_BY_VALUES_DIRECTION_DROPDOWN_1 = "left";  // untranslated
Blockly.Msg.TURN_BY_VALUES_DIRECTION_DROPDOWN_2 = "right";  // untranslated
Blockly.Msg.TURN_BY_VALUES_FIELD_1 = "turn";  // untranslated
Blockly.Msg.TURN_BY_VALUES_FIELD_2 = "speed";  // untranslated
Blockly.Msg.TURN_BY_VALUES_FIELD_3 = "delay";  // untranslated
Blockly.Msg.TURN_BY_VALUES_FIELD_4 = "milliseconds";  // untranslated
Blockly.Msg.TURN_BY_VALUES_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.TURN_BY_VALUES_TOOLTIP = "Turns the robot at the specified speed for the specified duration in the specified direction - either left or right. Negative values are accepted.";  // untranslated
Blockly.Msg.TYPED_ARRAYS_CREATE_WITH_FIELD_1 = "create array of";  // untranslated
Blockly.Msg.TYPED_ARRAYS_CREATE_WITH_FIELD_2 = "with";  // untranslated
Blockly.Msg.TYPED_ARRAYS_DELETE_HELP_URL = "";  // untranslated
Blockly.Msg.TYPED_ARRAYS_DELETE_TITLE = "delete array";  // untranslated
Blockly.Msg.TYPED_ARRAYS_DELETE_TOOLTIP = "";  // untranslated
Blockly.Msg.TYPED_ARRAYS_GETINDEX_FIELD_1 = "in array";  // untranslated
Blockly.Msg.TYPED_ARRAYS_GETINDEX_FIELD_2 = "get index #";  // untranslated
Blockly.Msg.TYPED_ARRAYS_GETINDEX_HELP_URL = "";  // untranslated
Blockly.Msg.TYPED_ARRAYS_GETINDEX_TOOLTIP = "";  // untranslated
Blockly.Msg.TYPED_ARRAYS_NOT_ARRAY_WARNING = "%1 is not an array!";  // untranslated
Blockly.Msg.TYPED_ARRAYS_SETINDEX_FIELD_1 = "in array";  // untranslated
Blockly.Msg.TYPED_ARRAYS_SETINDEX_FIELD_2 = "set index #";  // untranslated
Blockly.Msg.TYPED_ARRAYS_SETINDEX_FIELD_3 = "to";  // untranslated
Blockly.Msg.TYPED_ARRAYS_SETINDEX_HELP_URL = "";  // untranslated
Blockly.Msg.TYPED_ARRAYS_SETINDEX_TOOLTIP = "";  // untranslated
Blockly.Msg.TYPE_BOOL = "Boolean";  // untranslated
Blockly.Msg.TYPE_BOOL_ARR = "Array of Booleans";  // untranslated
Blockly.Msg.TYPE_CHAR = "Character";  // untranslated
Blockly.Msg.TYPE_FLOAT = "Float";  // untranslated
Blockly.Msg.TYPE_FLOAT_ARR = "Array of Floats";  // untranslated
Blockly.Msg.TYPE_INT = "Integer";  // untranslated
Blockly.Msg.TYPE_INT_ARR = "Array of Integers";  // untranslated
Blockly.Msg.TYPE_SERVO = "Servo";  // untranslated
Blockly.Msg.TYPE_STRING = "String";  // untranslated
Blockly.Msg.TYPE_STRING_ARR = "Array of Strings";  // untranslated
Blockly.Msg.UNDO = "Undo";  // untranslated
Blockly.Msg.VALIDATE_FRAMES_FIELD_1 = "validate animation frames of ";  // untranslated
Blockly.Msg.VALIDATE_FRAMES_FIELD_2 = "array of frames";  // untranslated
Blockly.Msg.VALIDATE_FRAMES_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#validateFrames";  // untranslated
Blockly.Msg.VALIDATE_FRAMES_TOOLTIP = "Validates the frames on the given Sprite.";  // untranslated
Blockly.Msg.VALIDATE_FRAMES_VI_FIELD_1 = "validate animation frames of ";  // untranslated
Blockly.Msg.VALIDATE_FRAMES_VI_FIELD_2 = "array of frames";  // untranslated
Blockly.Msg.VALIDATE_FRAMES_VI_HELP_URL = "http://dragondrop.digipen.edu/docs/Phaser.AnimationManager.html#validateFrames";  // untranslated
Blockly.Msg.VALIDATE_FRAMES_VI_TOOLTIP = "Validates the frames on the given Sprite.";  // untranslated
Blockly.Msg.VALUE = "value";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "vật";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Tạo mảnh \"đặt vào %1\"";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Hoàn trả giá trị của.";
Blockly.Msg.VARIABLES_SET = "cho %1 bằng %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Tạo mảnh \"lấy %1\"";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Đặt giá trị của biến này thành...";
Blockly.Msg.VARIABLE_ALREADY_EXISTS = "A variable named '%1' already exists.";  // untranslated
Blockly.Msg.VARIABLE_SET_TYPED_DEFAULT_VAR = "item";  // untranslated
Blockly.Msg.VARIABLE_SET_TYPED_FIELD_1 = "set";  // untranslated
Blockly.Msg.VARIABLE_SET_TYPED_FIELD_2 = "to";  // untranslated
Blockly.Msg.VARIABLE_SET_TYPED_HELP_URL = "";  // untranslated
Blockly.Msg.VARIABLE_SET_TYPED_TOOLTIP = "";  // untranslated
Blockly.Msg.VECTOR_TO_DEGREES_FIELD_1 = "vector to degrees";  // untranslated
Blockly.Msg.VECTOR_TO_DEGREES_FIELD_2 = "x component";  // untranslated
Blockly.Msg.VECTOR_TO_DEGREES_FIELD_3 = "y component";  // untranslated
Blockly.Msg.VECTOR_TO_DEGREES_TOOLTIP = "";  // untranslated
Blockly.Msg.WIDTH = "width";  // untranslated
Blockly.Msg.WINK_EXPLORER_BASE_EYE_TEXT_1 = "Sets the ";  // untranslated
Blockly.Msg.WINK_EXPLORER_BASE_EYE_TEXT_2 = " to be ";  // untranslated
Blockly.Msg.WINK_EXPLORER_BASE_EYE_TEXT_ENDING = " with the specified intensity from 0-255.";  // untranslated
Blockly.Msg.WINK_EYES_BOTH_BLUE = "Sets both eyes to be blue with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYES_BOTH_CYAN = "Sets both eyes to be cyan with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYES_BOTH_GREEN = "Sets both eyes to be green with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYES_BOTH_OFF = "Turns off both of the eyes.";  // untranslated
Blockly.Msg.WINK_EYES_BOTH_ORANGE = "Sets both eyes to be orange with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYES_BOTH_PINK = "Sets both eyes to be pink with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYES_BOTH_PURPLE = "Sets both eyes to be purple with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYES_BOTH_RED = "Sets both eyes to be red with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYES_BOTH_RGB = "Sets both eyes to be the specified Red, Green, and Blue values.";  // untranslated
Blockly.Msg.WINK_EYES_BOTH_SELECT = "Sets both eyes to be the specified color with max intensity.";  // untranslated
Blockly.Msg.WINK_EYES_BOTH_WHITE = "Sets both eyes to be white with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYES_BOTH_YELLOW = "Sets both eyes to be yellow with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_LEFT_BLUE = "Sets the left eye to be blue with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_LEFT_CYAN = "Sets the left eye to be cyan with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_LEFT_GREEN = "Sets the left eye to be green with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_LEFT_OFF = "Turns off the left eye.";  // untranslated
Blockly.Msg.WINK_EYE_LEFT_ORANGE = "Sets the left eye to be orange with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_LEFT_PINK = "Sets the left eye to be pink with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_LEFT_PURPLE = "Sets the left eye to be purple with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_LEFT_RED = "Sets the left eye to be red with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_LEFT_RGB = "Sets the left eye to be the specified Red, Green, and Blue values.";  // untranslated
Blockly.Msg.WINK_EYE_LEFT_SELECT = "Sets the left eye to be the specified color with max intensity.";  // untranslated
Blockly.Msg.WINK_EYE_LEFT_WHITE = "Sets the left eye to be white with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_LEFT_YELLOW = "Sets the left eye to be yellow with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_RIGHT_BLUE = "Sets the right eye to be blue with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_RIGHT_CYAN = "Sets the right eye to be cyan with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_RIGHT_GREEN = "Sets the right eye to be green with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_RIGHT_OFF = "Turns off the right eye.";  // untranslated
Blockly.Msg.WINK_EYE_RIGHT_ORANGE = "Sets the right eye to be orange with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_RIGHT_PINK = "Sets the right eye to be pink with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_RIGHT_PURPLE = "Sets the right eye to be purple with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_RIGHT_RED = "Sets the right eye to be red with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_RIGHT_RGB = "Sets the right eye to be the specified Red, Green, and Blue values.";  // untranslated
Blockly.Msg.WINK_EYE_RIGHT_SELECT = "Sets the right eye to be the specified color with max intensity.";  // untranslated
Blockly.Msg.WINK_EYE_RIGHT_WHITE = "Sets the right eye to be white with the specified intensity";  // untranslated
Blockly.Msg.WINK_EYE_RIGHT_YELLOW = "Sets the right eye to be yellow with the specified intensity";  // untranslated
Blockly.Msg.WINK_GENERAL_HELP_URL = "http://www.plumgeek.com/learn-to-code.html/";  // untranslated
Blockly.Msg.WINK_MOVEMENT_BACKWARD_FAST = "Moves the wink robot backward at a fast(90) speed.";  // untranslated
Blockly.Msg.WINK_MOVEMENT_BACKWARD_MODERATE = "Moves the wink robot backward at a moderate(50) speed.";  // untranslated
Blockly.Msg.WINK_MOVEMENT_BACKWARD_SLOW = "Moves the wink robot backward at a slow(30) speed.";  // untranslated
Blockly.Msg.WINK_MOVEMENT_FORWARD_FAST = "Moves the wink robot forward at a fast(90) speed.";  // untranslated
Blockly.Msg.WINK_MOVEMENT_FORWARD_MODERATE = "Moves the wink robot forward at a moderate(50) speed.";  // untranslated
Blockly.Msg.WINK_MOVEMENT_FORWARD_SLOW = "Moves the wink robot forward at a slow(30) speed.";  // untranslated
Blockly.Msg.WINK_MOVEMENT_ROTATION_LEFT = "Rotates the wink robot left by roughly the specified number of degrees.";  // untranslated
Blockly.Msg.WINK_MOVEMENT_ROTATION_RIGHT = "Rotates the wink robot right by roughly the specified number of degrees.";  // untranslated
Blockly.Msg.WITH = "with";  // untranslated
Blockly.Msg.XCOLON = "x:";  // untranslated
Blockly.Msg.YCOLON = "y:";  // untranslated
Blockly.Msg.ZERO_NAVIGATION_FIELD_1 = "reset navigation";  // untranslated
Blockly.Msg.ZERO_NAVIGATION_TOOLTIP = "";  // untranslated
Blockly.Msg.CONTROLS_DOWHILE_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;