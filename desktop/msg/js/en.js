// This file was automatically generated.  Do not modify.
'use strict';
goog.provide('Blockly.Msg.en');
goog.require('Blockly.Msg');
/** @export */ Blockly.Msg.ACCELERATION_FROM_ROTATION_FIELD_1 = "get forward acceleration from rotation";
/** @export */ Blockly.Msg.ACCELERATION_FROM_ROTATION_FIELD_2 = "at";
/** @export */ Blockly.Msg.ACCELERATION_FROM_ROTATION_FIELD_3 = "pixels/second^2";
/** @export */ Blockly.Msg.ACCELERATION_FROM_ROTATION_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.html#accelerationFromRotation";
/** @export */ Blockly.Msg.ACCELERATION_FROM_ROTATION_TOOLTIP = "Creates an (x, y) acceleration that goes forward from the given rotation. Returns it as a point.";
/** @export */ Blockly.Msg.ADDEMITTER_FIELD_1 = "add emitter";
/** @export */ Blockly.Msg.ADDEMITTER_FIELD_2 = "x";
/** @export */ Blockly.Msg.ADDEMITTER_FIELD_3 = "y";
/** @export */ Blockly.Msg.ADDEMITTER_FIELD_4 = "maxParticles";
/** @export */ Blockly.Msg.ADDEMITTER_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Particles.Arcade.Emitter.html";
/** @export */ Blockly.Msg.ADDEMITTER_TOOLTIP = "Create a particle emitter";
/** @export */ Blockly.Msg.ADDSPRITEWITHATLAS_FIELD_1 = "load atlas image";
/** @export */ Blockly.Msg.ADDSPRITEWITHATLAS_FIELD_2 = "tag";
/** @export */ Blockly.Msg.ADDSPRITEWITHATLAS_FIELD_3 = "spritesheet source";
/** @export */ Blockly.Msg.ADDSPRITEWITHATLAS_FIELD_4 = "texture atlas xml";
/** @export */ Blockly.Msg.ADDSPRITEWITHATLAS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Loader.html#atlasXML";
/** @export */ Blockly.Msg.ADDSPRITEWITHATLAS_TOOLTIP = "Loads a texture atlas into the game. These take more effort to set up, but can contain every animation you want for a single character. See the help for more info.";
/** @export */ Blockly.Msg.ADD_ANIMATION_FIELD_1 = "add animation to";
/** @export */ Blockly.Msg.ADD_ANIMATION_FIELD_2 = "tagged";
/** @export */ Blockly.Msg.ADD_ANIMATION_FIELD_3 = "with frames";
/** @export */ Blockly.Msg.ADD_ANIMATION_FIELD_4 = "displayed at";
/** @export */ Blockly.Msg.ADD_ANIMATION_FIELD_5 = "FPS";
/** @export */ Blockly.Msg.ADD_ANIMATION_FIELD_6 = "loop";
/** @export */ Blockly.Msg.ADD_ANIMATION_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#add";
/** @export */ Blockly.Msg.ADD_ANIMATION_NAME_TEXT_DEFAULT = "name";
/** @export */ Blockly.Msg.ADD_ANIMATION_TOOLTIP = "Add an animation to an object based on a list of frames";
/** @export */ Blockly.Msg.ADD_ANIMATION_VI_FIELD_1 = "add animation to";
/** @export */ Blockly.Msg.ADD_ANIMATION_VI_FIELD_2 = "tagged";
/** @export */ Blockly.Msg.ADD_ANIMATION_VI_FIELD_3 = "with frames";
/** @export */ Blockly.Msg.ADD_ANIMATION_VI_FIELD_4 = "displayed at";
/** @export */ Blockly.Msg.ADD_ANIMATION_VI_FIELD_5 = "FPS";
/** @export */ Blockly.Msg.ADD_ANIMATION_VI_FIELD_6 = "loop";
/** @export */ Blockly.Msg.ADD_ANIMATION_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#add";
/** @export */ Blockly.Msg.ADD_ANIMATION_VI_NAME_TEXT_DEFAULT = "name";
/** @export */ Blockly.Msg.ADD_ANIMATION_VI_TOOLTIP = "Add an animation to an object based on a list of frames";
/** @export */ Blockly.Msg.ADD_CHILD_AT_FIELD_1 = "add child";
/** @export */ Blockly.Msg.ADD_CHILD_AT_FIELD_2 = "to";
/** @export */ Blockly.Msg.ADD_CHILD_AT_FIELD_3 = "at index";
/** @export */ Blockly.Msg.ADD_CHILD_AT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#addChildAt";
/** @export */ Blockly.Msg.ADD_CHILD_AT_TOOLTIP = "Add a child to a sprite at a specific index so you can find it later. This will make them move together.";
/** @export */ Blockly.Msg.ADD_CHILD_AT_VI_FIELD_1 = "add child";
/** @export */ Blockly.Msg.ADD_CHILD_AT_VI_FIELD_2 = "to";
/** @export */ Blockly.Msg.ADD_CHILD_AT_VI_FIELD_3 = "at index";
/** @export */ Blockly.Msg.ADD_CHILD_AT_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#addChildAt";
/** @export */ Blockly.Msg.ADD_CHILD_AT_VI_TOOLTIP = "Add a child to a sprite at a specific index so you can find it later. This will make them move together.";
/** @export */ Blockly.Msg.ADD_CHILD_FIELD_1 = "add child object";
/** @export */ Blockly.Msg.ADD_CHILD_FIELD_2 = "to";
/** @export */ Blockly.Msg.ADD_CHILD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#addChild";
/** @export */ Blockly.Msg.ADD_CHILD_TOOLTIP = "Add a child to a sprite. This will make them move together.";
/** @export */ Blockly.Msg.ADD_CHILD_VI_FIELD_1 = "add child object";
/** @export */ Blockly.Msg.ADD_CHILD_VI_FIELD_2 = "to";
/** @export */ Blockly.Msg.ADD_CHILD_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#addChild";
/** @export */ Blockly.Msg.ADD_CHILD_VI_TOOLTIP = "Add a child to a sprite. This will make them move together.";
/** @export */ Blockly.Msg.ADD_COMMENT = "Add Comment";
/** @export */ Blockly.Msg.ADD_IMAGE_FIELD_1 = "add image to game at";
/** @export */ Blockly.Msg.ADD_IMAGE_FIELD_2 = "x";
/** @export */ Blockly.Msg.ADD_IMAGE_FIELD_3 = "y";
/** @export */ Blockly.Msg.ADD_IMAGE_FIELD_4 = "tagged";
/** @export */ Blockly.Msg.ADD_IMAGE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.GameObjectFactory.html#sprite";
/** @export */ Blockly.Msg.ADD_IMAGE_TOOLTIP = "Creates a sprite with the image specified in the tag. The tag needs to be set up with the 'create image' or 'create sprite sheet' blocks.";
/** @export */ Blockly.Msg.ADD_SOUND_FIELD_1 = "add sound";
/** @export */ Blockly.Msg.ADD_SOUND_FIELD_2 = "at volume";
/** @export */ Blockly.Msg.ADD_SOUND_FIELD_3 = "looping";
/** @export */ Blockly.Msg.ADD_SOUND_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.GameObjectFactory.html#audio";
/** @export */ Blockly.Msg.ADD_SOUND_TOOLTIP = "Add a Sound to the game";
/** @export */ Blockly.Msg.ADD_TEXT_FIELD_1 = "add text at";
/** @export */ Blockly.Msg.ADD_TEXT_FIELD_2 = "x";
/** @export */ Blockly.Msg.ADD_TEXT_FIELD_3 = "y";
/** @export */ Blockly.Msg.ADD_TEXT_FIELD_4 = "initial text";
/** @export */ Blockly.Msg.ADD_TEXT_FIELD_5 = "font size";
/** @export */ Blockly.Msg.ADD_TEXT_FIELD_6 = "font colour";
/** @export */ Blockly.Msg.ADD_TEXT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.GameObjectFactory.html#text";
/** @export */ Blockly.Msg.ADD_TEXT_TOOLTIP = "Add text to the screen at the specified location";
/** @export */ Blockly.Msg.ADD_TO_GROUP_FIELD_1 = "add";
/** @export */ Blockly.Msg.ADD_TO_GROUP_FIELD_2 = "to group";
/** @export */ Blockly.Msg.ADD_TO_GROUP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#add";
/** @export */ Blockly.Msg.ADD_TO_GROUP_TOOLTIP = "Adds an existing object to a group.";
/** @export */ Blockly.Msg.ADD_TO_WORLD_FIELD_1 = "add";
/** @export */ Blockly.Msg.ADD_TO_WORLD_FIELD_2 = "to the world";
/** @export */ Blockly.Msg.ADD_TO_WORLD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.World.html#add";
/** @export */ Blockly.Msg.ADD_TO_WORLD_TOOLTIP = "Adds an existing object to the world group. Necessary for making an object that has been previously removed from a  group visible again.";
/** @export */ Blockly.Msg.ALIGN_IN_FIELD_1 = "align";
/** @export */ Blockly.Msg.ALIGN_IN_FIELD_2 = "inside";
/** @export */ Blockly.Msg.ALIGN_IN_FIELD_3 = "at the";
/** @export */ Blockly.Msg.ALIGN_IN_FIELD_4 = "offset x pixels";
/** @export */ Blockly.Msg.ALIGN_IN_FIELD_5 = "offset y pixels";
/** @export */ Blockly.Msg.ALIGN_IN_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#alignIn";
/** @export */ Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_1 = "top left";
/** @export */ Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_2 = "top center";
/** @export */ Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_3 = "top right";
/** @export */ Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_4 = "left center";
/** @export */ Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_5 = "center";
/** @export */ Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_6 = "right center";
/** @export */ Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_7 = "bottom left";
/** @export */ Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_8 = "bottom center";
/** @export */ Blockly.Msg.ALIGN_IN_POSITION_DROPDOWN_9 = "bottom right";
/** @export */ Blockly.Msg.ALIGN_IN_TOOLTIP = "Aligns this Game Object within another Game Object, or Rectangle, to one of 9 possible positions.";
/** @export */ Blockly.Msg.ALIGN_TO_FIELD_1 = "align";
/** @export */ Blockly.Msg.ALIGN_TO_FIELD_2 = "to";
/** @export */ Blockly.Msg.ALIGN_TO_FIELD_3 = "at the";
/** @export */ Blockly.Msg.ALIGN_TO_FIELD_4 = "offset x pixels";
/** @export */ Blockly.Msg.ALIGN_TO_FIELD_5 = "offset y pixels";
/** @export */ Blockly.Msg.ALIGN_TO_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#alignTo";
/** @export */ Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_1 = "top left";
/** @export */ Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_10 = "bottom left";
/** @export */ Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_11 = "bottom center";
/** @export */ Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_12 = "bottom right";
/** @export */ Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_2 = "top center";
/** @export */ Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_3 = "top right";
/** @export */ Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_4 = "left top";
/** @export */ Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_5 = "left center";
/** @export */ Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_6 = "left bottom";
/** @export */ Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_7 = "right top";
/** @export */ Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_8 = "right center";
/** @export */ Blockly.Msg.ALIGN_TO_POSITION_DROPDOWN_9 = "right bottom";
/** @export */ Blockly.Msg.ALIGN_TO_TOOLTIP = "Aligns this Game Object to the side of another Game Object, or Rectangle, in one of 12 possible positions.";
/** @export */ Blockly.Msg.ANIMATION_DESTROY_FIELD_1 = "destroy all animations in animation manager of ";
/** @export */ Blockly.Msg.ANIMATION_DESTROY_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#validateFrames";
/** @export */ Blockly.Msg.ANIMATION_DESTROY_TOOLTIP = "Destroy all animations on the object.";
/** @export */ Blockly.Msg.ANIMATION_DESTROY_VI_FIELD_1 = "destroy all animations in animation manager of ";
/** @export */ Blockly.Msg.ANIMATION_DESTROY_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#destroy";
/** @export */ Blockly.Msg.ANIMATION_DESTROY_VI_TOOLTIP = "Destroy all animations on the object.";
/** @export */ Blockly.Msg.ANIMATION_GET_ANIMATION_FIELD_1 = "on gameobject";
/** @export */ Blockly.Msg.ANIMATION_GET_ANIMATION_FIELD_2 = "get animation by name";
/** @export */ Blockly.Msg.ANIMATION_GET_ANIMATION_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#getAnimation";
/** @export */ Blockly.Msg.ANIMATION_GET_ANIMATION_NAME_TEXT_DEFAULT = "default";
/** @export */ Blockly.Msg.ANIMATION_GET_ANIMATION_TOOLTIP = "Returns an animation that was previously added by name.";
/** @export */ Blockly.Msg.ANIMATION_NEXT_FIELD_1 = "increment current animation by";
/** @export */ Blockly.Msg.ANIMATION_NEXT_FIELD_2 = "on ";
/** @export */ Blockly.Msg.ANIMATION_NEXT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#next";
/** @export */ Blockly.Msg.ANIMATION_NEXT_TOOLTIP = "Increment the current animation by a given amount of frames.";
/** @export */ Blockly.Msg.ANIMATION_NEXT_VI_FIELD_1 = "increment current animation by";
/** @export */ Blockly.Msg.ANIMATION_NEXT_VI_FIELD_2 = "frames";
/** @export */ Blockly.Msg.ANIMATION_NEXT_VI_FIELD_3 = "for";
/** @export */ Blockly.Msg.ANIMATION_NEXT_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#next";
/** @export */ Blockly.Msg.ANIMATION_NEXT_VI_TOOLTIP = "Increment the current animation by a given amount of frames.";
/** @export */ Blockly.Msg.ANIMATION_PREVIOUS_FIELD_1 = "decrement current animation by";
/** @export */ Blockly.Msg.ANIMATION_PREVIOUS_FIELD_2 = "on ";
/** @export */ Blockly.Msg.ANIMATION_PREVIOUS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#previous";
/** @export */ Blockly.Msg.ANIMATION_PREVIOUS_TOOLTIP = "Decrement the current animation by a given amount of frames.";
/** @export */ Blockly.Msg.ANIMATION_PREVIOUS_VI_FIELD_1 = "decrement current animation by";
/** @export */ Blockly.Msg.ANIMATION_PREVIOUS_VI_FIELD_2 = "frames";
/** @export */ Blockly.Msg.ANIMATION_PREVIOUS_VI_FIELD_3 = "for";
/** @export */ Blockly.Msg.ANIMATION_PREVIOUS_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#previous";
/** @export */ Blockly.Msg.ANIMATION_PREVIOUS_VI_TOOLTIP = "Decrement the current animation by a given amount of frames.";
/** @export */ Blockly.Msg.ANIMATION_UPDATE_FIELD_1 = "frame update of ";
/** @export */ Blockly.Msg.ANIMATION_UPDATE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#update";
/** @export */ Blockly.Msg.ANIMATION_UPDATE_TOOLTIP = "Internal method do not call";
/** @export */ Blockly.Msg.BRING_TO_TOP_FIELD_1 = "bring";
/** @export */ Blockly.Msg.BRING_TO_TOP_FIELD_2 = "to the front";
/** @export */ Blockly.Msg.BRING_TO_TOP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#bringToTop";
/** @export */ Blockly.Msg.BRING_TO_TOP_TOOLTIP = "Brings this sprite/image to the front of the display order. In case of overlapping sprites, this one will draw on top of everything else.";
/** @export */ Blockly.Msg.CALL_FUNCTION_ON_GROUP_FIELD_1 = "Call function";
/** @export */ Blockly.Msg.CALL_FUNCTION_ON_GROUP_FIELD_2 = "on all children in group";
/** @export */ Blockly.Msg.CALL_FUNCTION_ON_GROUP_FUNCTION_TEXT_DEFAULT = "functionName";
/** @export */ Blockly.Msg.CALL_FUNCTION_ON_GROUP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#forEachAlive";
/** @export */ Blockly.Msg.CALL_FUNCTION_ON_GROUP_TOOLTIP = "Calls the specified function once for each group member, giving that child as the input.";
/** @export */ Blockly.Msg.CAMERA_FADE_FIELD_1 = "fade screen to";
/** @export */ Blockly.Msg.CAMERA_FADE_FIELD_2 = "over";
/** @export */ Blockly.Msg.CAMERA_FADE_FIELD_3 = "milliseconds";
/** @export */ Blockly.Msg.CAMERA_FADE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Camera.html#fade";
/** @export */ Blockly.Msg.CAMERA_FADE_TOOLTIP = "Fades the screen to the specified colour over time. Ends with the screen completely obscured.";
/** @export */ Blockly.Msg.CAMERA_FLASH_FIELD_1 = "flash screen to";
/** @export */ Blockly.Msg.CAMERA_FLASH_FIELD_2 = "then fade in over";
/** @export */ Blockly.Msg.CAMERA_FLASH_FIELD_3 = "milliseconds";
/** @export */ Blockly.Msg.CAMERA_FLASH_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Camera.html#flash";
/** @export */ Blockly.Msg.CAMERA_FLASH_TOOLTIP = "Immediately covers the camera with the specified colour. Then fades back in over a given time. Useful for fading back in after fading out, or as a big hit effect.";
/** @export */ Blockly.Msg.CAMERA_FOCUS_ON_FIELD_1 = "focus camera on";
/** @export */ Blockly.Msg.CAMERA_FOCUS_ON_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Camera.html#focusOn";
/** @export */ Blockly.Msg.CAMERA_FOCUS_ON_TOOLTIP = "Immediately centers the camera on the specified game object.";
/** @export */ Blockly.Msg.CAMERA_FOCUS_ON_XY_FIELD_1 = "focus camera on position at";
/** @export */ Blockly.Msg.CAMERA_FOCUS_ON_XY_FIELD_2 = "x";
/** @export */ Blockly.Msg.CAMERA_FOCUS_ON_XY_FIELD_3 = "y";
/** @export */ Blockly.Msg.CAMERA_FOCUS_ON_XY_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Camera.html#focusOnXY";
/** @export */ Blockly.Msg.CAMERA_FOCUS_ON_XY_TOOLTIP = "Immediately centers the camera on a given position.";
/** @export */ Blockly.Msg.CAMERA_FOLLOW_FIELD_1 = "make camera follow";
/** @export */ Blockly.Msg.CAMERA_FOLLOW_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Camera.html#follow";
/** @export */ Blockly.Msg.CAMERA_FOLLOW_TOOLTIP = "Make the camera follow the specified game object";
/** @export */ Blockly.Msg.CAMERA_FOLLOW_VI_FIELD_1 = "make camera follow";
/** @export */ Blockly.Msg.CAMERA_FOLLOW_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Camera.html#follow";
/** @export */ Blockly.Msg.CAMERA_FOLLOW_VI_STYLED_FIELD_1 = "make camera follow";
/** @export */ Blockly.Msg.CAMERA_FOLLOW_VI_STYLED_FIELD_2 = "with style";
/** @export */ Blockly.Msg.CAMERA_FOLLOW_VI_STYLED_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Camera.html#follow";
/** @export */ Blockly.Msg.CAMERA_FOLLOW_VI_STYLED_STYLE_DROPDOWN_1 = "lockon";
/** @export */ Blockly.Msg.CAMERA_FOLLOW_VI_STYLED_STYLE_DROPDOWN_2 = "platformer";
/** @export */ Blockly.Msg.CAMERA_FOLLOW_VI_STYLED_STYLE_DROPDOWN_3 = "topdown";
/** @export */ Blockly.Msg.CAMERA_FOLLOW_VI_STYLED_STYLE_DROPDOWN_4 = "topdown tight";
/** @export */ Blockly.Msg.CAMERA_FOLLOW_VI_STYLED_TOOLTIP = "Make the camera follow the specified game object";
/** @export */ Blockly.Msg.CAMERA_FOLLOW_VI_TOOLTIP = "Make the camera follow the specified game object";
/** @export */ Blockly.Msg.CAMERA_RESET_FIELD_1 = "reset camera";
/** @export */ Blockly.Msg.CAMERA_RESET_FX_FIELD_1 = "reset camera effects";
/** @export */ Blockly.Msg.CAMERA_RESET_FX_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Camera.html#resetFX";
/** @export */ Blockly.Msg.CAMERA_RESET_FX_TOOLTIP = "Removes visual effects from the camera such as fading in/out. Does not affect the position, follow target, or screen shake.";
/** @export */ Blockly.Msg.CAMERA_RESET_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Camera.html#reset";
/** @export */ Blockly.Msg.CAMERA_RESET_TOOLTIP = "Completely resets the camera. It goes back to (0, 0), stops following anything, and removes all effects such as shake or flash.";
/** @export */ Blockly.Msg.CAMERA_SET_BOUNDS_TO_WORLD_FIELD_1 = "set camera bounds to world bounds";
/** @export */ Blockly.Msg.CAMERA_SET_BOUNDS_TO_WORLD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Camera.html#setBoundsToWorld";
/** @export */ Blockly.Msg.CAMERA_SET_BOUNDS_TO_WORLD_TOOLTIP = "The camera bounds are not the size of what it shows, but the space it can move around in. This sets those bounds so that the camera can view the entire world, but nothing more.";
/** @export */ Blockly.Msg.CAMERA_SET_POSITION_FIELD_1 = "set camera position to";
/** @export */ Blockly.Msg.CAMERA_SET_POSITION_FIELD_2 = "x";
/** @export */ Blockly.Msg.CAMERA_SET_POSITION_FIELD_3 = "y";
/** @export */ Blockly.Msg.CAMERA_SET_POSITION_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Camera.html#setPosition";
/** @export */ Blockly.Msg.CAMERA_SET_POSITION_TOOLTIP = "Jumps the camera immediately to the given position. Note that the camera's position is its upper left corner, not its center.";
/** @export */ Blockly.Msg.CAMERA_SET_SIZE_FIELD_1 = "set camera size";
/** @export */ Blockly.Msg.CAMERA_SET_SIZE_FIELD_2 = "width";
/** @export */ Blockly.Msg.CAMERA_SET_SIZE_FIELD_3 = "height";
/** @export */ Blockly.Msg.CAMERA_SET_SIZE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Camera.html#setSize";
/** @export */ Blockly.Msg.CAMERA_SET_SIZE_TOOLTIP = "Sets the size of the camera's view window.";
/** @export */ Blockly.Msg.CAMERA_SHAKE_DIRECTION_DROPDOWN_1 = "horizontal and vertical";
/** @export */ Blockly.Msg.CAMERA_SHAKE_DIRECTION_DROPDOWN_2 = "vertically";
/** @export */ Blockly.Msg.CAMERA_SHAKE_DIRECTION_DROPDOWN_3 = "horizontally";
/** @export */ Blockly.Msg.CAMERA_SHAKE_FIELD_1 = "shake the camera";
/** @export */ Blockly.Msg.CAMERA_SHAKE_FIELD_2 = "% intensity";
/** @export */ Blockly.Msg.CAMERA_SHAKE_FIELD_3 = "for";
/** @export */ Blockly.Msg.CAMERA_SHAKE_FIELD_4 = "milliseconds";
/** @export */ Blockly.Msg.CAMERA_SHAKE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Camera.html#shake";
/** @export */ Blockly.Msg.CAMERA_SHAKE_TOOLTIP = "Screen shake. Great for impact effects, or just a little extra umph, but don't go overboard. The intensity goes from 0 to 1. % of bounds it can move";
/** @export */ Blockly.Msg.CAMERA_UNFOLLOW_FIELD_1 = "stop camera follow";
/** @export */ Blockly.Msg.CAMERA_UNFOLLOW_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Camera.html#unfollow";
/** @export */ Blockly.Msg.CAMERA_UNFOLLOW_TOOLTIP = "Makes the camera stop following anything. Equivalent to making the camera follow null.";
/** @export */ Blockly.Msg.CANNOT_DELETE_VARIABLE_PROCEDURE = "Can't delete the variable '%1' because it is part of the definition of the procedure '%2'";
/** @export */ Blockly.Msg.CENTER_AND_STRETCH_FIELD_1 = "center and stretch phaser";
/** @export */ Blockly.Msg.CENTER_AND_STRETCH_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.ScaleManager.html#scaleMode";
/** @export */ Blockly.Msg.CENTER_AND_STRETCH_TOOLTIP = "Tells Phaser to center and stretch the game view to fit its window.";
/** @export */ Blockly.Msg.CHANGE_VALUE_TITLE = "Change value:";
/** @export */ Blockly.Msg.CHECK_OVERLAP_FIELD_1 = "Check Overlap Between";
/** @export */ Blockly.Msg.CHECK_OVERLAP_FIELD_2 = "and";
/** @export */ Blockly.Msg.CHECK_OVERLAP_FIELD_3 = "calling";
/** @export */ Blockly.Msg.CHECK_OVERLAP_FIELD_4 = "if overlapping";
/** @export */ Blockly.Msg.CHECK_OVERLAP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.html#overlap";
/** @export */ Blockly.Msg.CHECK_OVERLAP_NAME_TEXT_DEFAULT = "functionName";
/** @export */ Blockly.Msg.CHECK_OVERLAP_TOOLTIP = "Checks for an overlap between objectA and objectB.";
/** @export */ Blockly.Msg.CHECK_OVERLAP_VI_FIELD_1 = "check overlap between";
/** @export */ Blockly.Msg.CHECK_OVERLAP_VI_FIELD_2 = "and";
/** @export */ Blockly.Msg.CHECK_OVERLAP_VI_FIELD_3 = "calling";
/** @export */ Blockly.Msg.CHECK_OVERLAP_VI_FIELD_4 = "if overlapping";
/** @export */ Blockly.Msg.CHECK_OVERLAP_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.html#overlap";
/** @export */ Blockly.Msg.CHECK_OVERLAP_VI_NAME_TEXT_DEFAULT = "functionName";
/** @export */ Blockly.Msg.CHECK_OVERLAP_VI_TOOLTIP = "Checks for an overlap between objectA and objectB.";
/** @export */ Blockly.Msg.CHECK_WORLD_BOUNDS_FIELD_1 = "make";
/** @export */ Blockly.Msg.CHECK_WORLD_BOUNDS_FIELD_2 = "check to see if it's inside the world?";
/** @export */ Blockly.Msg.CHECK_WORLD_BOUNDS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#checkWorldBounds";
/** @export */ Blockly.Msg.CHECK_WORLD_BOUNDS_TOOLTIP = "This object will start checking if it's inside the world every frame. This takes time, so it's disabled by default.";
/** @export */ Blockly.Msg.CLEAN_UP = "Clean up Blocks";
/** @export */ Blockly.Msg.CLEAR_CROPPING_FIELD_1 = "stop cropping";
/** @export */ Blockly.Msg.CLEAR_CROPPING_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#crop";
/** @export */ Blockly.Msg.CLEAR_CROPPING_TOOLTIP = "Removes any cropping from a sprite.";
/** @export */ Blockly.Msg.CLEAR_SCALE_MIN_MAX_FIELD_1 = "clear scale constraints on";
/** @export */ Blockly.Msg.CLEAR_SCALE_MIN_MAX_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#setScaleMinMax";
/** @export */ Blockly.Msg.CLEAR_SCALE_MIN_MAX_TOOLTIP = "If scaling constraints were set on a sprite, this removes them.";
/** @export */ Blockly.Msg.COLLAPSE_ALL = "Collapse Blocks";
/** @export */ Blockly.Msg.COLLAPSE_BLOCK = "Collapse Block";
/** @export */ Blockly.Msg.COLLIDE_FIELD_1 = "Collide";
/** @export */ Blockly.Msg.COLLIDE_FIELD_2 = "with";
/** @export */ Blockly.Msg.COLLIDE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.html#collide";
/** @export */ Blockly.Msg.COLLIDE_TOOLTIP = "Collide the first group/object with the second group/object";
/** @export */ Blockly.Msg.COLLIDE_VI_FIELD_1 = "collide";
/** @export */ Blockly.Msg.COLLIDE_VI_FIELD_2 = "with";
/** @export */ Blockly.Msg.COLLIDE_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.html#collide";
/** @export */ Blockly.Msg.COLLIDE_VI_TOOLTIP = "Collide the first group/object with the second group/object";
/** @export */ Blockly.Msg.COLLIDE_WITH_ARROW_FUNCTION_FIELD_1 = "collide";
/** @export */ Blockly.Msg.COLLIDE_WITH_ARROW_FUNCTION_FIELD_2 = "with";
/** @export */ Blockly.Msg.COLLIDE_WITH_ARROW_FUNCTION_FIELD_3 = "if collided do";
/** @export */ Blockly.Msg.COLLIDE_WITH_ARROW_FUNCTION_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.html#collide";
/** @export */ Blockly.Msg.COLLIDE_WITH_ARROW_FUNCTION_TOOLTIP = "Collide two objects, if they are collide do the statements in the block";
/** @export */ Blockly.Msg.COLLIDE_WITH_WORLD_BOUNDS_FIELD_1 = "Collide";
/** @export */ Blockly.Msg.COLLIDE_WITH_WORLD_BOUNDS_FIELD_2 = "with world bounds";
/** @export */ Blockly.Msg.COLLIDE_WITH_WORLD_BOUNDS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Ninja.Body.html#collideWorldBounds";
/** @export */ Blockly.Msg.COLLIDE_WITH_WORLD_BOUNDS_TOOLTIP = "Make this object collide with the world bounds.";
/** @export */ Blockly.Msg.COLLIDE_WITH_WORLD_BOUNDS_VI_FIELD_1 = "make";
/** @export */ Blockly.Msg.COLLIDE_WITH_WORLD_BOUNDS_VI_FIELD_2 = "collide with world bounds";
/** @export */ Blockly.Msg.COLLIDE_WITH_WORLD_BOUNDS_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Ninja.Body.html#collideWorldBounds";
/** @export */ Blockly.Msg.COLLIDE_WITH_WORLD_BOUNDS_VI_TOOLTIP = "Make this object collide with the world bounds.";
/** @export */ Blockly.Msg.COLOUR_BLEND_COLOUR1 = "colour 1";
/** @export */ Blockly.Msg.COLOUR_BLEND_COLOUR2 = "colour 2";
/** @export */ Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
/** @export */ Blockly.Msg.COLOUR_BLEND_RATIO = "ratio";
/** @export */ Blockly.Msg.COLOUR_BLEND_TITLE = "blend";
/** @export */ Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Blends two colours together with a given ratio (0.0 - 1.0).";
/** @export */ Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
/** @export */ Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Choose a colour from the palette.";
/** @export */ Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";
/** @export */ Blockly.Msg.COLOUR_RANDOM_TITLE = "random colour";
/** @export */ Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Choose a colour at random.";
/** @export */ Blockly.Msg.COLOUR_RGB_BLUE = "blue";
/** @export */ Blockly.Msg.COLOUR_RGB_GREEN = "green";
/** @export */ Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
/** @export */ Blockly.Msg.COLOUR_RGB_RED = "red";
/** @export */ Blockly.Msg.COLOUR_RGB_TITLE = "colour with";
/** @export */ Blockly.Msg.COLOUR_RGB_TOOLTIP = "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.";
/** @export */ Blockly.Msg.CONTAINS_FIELD_1 = "is";
/** @export */ Blockly.Msg.CONTAINS_FIELD_2 = "a child of";
/** @export */ Blockly.Msg.CONTAINS_FIELD_3 = "?";
/** @export */ Blockly.Msg.CONTAINS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#contains";
/** @export */ Blockly.Msg.CONTAINS_TOOLTIP = "Checks to see if one sprite is the child of another.";
/** @export */ Blockly.Msg.CONTAINS_VI_FIELD_1 = "is";
/** @export */ Blockly.Msg.CONTAINS_VI_FIELD_2 = "a child of";
/** @export */ Blockly.Msg.CONTAINS_VI_FIELD_3 = "?";
/** @export */ Blockly.Msg.CONTAINS_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#contains";
/** @export */ Blockly.Msg.CONTAINS_VI_TOOLTIP = "Checks to see if one sprite is the child of another.";
/** @export */ Blockly.Msg.CONTROLS_DOWHILE_HELPURL = "https://en.wikipedia.org/wiki/Do_while_loop";
/** @export */ Blockly.Msg.CONTROLS_DOWHILE_OPERATOR_UNTIL = "repeat until";
/** @export */ Blockly.Msg.CONTROLS_DOWHILE_OPERATOR_WHILE = "repeat while";
/** @export */ Blockly.Msg.CONTROLS_DOWHILE_TOOLTIP_UNTIL = "Do some statements while a value is false. Always does the statements at least once.";
/** @export */ Blockly.Msg.CONTROLS_DOWHILE_TOOLTIP_WHILE = "Do some statements while a value is true. Always does the statements at least once.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "break out of loop";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continue with next iteration of loop";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Break out of the containing loop.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Skip the rest of this loop, and continue with the next iteration.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Warning: This block may only be used within a loop.";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_TITLE = "for each item %1 in list %2";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "For each item in a list, set the variable '%1' to the item, and then do some statements.";
/** @export */ Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";
/** @export */ Blockly.Msg.CONTROLS_FOR_TITLE = "count with %1 from %2 to %3 by %4";
/** @export */ Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.";
/** @export */ Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Add a condition to the if block.";
/** @export */ Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Add a final, catch-all condition to the if block.";
/** @export */ Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";
/** @export */ Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Add, remove, or reorder sections to reconfigure this if block.";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_ELSE = "else";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "else if";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_IF = "if";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "If a value is true, then do some statements.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "do";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_TITLE = "repeat %1 times";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Do some statements several times.";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repeat until";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repeat while";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "While a value is false, then do some statements.";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "While a value is true, then do some statements.";
/** @export */ Blockly.Msg.CREATE_BITMAPFONT_FIELD_1 = "Create Font";
/** @export */ Blockly.Msg.CREATE_BITMAPFONT_FIELD_2 = "Tag";
/** @export */ Blockly.Msg.CREATE_BITMAPFONT_FIELD_3 = "Source";
/** @export */ Blockly.Msg.CREATE_BITMAPFONT_FIELD_4 = "XML";
/** @export */ Blockly.Msg.CREATE_BITMAPFONT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Loader.html#bitmapFont";
/** @export */ Blockly.Msg.CREATE_BITMAPFONT_TOOLTIP = "Loads a font into the game. These don't work like normal fonts. See the help for more info.";
/** @export */ Blockly.Msg.CREATE_CURSOR_KEYS_FIELD_1 = "Create Cursor Keys";
/** @export */ Blockly.Msg.CREATE_CURSOR_KEYS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Keyboard.html#createCursorKeys";
/** @export */ Blockly.Msg.CREATE_CURSOR_KEYS_TOOLTIP = "Create a cursor allowing access to the UP/DOWN/LEFT/RIGHT keys";
/** @export */ Blockly.Msg.CREATE_GRAPHICS_OBJECT_FIELD_1 = "create graphics object with offsets";
/** @export */ Blockly.Msg.CREATE_GRAPHICS_OBJECT_FIELD_2 = "x:";
/** @export */ Blockly.Msg.CREATE_GRAPHICS_OBJECT_FIELD_3 = "y:";
/** @export */ Blockly.Msg.CREATE_GRAPHICS_OBJECT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Graphics.html";
/** @export */ Blockly.Msg.CREATE_GRAPHICS_OBJECT_TOOLTIP = "Returns an object that can draw shapes in the world.";
/** @export */ Blockly.Msg.CREATE_GROUP_FIELD_1 = "create group";
/** @export */ Blockly.Msg.CREATE_GROUP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.GameObjectFactory.html#group";
/** @export */ Blockly.Msg.CREATE_GROUP_TOOLTIP = "Create a new group of display objects";
/** @export */ Blockly.Msg.CREATE_IMAGE_FIELD_1 = "create image";
/** @export */ Blockly.Msg.CREATE_IMAGE_FIELD_2 = "tag";
/** @export */ Blockly.Msg.CREATE_IMAGE_FIELD_3 = "source";
/** @export */ Blockly.Msg.CREATE_IMAGE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Loader.html#image";
/** @export */ Blockly.Msg.CREATE_IMAGE_TOOLTIP = "Loads an image into the game so it can be used.";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_FIELD_1 = "create object at";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_FIELD_2 = "x";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_FIELD_3 = "y";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_FIELD_4 = "from tag";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_FIELD_5 = "in the";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_FIELD_6 = "group";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#create";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_TAG_TEXT_DEFAULT = "default";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_TOOLTIP = "Create a new sprite in the group";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_VI_FIELD_1 = "create object at";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_VI_FIELD_2 = "x";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_VI_FIELD_3 = "y";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_VI_FIELD_4 = "from tag";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_VI_FIELD_5 = "in group";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#create";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_VI_TOOLTIP = "Create a new sprite in the group";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_FIELD_1 = "create object at";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_FIELD_2 = "x";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_FIELD_3 = "y";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_FIELD_4 = "from tag";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_FIELD_5 = "in the";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_FIELD_6 = "group";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_FIELD_7 = "displaying frame #";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#create";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_TAG_TEXT_DEFAULT = "default";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_TOOLTIP = "Creates a sprite in the new group using the specified frame from a sprite sheet or texture atlas";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_VI_FIELD_1 = "create object at";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_VI_FIELD_2 = "x";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_VI_FIELD_3 = "y";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_VI_FIELD_4 = "from tag";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_VI_FIELD_5 = "in group";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_VI_FIELD_6 = "displaying frame";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#create";
/** @export */ Blockly.Msg.CREATE_OBJECT_IN_GROUP_WITH_FRAME_VI_TOOLTIP = "Creates a sprite in the new group using the specified frame from a sprite sheet or texture atlas";
/** @export */ Blockly.Msg.CREATE_POINT_FIELD_1 = "Create Point";
/** @export */ Blockly.Msg.CREATE_POINT_FIELD_2 = "X";
/** @export */ Blockly.Msg.CREATE_POINT_FIELD_3 = "Y";
/** @export */ Blockly.Msg.CREATE_POINT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Point.html";
/** @export */ Blockly.Msg.CREATE_POINT_TOOLTIP = "Makes a point type. This is a combination of an x and y value which is used to represent either a position, or a combination of width and height.";
/** @export */ Blockly.Msg.CREATE_SPRITE_SHEET_FIELD_1 = "create sprite sheet";
/** @export */ Blockly.Msg.CREATE_SPRITE_SHEET_FIELD_2 = "tag";
/** @export */ Blockly.Msg.CREATE_SPRITE_SHEET_FIELD_3 = "source";
/** @export */ Blockly.Msg.CREATE_SPRITE_SHEET_FIELD_4 = "frame width";
/** @export */ Blockly.Msg.CREATE_SPRITE_SHEET_FIELD_5 = "pixels";
/** @export */ Blockly.Msg.CREATE_SPRITE_SHEET_FIELD_6 = "frame height";
/** @export */ Blockly.Msg.CREATE_SPRITE_SHEET_FIELD_7 = "pixels";
/** @export */ Blockly.Msg.CREATE_SPRITE_SHEET_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Loader.html#spritesheet";
/** @export */ Blockly.Msg.CREATE_SPRITE_SHEET_TOOLTIP = "Loads a sprite sheet, which is a collection of animation frames in a single image. See the help for more info.";
/** @export */ Blockly.Msg.CROP_FIELD_1 = "crop";
/** @export */ Blockly.Msg.CROP_FIELD_2 = "to";
/** @export */ Blockly.Msg.CROP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#crop";
/** @export */ Blockly.Msg.CROP_TOOLTIP = "crop a sprite to an area defined by a rectangle or other object";
/** @export */ Blockly.Msg.DEBUG_BODY_FIELD_1 = "debug body";
/** @export */ Blockly.Msg.DEBUG_BODY_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.Body.html";
/** @export */ Blockly.Msg.DEBUG_BODY_TOOLTIP = "Set the value of the body point field";
/** @export */ Blockly.Msg.DEBUG_SPRITE_FIELD_1 = "write debug for sprite";
/** @export */ Blockly.Msg.DEBUG_SPRITE_FIELD_2 = "at x";
/** @export */ Blockly.Msg.DEBUG_SPRITE_FIELD_3 = "y";
/** @export */ Blockly.Msg.DEBUG_SPRITE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Utils.Debug.html#spriteInfo";
/** @export */ Blockly.Msg.DEBUG_SPRITE_TOOLTIP = "Draws various information useful for debugging about the specified sprite at the given world coordinates.";
/** @export */ Blockly.Msg.DELETE_ALL_BLOCKS = "Delete all %1 blocks?";
/** @export */ Blockly.Msg.DELETE_BLOCK = "Delete Block";
/** @export */ Blockly.Msg.DELETE_VARIABLE = "Delete the '%1' variable";
/** @export */ Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = "Delete %1 uses of the '%2' variable?";
/** @export */ Blockly.Msg.DELETE_X_BLOCKS = "Delete %1 Blocks";
/** @export */ Blockly.Msg.DESTROY_GROUP_FIELD_1 = "destroy group";
/** @export */ Blockly.Msg.DESTROY_GROUP_FIELD_2 = "destroy members too";
/** @export */ Blockly.Msg.DESTROY_GROUP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#destroy";
/** @export */ Blockly.Msg.DESTROY_GROUP_TOOLTIP = "Destroys a group. Can either leave the members where they are, or destroy them too.";
/** @export */ Blockly.Msg.DESTROY_OBJECT_FIELD_1 = "destroy";
/** @export */ Blockly.Msg.DESTROY_OBJECT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Component.Destroy.html";
/** @export */ Blockly.Msg.DESTROY_OBJECT_TOOLTIP = "Will remove the object from the game and memory, after which it can no longer be accessed.";
/** @export */ Blockly.Msg.DESTROY_SPRITE_FIELD_1 = "destroy";
/** @export */ Blockly.Msg.DESTROY_SPRITE_FIELD_2 = "children too?";
/** @export */ Blockly.Msg.DESTROY_SPRITE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#destroy";
/** @export */ Blockly.Msg.DESTROY_SPRITE_TOOLTIP = "Deletes a sprite from the game, with an option to delete its children too.";
/** @export */ Blockly.Msg.DISABLE_BLOCK = "Disable Block";
/** @export */ Blockly.Msg.DISABLE_STEP_FIELD_1 = "disable stepping";
/** @export */ Blockly.Msg.DISABLE_STEP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Game.html#disableStep";
/** @export */ Blockly.Msg.DISABLE_STEP_TOOLTIP = "Disables manually stepping into the next game loop. This is the default behavior.";
/** @export */ Blockly.Msg.DRAWCIRCLE_FIELD_1 = "draw circle";
/** @export */ Blockly.Msg.DRAWCIRCLE_FIELD_2 = "x";
/** @export */ Blockly.Msg.DRAWCIRCLE_FIELD_3 = "x";
/** @export */ Blockly.Msg.DRAWCIRCLE_FIELD_4 = "with diameter";
/** @export */ Blockly.Msg.DRAWCIRCLE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Graphics.html#drawCircle";
/** @export */ Blockly.Msg.DRAWCIRCLE_TOOLTIP = "Draws a circle at a given position in the world. Doesn't work on its own. Put it inside the 'fill shapes with' block.";
/** @export */ Blockly.Msg.DRAW_RECTANGLE_FIELD_1 = "draw rectangle at position";
/** @export */ Blockly.Msg.DRAW_RECTANGLE_FIELD_2 = "x:";
/** @export */ Blockly.Msg.DRAW_RECTANGLE_FIELD_3 = "y:";
/** @export */ Blockly.Msg.DRAW_RECTANGLE_FIELD_4 = "with";
/** @export */ Blockly.Msg.DRAW_RECTANGLE_FIELD_5 = "width:";
/** @export */ Blockly.Msg.DRAW_RECTANGLE_FIELD_6 = "height:";
/** @export */ Blockly.Msg.DRAW_RECTANGLE_FIELD_7 = "using";
/** @export */ Blockly.Msg.DRAW_RECTANGLE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Graphics.html#drawRect";
/** @export */ Blockly.Msg.DRAW_RECTANGLE_TOOLTIP = "Draws a rectangle at a given position in the world. Doesn't work on its own. Put it inside the 'fill shapes with' block.";
/** @export */ Blockly.Msg.DRAW_SHAPES_WITH_COLOUR_FIELD_1 = "fill shapes with ";
/** @export */ Blockly.Msg.DRAW_SHAPES_WITH_COLOUR_FIELD_2 = "colour";
/** @export */ Blockly.Msg.DRAW_SHAPES_WITH_COLOUR_FIELD_3 = "using";
/** @export */ Blockly.Msg.DRAW_SHAPES_WITH_COLOUR_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Graphics.html#beginFill";
/** @export */ Blockly.Msg.DRAW_SHAPES_WITH_COLOUR_TOOLTIP = "Start drawing shapes in the world using a given graphics object. Use the shape drawing blocks inside this one.";
/** @export */ Blockly.Msg.DUPLICATE_BLOCK = "Duplicate";
/** @export */ Blockly.Msg.EMITTERS_MAKE_PARTICLES_FIELD_1 = "on emitter";
/** @export */ Blockly.Msg.EMITTERS_MAKE_PARTICLES_FIELD_2 = "make particles from";
/** @export */ Blockly.Msg.EMITTERS_MAKE_PARTICLES_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Particles.Arcade.Emitter.html#makeParticles";
/** @export */ Blockly.Msg.EMITTERS_MAKE_PARTICLES_TAG_TEXT_DEFAULT = "image tag";
/** @export */ Blockly.Msg.EMITTERS_MAKE_PARTICLES_TOOLTIP = "Generate a new set of particles for this emitter";
/** @export */ Blockly.Msg.EMITTERS_SET_ALPHA_FIELD_1 = "on emitter,";
/** @export */ Blockly.Msg.EMITTERS_SET_ALPHA_FIELD_2 = "set Alpha:";
/** @export */ Blockly.Msg.EMITTERS_SET_ALPHA_FIELD_3 = "min";
/** @export */ Blockly.Msg.EMITTERS_SET_ALPHA_FIELD_4 = "max";
/** @export */ Blockly.Msg.EMITTERS_SET_ALPHA_FIELD_5 = "rate";
/** @export */ Blockly.Msg.EMITTERS_SET_ALPHA_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Particles.Arcade.Emitter.html#setAlpha";
/** @export */ Blockly.Msg.EMITTERS_SET_ALPHA_TOOLTIP = "Set the min and max alpha values for this emitter.";
/** @export */ Blockly.Msg.EMITTERS_SET_ALPHA_VI_FIELD_1 = "on emitter,";
/** @export */ Blockly.Msg.EMITTERS_SET_ALPHA_VI_FIELD_2 = "set alpha";
/** @export */ Blockly.Msg.EMITTERS_SET_ALPHA_VI_FIELD_3 = "min";
/** @export */ Blockly.Msg.EMITTERS_SET_ALPHA_VI_FIELD_4 = "max";
/** @export */ Blockly.Msg.EMITTERS_SET_ALPHA_VI_FIELD_5 = "rate";
/** @export */ Blockly.Msg.EMITTERS_SET_ALPHA_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Particles.Arcade.Emitter.html#setAlpha";
/** @export */ Blockly.Msg.EMITTERS_SET_ALPHA_VI_TOOLTIP = "Set the min and max alpha values for this emitter.";
/** @export */ Blockly.Msg.EMITTERS_SET_GRAVITY_FIELD_1 = "on emitter,";
/** @export */ Blockly.Msg.EMITTERS_SET_GRAVITY_FIELD_2 = "set Gravity:";
/** @export */ Blockly.Msg.EMITTERS_SET_GRAVITY_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Particles.Arcade.Emitter.html#gravity";
/** @export */ Blockly.Msg.EMITTERS_SET_GRAVITY_TOOLTIP = "Set the gravity of generated particles.";
/** @export */ Blockly.Msg.EMITTERS_SET_GRAVITY_VI_FIELD_1 = "on emitter";
/** @export */ Blockly.Msg.EMITTERS_SET_GRAVITY_VI_FIELD_2 = "set gravity:";
/** @export */ Blockly.Msg.EMITTERS_SET_GRAVITY_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Particles.Arcade.Emitter.html#gravity";
/** @export */ Blockly.Msg.EMITTERS_SET_GRAVITY_VI_TOOLTIP = "Set the gravity of generated particles";
/** @export */ Blockly.Msg.EMITTERS_SET_ROTATION_FIELD_1 = "on emitter,";
/** @export */ Blockly.Msg.EMITTERS_SET_ROTATION_FIELD_2 = "set rotation:";
/** @export */ Blockly.Msg.EMITTERS_SET_ROTATION_FIELD_3 = "min";
/** @export */ Blockly.Msg.EMITTERS_SET_ROTATION_FIELD_4 = "max";
/** @export */ Blockly.Msg.EMITTERS_SET_ROTATION_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Particles.Arcade.Emitter.html#setRotation";
/** @export */ Blockly.Msg.EMITTERS_SET_ROTATION_TOOLTIP = "Set the angular velocity constraints of the particles";
/** @export */ Blockly.Msg.EMITTERS_SET_ROTATION_VI_FIELD_1 = "on emitter";
/** @export */ Blockly.Msg.EMITTERS_SET_ROTATION_VI_FIELD_2 = "set min/max angular velocity";
/** @export */ Blockly.Msg.EMITTERS_SET_ROTATION_VI_FIELD_3 = "min";
/** @export */ Blockly.Msg.EMITTERS_SET_ROTATION_VI_FIELD_4 = "max";
/** @export */ Blockly.Msg.EMITTERS_SET_ROTATION_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Particles.Arcade.Emitter.html#setRotation";
/** @export */ Blockly.Msg.EMITTERS_SET_ROTATION_VI_TOOLTIP = "Set the angular velocity constraints of the particles.";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_FIELD_1 = "on emitter,";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_FIELD_2 = "set Scale:";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_FIELD_3 = "min X";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_FIELD_4 = "max X";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_FIELD_5 = "min Y";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_FIELD_6 = "max Y";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_FIELD_7 = "rate";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Particles.Arcade.Emitter.html#setScale";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_TOOLTIP = "Set the minimum/maximum scale for particles and the rate to go between.";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_VI_FIELD_1 = "on emitter,";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_VI_FIELD_2 = "set scale";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_VI_FIELD_3 = "min x";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_VI_FIELD_4 = "max x";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_VI_FIELD_5 = "min y";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_VI_FIELD_6 = "max y";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_VI_FIELD_7 = "rate";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Particles.Arcade.Emitter.html#setScale";
/** @export */ Blockly.Msg.EMITTERS_SET_SCALE_VI_TOOLTIP = "Set the minimum/maximum scale for particles and the rate to go between.";
/** @export */ Blockly.Msg.EMITTERS_SET_SPEED_FIELD_1 = "on emitter,";
/** @export */ Blockly.Msg.EMITTERS_SET_SPEED_FIELD_2 = "set Speed:";
/** @export */ Blockly.Msg.EMITTERS_SET_SPEED_FIELD_3 = "min X";
/** @export */ Blockly.Msg.EMITTERS_SET_SPEED_FIELD_4 = "max X";
/** @export */ Blockly.Msg.EMITTERS_SET_SPEED_FIELD_5 = "min Y";
/** @export */ Blockly.Msg.EMITTERS_SET_SPEED_FIELD_6 = "max Y";
/** @export */ Blockly.Msg.EMITTERS_SET_SPEED_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Particles.Arcade.Emitter.html#minParticleSpeed";
/** @export */ Blockly.Msg.EMITTERS_SET_SPEED_TOOLTIP = "Sets the minimum and maximum speeds that an emitted particle will go.";
/** @export */ Blockly.Msg.EMITTERS_SET_SPEED_VI_FIELD_1 = "on emitter";
/** @export */ Blockly.Msg.EMITTERS_SET_SPEED_VI_FIELD_2 = "set speed";
/** @export */ Blockly.Msg.EMITTERS_SET_SPEED_VI_FIELD_3 = "min x";
/** @export */ Blockly.Msg.EMITTERS_SET_SPEED_VI_FIELD_4 = "max x";
/** @export */ Blockly.Msg.EMITTERS_SET_SPEED_VI_FIELD_5 = "min y";
/** @export */ Blockly.Msg.EMITTERS_SET_SPEED_VI_FIELD_6 = "max y";
/** @export */ Blockly.Msg.EMITTERS_SET_SPEED_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Particles.Arcade.Emitter.html#minParticleSpeed";
/** @export */ Blockly.Msg.EMITTERS_SET_SPEED_VI_TOOLTIP = "Sets the minimum and maximum speeds that an emitted particle will go.";
/** @export */ Blockly.Msg.EMITTERS_SET_WIDTH_FIELD_1 = "on emitter,";
/** @export */ Blockly.Msg.EMITTERS_SET_WIDTH_FIELD_2 = "set width:";
/** @export */ Blockly.Msg.EMITTERS_SET_WIDTH_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Particles.Arcade.Emitter.html#width";
/** @export */ Blockly.Msg.EMITTERS_SET_WIDTH_TOOLTIP = "Sets the width of the area in which particles will be emitted.";
/** @export */ Blockly.Msg.EMITTERS_START_FIELD_1 = "on emitter,";
/** @export */ Blockly.Msg.EMITTERS_START_FIELD_2 = "start:";
/** @export */ Blockly.Msg.EMITTERS_START_FIELD_3 = "Should Burst?";
/** @export */ Blockly.Msg.EMITTERS_START_FIELD_4 = "Lifespan";
/** @export */ Blockly.Msg.EMITTERS_START_FIELD_5 = "Frequency";
/** @export */ Blockly.Msg.EMITTERS_START_FIELD_6 = "Quantity";
/** @export */ Blockly.Msg.EMITTERS_START_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Particles.Arcade.Emitter.html#start";
/** @export */ Blockly.Msg.EMITTERS_START_TOOLTIP = "Start emitting particles.";
/** @export */ Blockly.Msg.EMITTERS_START_VI_FIELD_1 = "start emitter,";
/** @export */ Blockly.Msg.EMITTERS_START_VI_FIELD_2 = "explode";
/** @export */ Blockly.Msg.EMITTERS_START_VI_FIELD_3 = "lifespan (ms)";
/** @export */ Blockly.Msg.EMITTERS_START_VI_FIELD_4 = "frequency (ms)";
/** @export */ Blockly.Msg.EMITTERS_START_VI_FIELD_5 = "quantity";
/** @export */ Blockly.Msg.EMITTERS_START_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Particles.Arcade.Emitter.html#start";
/** @export */ Blockly.Msg.EMITTERS_START_VI_TOOLTIP = "Start emitting particles.";
/** @export */ Blockly.Msg.EMITTER_MAKE_PARTICLES_FIELD_1 = "on emitter";
/** @export */ Blockly.Msg.EMITTER_MAKE_PARTICLES_FIELD_2 = "make particles";
/** @export */ Blockly.Msg.EMITTER_MAKE_PARTICLES_FIELD_3 = "keys";
/** @export */ Blockly.Msg.EMITTER_MAKE_PARTICLES_FIELD_4 = "frames";
/** @export */ Blockly.Msg.EMITTER_MAKE_PARTICLES_FIELD_5 = "quantity";
/** @export */ Blockly.Msg.EMITTER_MAKE_PARTICLES_FIELD_6 = "collide";
/** @export */ Blockly.Msg.EMITTER_MAKE_PARTICLES_FIELD_7 = "collide world";
/** @export */ Blockly.Msg.EMITTER_MAKE_PARTICLES_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Particles.Arcade.Emitter.html#makeParticles";
/** @export */ Blockly.Msg.EMITTER_MAKE_PARTICLES_TOOLTIP = "Generate a new set of particles for this emitter";
/** @export */ Blockly.Msg.ENABLE_ARCADE_PHYSICS_FOR_OBJECT_FIELD_1 = "enable arcade physics for";
/** @export */ Blockly.Msg.ENABLE_ARCADE_PHYSICS_FOR_OBJECT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.html#enable";
/** @export */ Blockly.Msg.ENABLE_ARCADE_PHYSICS_FOR_OBJECT_TOOLTIP = "Enable physics for this object";
/** @export */ Blockly.Msg.ENABLE_ARCADE_PHYSICS_FOR_OBJECT_VI_FIELD_1 = "enable arcade physics for sprite";
/** @export */ Blockly.Msg.ENABLE_ARCADE_PHYSICS_FOR_OBJECT_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.html#enable";
/** @export */ Blockly.Msg.ENABLE_ARCADE_PHYSICS_FOR_OBJECT_VI_TOOLTIP = "Enable physics for this sprite";
/** @export */ Blockly.Msg.ENABLE_BLOCK = "Enable Block";
/** @export */ Blockly.Msg.ENABLE_BODY_GROUP_FIELD_1 = "Enable Body for";
/** @export */ Blockly.Msg.ENABLE_BODY_GROUP_FIELD_2 = "Group";
/** @export */ Blockly.Msg.ENABLE_BODY_GROUP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#enableBody";
/** @export */ Blockly.Msg.ENABLE_BODY_GROUP_TOOLTIP = "Enable physics body on all sprites in or added to this group.";
/** @export */ Blockly.Msg.ENABLE_BODY_GROUP_VI_FIELD_1 = "enable body for group";
/** @export */ Blockly.Msg.ENABLE_BODY_GROUP_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#enableBody";
/** @export */ Blockly.Msg.ENABLE_BODY_GROUP_VI_TOOLTIP = "Enable physics body on all sprites in or added to this group.";
/** @export */ Blockly.Msg.ENABLE_STEP_FIELD_1 = "enable stepping";
/** @export */ Blockly.Msg.ENABLE_STEP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Game.html#enableStep";
/** @export */ Blockly.Msg.ENABLE_STEP_TOOLTIP = "Enables manually stepping through game frames. Usually for debugging purposes.";
/** @export */ Blockly.Msg.EXPAND_ALL = "Expand Blocks";
/** @export */ Blockly.Msg.EXPAND_BLOCK = "Expand Block";
/** @export */ Blockly.Msg.EXTERNAL_INPUTS = "External Inputs";
/** @export */ Blockly.Msg.FAINT_OBJECT_FIELD_1 = "faint";
/** @export */ Blockly.Msg.FAINT_OBJECT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#kill";
/** @export */ Blockly.Msg.FAINT_OBJECT_TOOLTIP = "Will faint the object setting making it non-existent. Reverse with revive.";
/** @export */ Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_1 = "on gameobject";
/** @export */ Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_2 = "get animation.";
/** @export */ Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_1 = "currentAnim";
/** @export */ Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_10 = "paused";
/** @export */ Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_11 = "sprite";
/** @export */ Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_12 = "updateIfVisible";
/** @export */ Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_2 = "currentFrame";
/** @export */ Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_3 = "frame";
/** @export */ Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_4 = "frameData";
/** @export */ Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_5 = "frameName";
/** @export */ Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_6 = "frameTotal";
/** @export */ Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_7 = "game";
/** @export */ Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_8 = "isLoaded";
/** @export */ Blockly.Msg.GET_ANIMATION_PROPERTY_FIELD_DROPDOWN_9 = "name";
/** @export */ Blockly.Msg.GET_ANIMATION_PROPERTY_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#destroy";
/** @export */ Blockly.Msg.GET_ANIMATION_PROPERTY_TOOLTIP = "Get a property on from the animaton manager on the object";
/** @export */ Blockly.Msg.GET_BODY_BOOLEAN_FIELD_ELEMENT_DROPDOWN_1 = "allowRotation";
/** @export */ Blockly.Msg.GET_BODY_BOOLEAN_FIELD_ELEMENT_DROPDOWN_2 = "allowGravity";
/** @export */ Blockly.Msg.GET_BODY_BOOLEAN_FIELD_ELEMENT_DROPDOWN_3 = "immovable";
/** @export */ Blockly.Msg.GET_BODY_BOOLEAN_FIELD_ELEMENT_DROPDOWN_4 = "isMoving";
/** @export */ Blockly.Msg.GET_BODY_BOOLEAN_FIELD_FIELD_1 = "get";
/** @export */ Blockly.Msg.GET_BODY_BOOLEAN_FIELD_FIELD_2 = "for";
/** @export */ Blockly.Msg.GET_BODY_BOOLEAN_FIELD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.Body.html";
/** @export */ Blockly.Msg.GET_BODY_BOOLEAN_FIELD_TOOLTIP = "Set the value of the specified boolean field";
/** @export */ Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_1 = "get";
/** @export */ Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_2 = "for";
/** @export */ Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_DROPDOWN_1 = "bounce";
/** @export */ Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_DROPDOWN_2 = "gravity";
/** @export */ Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_DROPDOWN_3 = "velocity";
/** @export */ Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_DROPDOWN_4 = "acceleration";
/** @export */ Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_DROPDOWN_5 = "drag";
/** @export */ Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_DROPDOWN_6 = "friction";
/** @export */ Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_DROPDOWN_7 = "maxVelocity";
/** @export */ Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_FIELD_DROPDOWN_8 = "worldBounce";
/** @export */ Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.Body.html";
/** @export */ Blockly.Msg.GET_BODY_FIELD_POINT_CLASS_TOOLTIP = "Gets the value of the specified point as a point object";
/** @export */ Blockly.Msg.GET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_1 = "speed";
/** @export */ Blockly.Msg.GET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_2 = "mass";
/** @export */ Blockly.Msg.GET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_3 = "rotation (degrees)";
/** @export */ Blockly.Msg.GET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_4 = "maxVelocity";
/** @export */ Blockly.Msg.GET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_5 = "angularAcceleration";
/** @export */ Blockly.Msg.GET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_6 = "angularVelocity";
/** @export */ Blockly.Msg.GET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_7 = "maxAngularVelocity";
/** @export */ Blockly.Msg.GET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_8 = "angularDrag";
/** @export */ Blockly.Msg.GET_BODY_NUMERIC_FIELD_FIELD_1 = "get";
/** @export */ Blockly.Msg.GET_BODY_NUMERIC_FIELD_FIELD_2 = "for";
/** @export */ Blockly.Msg.GET_BODY_NUMERIC_FIELD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.Body.html";
/** @export */ Blockly.Msg.GET_BODY_NUMERIC_FIELD_TOOLTIP = "Get the value of the specified numeric field";
/** @export */ Blockly.Msg.GET_BOUNDS_FIELD_1 = "Get bounds of";
/** @export */ Blockly.Msg.GET_BOUNDS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#getBounds";
/** @export */ Blockly.Msg.GET_BOUNDS_TOOLTIP = "Gets the rectangular bounds of most objects in the game.";
/** @export */ Blockly.Msg.GET_CAMERA_FIELD_1 = "get camera";
/** @export */ Blockly.Msg.GET_CAMERA_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Camera.html";
/** @export */ Blockly.Msg.GET_CAMERA_TOOLTIP = "Returns a reference to the camera.";
/** @export */ Blockly.Msg.GET_CHILD_AT_VI_FIELD_1 = "get child of";
/** @export */ Blockly.Msg.GET_CHILD_AT_VI_FIELD_2 = "at index";
/** @export */ Blockly.Msg.GET_CHILD_AT_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#getChildAt";
/** @export */ Blockly.Msg.GET_CHILD_AT_VI_TOOLTIP = "Finds a specific child on this sprite/image by its index.";
/** @export */ Blockly.Msg.GET_CHILD_INDEX_FIELD_1 = "Get index of Child";
/** @export */ Blockly.Msg.GET_CHILD_INDEX_FIELD_2 = "on ";
/** @export */ Blockly.Msg.GET_CHILD_INDEX_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#getChildIndex";
/** @export */ Blockly.Msg.GET_CHILD_INDEX_TOOLTIP = "Finds an index that describes where on the parent this object is. ";
/** @export */ Blockly.Msg.GET_CHILD_INDEX_VI_FIELD_1 = "get index of child";
/** @export */ Blockly.Msg.GET_CHILD_INDEX_VI_FIELD_2 = "on ";
/** @export */ Blockly.Msg.GET_CHILD_INDEX_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#getChildIndex";
/** @export */ Blockly.Msg.GET_CHILD_INDEX_VI_TOOLTIP = "Finds an index that describes where on the parent this object is. ";
/** @export */ Blockly.Msg.GET_CURRENT_MOUSE_POSITION_DIRECTION_DROPDOWN_1 = "x";
/** @export */ Blockly.Msg.GET_CURRENT_MOUSE_POSITION_DIRECTION_DROPDOWN_2 = "y";
/** @export */ Blockly.Msg.GET_CURRENT_MOUSE_POSITION_DIRECTION_DROPDOWN_3 = "worldX";
/** @export */ Blockly.Msg.GET_CURRENT_MOUSE_POSITION_DIRECTION_DROPDOWN_4 = "worldY";
/** @export */ Blockly.Msg.GET_CURRENT_MOUSE_POSITION_FIELD_1 = "get mouse position";
/** @export */ Blockly.Msg.GET_CURRENT_MOUSE_POSITION_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Pointer.html#x";
/** @export */ Blockly.Msg.GET_CURRENT_MOUSE_POSITION_TOOLTIP = "Get the position of the mouse, or last active pointer for touch screen interfaces";
/** @export */ Blockly.Msg.GET_GAME_OBJECT_BOOLEAN_FIELD_FIELD_1 = "get boolean field";
/** @export */ Blockly.Msg.GET_GAME_OBJECT_BOOLEAN_FIELD_FIELD_2 = "of";
/** @export */ Blockly.Msg.GET_GAME_OBJECT_BOOLEAN_FIELD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html";
/** @export */ Blockly.Msg.GET_GAME_OBJECT_BOOLEAN_FIELD_TOOLTIP = "Get a boolean property on the object";
/** @export */ Blockly.Msg.GET_GAME_OBJECT_NUMERIC_FIELD_FIELD_1 = "get numeric field";
/** @export */ Blockly.Msg.GET_GAME_OBJECT_NUMERIC_FIELD_FIELD_2 = "of";
/** @export */ Blockly.Msg.GET_GAME_OBJECT_NUMERIC_FIELD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html";
/** @export */ Blockly.Msg.GET_GAME_OBJECT_NUMERIC_FIELD_TOOLTIP = "Get a numeric property on the object";
/** @export */ Blockly.Msg.GET_GAME_OBJECT_POINT_FIELD_FIELD_1 = "get point field";
/** @export */ Blockly.Msg.GET_GAME_OBJECT_POINT_FIELD_FIELD_2 = "of";
/** @export */ Blockly.Msg.GET_GAME_OBJECT_POINT_FIELD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html";
/** @export */ Blockly.Msg.GET_GAME_OBJECT_POINT_FIELD_TOOLTIP = "Get a point property on the object";
/** @export */ Blockly.Msg.GET_LOCAL_BOUNDS_FIELD_1 = "get local bounds of";
/** @export */ Blockly.Msg.GET_LOCAL_BOUNDS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#getLocalBounds";
/** @export */ Blockly.Msg.GET_LOCAL_BOUNDS_TOOLTIP = "Gets the rectangular bounds of an object. Bounds are relative to the object itself instead of the world.";
/** @export */ Blockly.Msg.GET_OBJECT_WIDTH_FIELD_1 = "get width of ";
/** @export */ Blockly.Msg.GET_OBJECT_WIDTH_HELP_URL = "https://photonstorm.github.io/phaser-ce/PIXI.Sprite.html#width";
/** @export */ Blockly.Msg.GET_OBJECT_WIDTH_TOOLTIP = "Gets the width of an object.";
/** @export */ Blockly.Msg.GET_PARAM_FIELD_1 = "get";
/** @export */ Blockly.Msg.GET_PARAM_FIELD_2 = "from object";
/** @export */ Blockly.Msg.GET_PARAM_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#toc-4";
/** @export */ Blockly.Msg.GET_PARAM_TOOLTIP = "Gets a given numeric field from an object.";
/** @export */ Blockly.Msg.GET_ROTATION_FIELD_1 = "get rotation";
/** @export */ Blockly.Msg.GET_ROTATION_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#angle";
/** @export */ Blockly.Msg.GET_ROTATION_TOOLTIP = "Finds the rotation (in degrees) of a Game Object.";
/** @export */ Blockly.Msg.GET_SOUND_BOOLEAN_MEMBER_FIELD_1 = "get";
/** @export */ Blockly.Msg.GET_SOUND_BOOLEAN_MEMBER_FIELD_2 = "of";
/** @export */ Blockly.Msg.GET_SOUND_BOOLEAN_MEMBER_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sound.html";
/** @export */ Blockly.Msg.GET_SOUND_BOOLEAN_MEMBER_TOOLTIP = "Get the selected member from the Sound";
/** @export */ Blockly.Msg.GET_SOUND_NUMERIC_MEMBER_FIELD_1 = "get";
/** @export */ Blockly.Msg.GET_SOUND_NUMERIC_MEMBER_FIELD_2 = "of";
/** @export */ Blockly.Msg.GET_SOUND_NUMERIC_MEMBER_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sound.html";
/** @export */ Blockly.Msg.GET_SOUND_NUMERIC_MEMBER_TOOLTIP = "Get the selected member from the Sound";
/** @export */ Blockly.Msg.GET_SOUND_STRING_MEMBER_FIELD_1 = "get";
/** @export */ Blockly.Msg.GET_SOUND_STRING_MEMBER_FIELD_2 = "of";
/** @export */ Blockly.Msg.GET_SOUND_STRING_MEMBER_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sound.html";
/** @export */ Blockly.Msg.GET_SOUND_STRING_MEMBER_TOOLTIP = "Get the selected member from the Sound";
/** @export */ Blockly.Msg.GET_WORLD_PROPERTY_FIELD_1 = "get";
/** @export */ Blockly.Msg.GET_WORLD_PROPERTY_FIELD_2 = "of the world";
/** @export */ Blockly.Msg.GET_WORLD_PROPERTY_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.World.html";
/** @export */ Blockly.Msg.GET_WORLD_PROPERTY_NAME_DROPDOWN_1 = "height";
/** @export */ Blockly.Msg.GET_WORLD_PROPERTY_NAME_DROPDOWN_2 = "width";
/** @export */ Blockly.Msg.GET_WORLD_PROPERTY_NAME_DROPDOWN_3 = "center x";
/** @export */ Blockly.Msg.GET_WORLD_PROPERTY_NAME_DROPDOWN_4 = "center y";
/** @export */ Blockly.Msg.GET_WORLD_PROPERTY_NAME_DROPDOWN_5 = "random x";
/** @export */ Blockly.Msg.GET_WORLD_PROPERTY_NAME_DROPDOWN_6 = "random y";
/** @export */ Blockly.Msg.GET_WORLD_PROPERTY_TOOLTIP = "Get a property of the world";
/** @export */ Blockly.Msg.GET_WORLD_REFERENCE_FIELD_1 = "world";
/** @export */ Blockly.Msg.GET_WORLD_REFERENCE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.World.html";
/** @export */ Blockly.Msg.GET_WORLD_REFERENCE_TOOLTIP = "Returns a reference to the game world. It functions as a group.";
/** @export */ Blockly.Msg.GROUP_CONTAINS_FIELD_1 = "group";
/** @export */ Blockly.Msg.GROUP_CONTAINS_FIELD_2 = "contains";
/** @export */ Blockly.Msg.GROUP_CONTAINS_FIELD_3 = "?";
/** @export */ Blockly.Msg.GROUP_CONTAINS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#contains";
/** @export */ Blockly.Msg.GROUP_CONTAINS_TOOLTIP = "Returns true if a group contains a specified sprite.";
/** @export */ Blockly.Msg.GROUP_COUNT_ALIVE_DEAD_FIELD_1 = "number of";
/** @export */ Blockly.Msg.GROUP_COUNT_ALIVE_DEAD_FIELD_2 = "objects in group";
/** @export */ Blockly.Msg.GROUP_COUNT_ALIVE_DEAD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#countLiving";
/** @export */ Blockly.Msg.GROUP_COUNT_ALIVE_DEAD_STATE_DROPDOWN_1 = "alive";
/** @export */ Blockly.Msg.GROUP_COUNT_ALIVE_DEAD_STATE_DROPDOWN_2 = "fainted";
/** @export */ Blockly.Msg.GROUP_COUNT_ALIVE_DEAD_TOOLTIP = "Returns the number of alive/dead objects in a group.";
/** @export */ Blockly.Msg.GROUP_GET_ALL_FIELD_1 = "get all members of group";
/** @export */ Blockly.Msg.GROUP_GET_ALL_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#getAll";
/** @export */ Blockly.Msg.GROUP_GET_ALL_TOOLTIP = "Returns a list of all members in the specified group.";
/** @export */ Blockly.Msg.GROUP_GET_AT_FIELD_1 = "get member of group";
/** @export */ Blockly.Msg.GROUP_GET_AT_FIELD_2 = "at index";
/** @export */ Blockly.Msg.GROUP_GET_AT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#getAt";
/** @export */ Blockly.Msg.GROUP_GET_AT_TOOLTIP = "Returns a group member at a specified index. Indices start at 0 and go in creation order by default. Returns -1 if it fails.";
/** @export */ Blockly.Msg.GROUP_GET_CLOSEST_TO_FIELD_1 = "get member of group";
/** @export */ Blockly.Msg.GROUP_GET_CLOSEST_TO_FIELD_2 = "closest to";
/** @export */ Blockly.Msg.GROUP_GET_CLOSEST_TO_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#getClosestTo";
/** @export */ Blockly.Msg.GROUP_GET_CLOSEST_TO_TOOLTIP = "Returns the object in the group whose position is closest to the specified object.";
/** @export */ Blockly.Msg.GROUP_GET_FIRST_ALIVE_DEAD_FIELD_1 = "get first";
/** @export */ Blockly.Msg.GROUP_GET_FIRST_ALIVE_DEAD_FIELD_2 = "member of group";
/** @export */ Blockly.Msg.GROUP_GET_FIRST_ALIVE_DEAD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#getFirstAlive";
/** @export */ Blockly.Msg.GROUP_GET_FIRST_ALIVE_DEAD_MODE_DROPDOWN_1 = "alive";
/** @export */ Blockly.Msg.GROUP_GET_FIRST_ALIVE_DEAD_MODE_DROPDOWN_2 = "dead";
/** @export */ Blockly.Msg.GROUP_GET_FIRST_ALIVE_DEAD_TOOLTIP = "Gets the first group member that has the given value of its 'alive' field. Returns null if no matching member is found.";
/** @export */ Blockly.Msg.GROUP_GET_FIRST_ALIVE_FAINTED_FIELD_1 = "get first";
/** @export */ Blockly.Msg.GROUP_GET_FIRST_ALIVE_FAINTED_FIELD_2 = "member of group";
/** @export */ Blockly.Msg.GROUP_GET_FIRST_ALIVE_FAINTED_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#getFirstAlive";
/** @export */ Blockly.Msg.GROUP_GET_FIRST_ALIVE_FAINTED_MODE_DROPDOWN_1 = "alive";
/** @export */ Blockly.Msg.GROUP_GET_FIRST_ALIVE_FAINTED_MODE_DROPDOWN_2 = "fainted";
/** @export */ Blockly.Msg.GROUP_GET_FIRST_ALIVE_FAINTED_TOOLTIP = "Gets the first group member that has the given value of its 'alive' field. Returns null if no matching member is found.";
/** @export */ Blockly.Msg.GROUP_GET_RANDOM_EXISTS_FIELD_1 = "get a random member of group";
/** @export */ Blockly.Msg.GROUP_GET_RANDOM_EXISTS_FIELD_2 = "that exists";
/** @export */ Blockly.Msg.GROUP_GET_RANDOM_EXISTS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#getRandomExists";
/** @export */ Blockly.Msg.GROUP_GET_RANDOM_EXISTS_TOOLTIP = "Returns a random member of the given group, picking from those whose 'exists' field is set to true.";
/** @export */ Blockly.Msg.GROUP_GET_RANDOM_FIELD_1 = "get random member of group";
/** @export */ Blockly.Msg.GROUP_GET_RANDOM_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#getRandom";
/** @export */ Blockly.Msg.GROUP_GET_RANDOM_TOOLTIP = "Returns a member of the group at random with no bias.";
/** @export */ Blockly.Msg.GROUP_REMOVE_ALL_FIELD_1 = "remove all members of group";
/** @export */ Blockly.Msg.GROUP_REMOVE_ALL_FIELD_2 = "destroy them too";
/** @export */ Blockly.Msg.GROUP_REMOVE_ALL_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#removeAll";
/** @export */ Blockly.Msg.GROUP_REMOVE_ALL_TOOLTIP = "Empties the specified group. Can either do this by releasing its members or deleting them.";
/** @export */ Blockly.Msg.HELP = "Help";
/** @export */ Blockly.Msg.IMAGESUBTEXTUREATLAS_FIELD_1 = "add sprite to game from atlas at";
/** @export */ Blockly.Msg.IMAGESUBTEXTUREATLAS_FIELD_2 = "x";
/** @export */ Blockly.Msg.IMAGESUBTEXTUREATLAS_FIELD_3 = "y";
/** @export */ Blockly.Msg.IMAGESUBTEXTUREATLAS_FIELD_4 = "tagged ";
/** @export */ Blockly.Msg.IMAGESUBTEXTUREATLAS_FIELD_5 = "subtexture id";
/** @export */ Blockly.Msg.IMAGESUBTEXTUREATLAS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Loader.html#atlasXML";
/** @export */ Blockly.Msg.IMAGESUBTEXTUREATLAS_TOOLTIP = "Adds a sprite to the game using data from a texture atlas.";
/** @export */ Blockly.Msg.INLINE_INPUTS = "Inline Inputs";
/** @export */ Blockly.Msg.IS_BODY_TOUCHING_FIELD_1 = "touching";
/** @export */ Blockly.Msg.IS_BODY_TOUCHING_FIELD_2 = "?";
/** @export */ Blockly.Msg.IS_BODY_TOUCHING_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.Body.html#touching";
/** @export */ Blockly.Msg.IS_BODY_TOUCHING_TOOLTIP = "Check to see if the object is being touched in the given direction.";
/** @export */ Blockly.Msg.IS_BODY_TOUCHING_VI_DIRECTION_DROPDOWN_1 = "Up";
/** @export */ Blockly.Msg.IS_BODY_TOUCHING_VI_DIRECTION_DROPDOWN_2 = "Down";
/** @export */ Blockly.Msg.IS_BODY_TOUCHING_VI_DIRECTION_DROPDOWN_3 = "Left";
/** @export */ Blockly.Msg.IS_BODY_TOUCHING_VI_DIRECTION_DROPDOWN_4 = "Right";
/** @export */ Blockly.Msg.IS_BODY_TOUCHING_VI_DIRECTION_DROPDOWN_5 = "None";
/** @export */ Blockly.Msg.IS_BODY_TOUCHING_VI_FIELD_1 = "is touching";
/** @export */ Blockly.Msg.IS_BODY_TOUCHING_VI_FIELD_2 = "?";
/** @export */ Blockly.Msg.IS_BODY_TOUCHING_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.Body.html#touching";
/** @export */ Blockly.Msg.IS_BODY_TOUCHING_VI_TOOLTIP = "Check to see if the object is being touched in the given direction.";
/** @export */ Blockly.Msg.IS_KEY_DOWN_FIELD_1 = "key";
/** @export */ Blockly.Msg.IS_KEY_DOWN_FIELD_2 = "is down?";
/** @export */ Blockly.Msg.IS_KEY_DOWN_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Keyboard.html#isDown";
/** @export */ Blockly.Msg.IS_KEY_DOWN_TOOLTIP = "Checks if the given key is down";
/** @export */ Blockly.Msg.IS_MOUSE_BUTTON_CLICKED_BUTTON_DROPDOWN_1 = "left";
/** @export */ Blockly.Msg.IS_MOUSE_BUTTON_CLICKED_BUTTON_DROPDOWN_2 = "right";
/** @export */ Blockly.Msg.IS_MOUSE_BUTTON_CLICKED_BUTTON_DROPDOWN_3 = "middle";
/** @export */ Blockly.Msg.IS_MOUSE_BUTTON_CLICKED_FIELD_1 = "mouse button is clicked?";
/** @export */ Blockly.Msg.IS_MOUSE_BUTTON_CLICKED_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Pointer.html#isDown";
/** @export */ Blockly.Msg.IS_MOUSE_BUTTON_CLICKED_TOOLTIP = "Is the specified button clicked";
/** @export */ Blockly.Msg.KILL_OBJECT_FIELD_1 = "kill";
/** @export */ Blockly.Msg.KILL_OBJECT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#kill";
/** @export */ Blockly.Msg.KILL_OBJECT_TOOLTIP = "Will kill the object setting making it non-existent. Reverse with revive.";
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "create empty list";
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Returns a list, of length 0, containing no data records";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "list";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Add, remove, or reorder sections to reconfigure this list block.";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "create list with";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Add an item to the list.";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Create a list with any number of items.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FIRST = "first";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# from end";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_GET = "get";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "get and remove";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_LAST = "last";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_RANDOM = "random";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_REMOVE = "remove";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TAIL = "";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Returns the first item in a list.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "Returns the item at the specified position in a list.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Returns the last item in a list.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Returns a random item in a list.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Removes and returns the first item in a list.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "Removes and returns the item at the specified position in a list.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Removes and returns the last item in a list.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Removes and returns a random item in a list.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Removes the first item in a list.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM = "Removes the item at the specified position in a list.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Removes the last item in a list.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Removes a random item in a list.";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "to # from end";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "to #";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "to last";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "get sub-list from first";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "get sub-list from # from end";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "get sub-list from #";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Creates a copy of the specified portion of a list.";
/** @export */ Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP = "%1 is the last item.";
/** @export */ Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1 is the first item.";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_FIRST = "find first occurrence of item";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_LAST = "find last occurrence of item";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.";
/** @export */ Blockly.Msg.LISTS_INLIST = "in list";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 is empty";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Returns true if the list is empty.";
/** @export */ Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";
/** @export */ Blockly.Msg.LISTS_LENGTH_TITLE = "length of %1";
/** @export */ Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Returns the length of a list.";
/** @export */ Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
/** @export */ Blockly.Msg.LISTS_REPEAT_TITLE = "create list with item %1 repeated %2 times";
/** @export */ Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Creates a list consisting of the given value repeated the specified number of times.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "as";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INSERT = "insert at";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_SET = "set";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserts the item at the start of a list.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM = "Inserts the item at the specified position in a list.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Append the item to the end of a list.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserts the item randomly in a list.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Sets the first item in a list.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM = "Sets the item at the specified position in a list.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Sets the last item in a list.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Sets a random item in a list.";
/** @export */ Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
/** @export */ Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";
/** @export */ Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";
/** @export */ Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";
/** @export */ Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";
/** @export */ Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
/** @export */ Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "make list from text";
/** @export */ Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "make text from list";
/** @export */ Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Join a list of texts into one text, separated by a delimiter.";
/** @export */ Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Split text into a list of texts, breaking at each delimiter.";
/** @export */ Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "with delimiter";
/** @export */ Blockly.Msg.LIST_FIND_CLOSEST_FIELD_1 = "find the number closest to";
/** @export */ Blockly.Msg.LIST_FIND_CLOSEST_FIELD_2 = "in the list";
/** @export */ Blockly.Msg.LIST_FIND_CLOSEST_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.ArrayUtils.html#_findClosest";
/** @export */ Blockly.Msg.LIST_FIND_CLOSEST_TOOLTIP = "Returns the value closest to the given number in a sorted, numeric list. If two values are equally close, it returns the higher one.";
/** @export */ Blockly.Msg.LIST_GET_RANDOM_FIELD_1 = "get a random item from";
/** @export */ Blockly.Msg.LIST_GET_RANDOM_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.ArrayUtils.html#_getRandomItem";
/** @export */ Blockly.Msg.LIST_GET_RANDOM_TOOLTIP = "Returns a random item from the given list.";
/** @export */ Blockly.Msg.LIST_REMOVE_RANDOM_ITEM_FIELD_1 = "get and remove a random item from";
/** @export */ Blockly.Msg.LIST_REMOVE_RANDOM_ITEM_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.ArrayUtils.html#_removeRandomItem";
/** @export */ Blockly.Msg.LIST_REMOVE_RANDOM_ITEM_TOOLTIP = "Removes a random item from a list and returns it. Note that this modifies the list.";
/** @export */ Blockly.Msg.LIST_SHUFFLE_FIELD_1 = "shuffle";
/** @export */ Blockly.Msg.LIST_SHUFFLE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.ArrayUtils.html#_shuffle";
/** @export */ Blockly.Msg.LIST_SHUFFLE_TOOLTIP = "Randomly rearranges the order of items in a list. Works for more than just cards.";
/** @export */ Blockly.Msg.LOAD_SOUND_FIELD_1 = "create sound";
/** @export */ Blockly.Msg.LOAD_SOUND_FIELD_2 = "tag";
/** @export */ Blockly.Msg.LOAD_SOUND_FIELD_3 = "source";
/** @export */ Blockly.Msg.LOAD_SOUND_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Loader.html#audio";
/** @export */ Blockly.Msg.LOAD_SOUND_TOOLTIP = "Loads an audio file so you can use it later. The tag is a name you use to access it later. The source is a file path. URLs work as a source too, but this is not recommended.";
/** @export */ Blockly.Msg.LOAD_TEXTURE_FIELD_1 = "change texture of";
/** @export */ Blockly.Msg.LOAD_TEXTURE_FIELD_2 = "to tag";
/** @export */ Blockly.Msg.LOAD_TEXTURE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#loadTexture";
/** @export */ Blockly.Msg.LOAD_TEXTURE_TOOLTIP = "This changes the texture of this sprite/image entirely. If it is part of a sprite sheet. Warning: slow.";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_FALSE = "false";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Returns either true or false.";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_TRUE = "true";
/** @export */ Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Return true if both inputs equal each other.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Return true if the first input is greater than the second input.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Return true if the first input is greater than or equal to the second input.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Return true if the first input is smaller than the second input.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Return true if the first input is smaller than or equal to the second input.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Return true if both inputs are not equal to each other.";
/** @export */ Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";
/** @export */ Blockly.Msg.LOGIC_NEGATE_TITLE = "not %1";
/** @export */ Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Returns true if the input is false. Returns false if the input is true.";
/** @export */ Blockly.Msg.LOGIC_NULL = "null";
/** @export */ Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
/** @export */ Blockly.Msg.LOGIC_NULL_TOOLTIP = "Returns null.";
/** @export */ Blockly.Msg.LOGIC_OPERATION_AND = "and";
/** @export */ Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";
/** @export */ Blockly.Msg.LOGIC_OPERATION_OR = "or";
/** @export */ Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Return true if both inputs are true.";
/** @export */ Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Return true if at least one of the inputs is true.";
/** @export */ Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
/** @export */ Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
/** @export */ Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "if false";
/** @export */ Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "if true";
/** @export */ Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";
/** @export */ Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Return the sum of the two numbers.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Return the quotient of the two numbers.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Return the difference of the two numbers.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Return the product of the two numbers.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Return the first number raised to the power of the second number.";
/** @export */ Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
/** @export */ Blockly.Msg.MATH_CHANGE_TITLE = "change %1 by %2";
/** @export */ Blockly.Msg.MATH_CHANGE_TOOLTIP = "Add a number to variable '%1'.";
/** @export */ Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
/** @export */ Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_TITLE = "constrain %1 low %2 high %3";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Constrain a number to be between the specified limits (inclusive).";
/** @export */ Blockly.Msg.MATH_DEG_TO_RAD_FIELD_1 = "convert degrees";
/** @export */ Blockly.Msg.MATH_DEG_TO_RAD_FIELD_2 = "to radians";
/** @export */ Blockly.Msg.MATH_DEG_TO_RAD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Math.html#degToRad";
/** @export */ Blockly.Msg.MATH_DEG_TO_RAD_TOOLTIP = "Converts a value in degrees to an equivalent in radians.";
/** @export */ Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
/** @export */ Blockly.Msg.MATH_IS_DIVISIBLE_BY = "is divisible by";
/** @export */ Blockly.Msg.MATH_IS_EVEN = "is even";
/** @export */ Blockly.Msg.MATH_IS_NEGATIVE = "is negative";
/** @export */ Blockly.Msg.MATH_IS_ODD = "is odd";
/** @export */ Blockly.Msg.MATH_IS_POSITIVE = "is positive";
/** @export */ Blockly.Msg.MATH_IS_PRIME = "is prime";
/** @export */ Blockly.Msg.MATH_IS_TOOLTIP = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.";
/** @export */ Blockly.Msg.MATH_IS_WHOLE = "is whole";
/** @export */ Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
/** @export */ Blockly.Msg.MATH_MODULO_TITLE = "remainder of %1 ÷ %2";
/** @export */ Blockly.Msg.MATH_MODULO_TOOLTIP = "Return the remainder from dividing the two numbers.";
/** @export */ Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
/** @export */ Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
/** @export */ Blockly.Msg.MATH_NUMBER_TOOLTIP = "A number.";
/** @export */ Blockly.Msg.MATH_ONLIST_HELPURL = "";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "average of list";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "max of list";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "median of list";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "min of list";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modes of list";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "random item of list";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standard deviation of list";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "sum of list";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Return the average (arithmetic mean) of the numeric values in the list.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Return the largest number in the list.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Return the median number in the list.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Return the smallest number in the list.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Return a list of the most common item(s) in the list.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Return a random element from the list.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Return the standard deviation of the list.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Return the sum of all the numbers in the list.";
/** @export */ Blockly.Msg.MATH_POWER_SYMBOL = "^";
/** @export */ Blockly.Msg.MATH_RAD_TO_DEG_FIELD_1 = "convert radians";
/** @export */ Blockly.Msg.MATH_RAD_TO_DEG_FIELD_2 = "to degrees";
/** @export */ Blockly.Msg.MATH_RAD_TO_DEG_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Math.html#radToDeg";
/** @export */ Blockly.Msg.MATH_RAD_TO_DEG_TOOLTIP = "Converts an angle in degrees to an equivalent in radians.";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "random fraction";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_TITLE = "random integer from %1 to %2";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Return a random integer between the two specified limits, inclusive.";
/** @export */ Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "round";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "round down";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "round up";
/** @export */ Blockly.Msg.MATH_ROUND_TOOLTIP = "Round a number up or down.";
/** @export */ Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
/** @export */ Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolute";
/** @export */ Blockly.Msg.MATH_SINGLE_OP_ROOT = "square root";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Return the absolute value of a number.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Return e to the power of a number.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Return the natural logarithm of a number.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Return the base 10 logarithm of a number.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Return the negation of a number.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Return 10 to the power of a number.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Return the square root of a number.";
/** @export */ Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
/** @export */ Blockly.Msg.MATH_TRIG_ACOS = "acos";
/** @export */ Blockly.Msg.MATH_TRIG_ASIN = "asin";
/** @export */ Blockly.Msg.MATH_TRIG_ATAN = "atan";
/** @export */ Blockly.Msg.MATH_TRIG_COS = "cos";
/** @export */ Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
/** @export */ Blockly.Msg.MATH_TRIG_SIN = "sin";
/** @export */ Blockly.Msg.MATH_TRIG_TAN = "tan";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Return the arccosine of a number.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Return the arcsine of a number.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Return the arctangent of a number.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Return the cosine of a degree (not radian).";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Return the sine of a degree (not radian).";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Return the tangent of a degree (not radian).";
/** @export */ Blockly.Msg.MOVE_DOWN_FIELD_1 = "move";
/** @export */ Blockly.Msg.MOVE_DOWN_FIELD_2 = "down";
/** @export */ Blockly.Msg.MOVE_DOWN_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#moveDown";
/** @export */ Blockly.Msg.MOVE_DOWN_TOOLTIP = "Moves this sprite/image down one place in the display order. If sprites overlap, it will be more likely to display underneath others.";
/** @export */ Blockly.Msg.MOVE_TO_OBJECT_FIELD_1 = "move game object";
/** @export */ Blockly.Msg.MOVE_TO_OBJECT_FIELD_2 = "to object";
/** @export */ Blockly.Msg.MOVE_TO_OBJECT_FIELD_3 = "at";
/** @export */ Blockly.Msg.MOVE_TO_OBJECT_FIELD_4 = "pixels per second";
/** @export */ Blockly.Msg.MOVE_TO_OBJECT_FIELD_5 = "max time (ms)";
/** @export */ Blockly.Msg.MOVE_TO_OBJECT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.html#moveToObject";
/** @export */ Blockly.Msg.MOVE_TO_OBJECT_TOOLTIP = "Move the object to the given object at the given speed";
/** @export */ Blockly.Msg.MOVE_TO_POINTER_EXTENDED_FIELD_1 = "move game object";
/** @export */ Blockly.Msg.MOVE_TO_POINTER_EXTENDED_FIELD_2 = "to mouse pointer at";
/** @export */ Blockly.Msg.MOVE_TO_POINTER_EXTENDED_FIELD_3 = "pixels per second";
/** @export */ Blockly.Msg.MOVE_TO_POINTER_EXTENDED_FIELD_4 = "max time (ms)";
/** @export */ Blockly.Msg.MOVE_TO_POINTER_EXTENDED_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.html#moveToPointer";
/** @export */ Blockly.Msg.MOVE_TO_POINTER_EXTENDED_TOOLTIP = "Move the object to the pointer at the given speed";
/** @export */ Blockly.Msg.MOVE_TO_POINTER_FIELD_1 = "move game object";
/** @export */ Blockly.Msg.MOVE_TO_POINTER_FIELD_2 = "to mouse pointer at";
/** @export */ Blockly.Msg.MOVE_TO_POINTER_FIELD_3 = "pixels per second";
/** @export */ Blockly.Msg.MOVE_TO_POINTER_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.html#moveToPointer";
/** @export */ Blockly.Msg.MOVE_TO_POINTER_TOOLTIP = "Move the object to the pointer at the given speed";
/** @export */ Blockly.Msg.MOVE_UP_FIELD_1 = "move";
/** @export */ Blockly.Msg.MOVE_UP_FIELD_2 = "up";
/** @export */ Blockly.Msg.MOVE_UP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#moveUp";
/** @export */ Blockly.Msg.MOVE_UP_TOOLTIP = "Moves this sprite up one place in the display order. If sprites overlap, it will be more likely to display on top of others.";
/** @export */ Blockly.Msg.NEW_VARIABLE = "Create variable...";
/** @export */ Blockly.Msg.NEW_VARIABLE_TITLE = "New variable name:";
/** @export */ Blockly.Msg.NUMBER_LIST_FIELD_1 = "create a list with every number from";
/** @export */ Blockly.Msg.NUMBER_LIST_FIELD_2 = "to";
/** @export */ Blockly.Msg.NUMBER_LIST_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.ArrayUtils.html#_numberArray";
/** @export */ Blockly.Msg.NUMBER_LIST_STEP_FIELD_1 = "create a list from";
/** @export */ Blockly.Msg.NUMBER_LIST_STEP_FIELD_2 = "to";
/** @export */ Blockly.Msg.NUMBER_LIST_STEP_FIELD_3 = "stepping by";
/** @export */ Blockly.Msg.NUMBER_LIST_STEP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.ArrayUtils.html#_numberArrayStep";
/** @export */ Blockly.Msg.NUMBER_LIST_STEP_TOOLTIP = "Creates a list in the given range, counting up by a specified value. Does NOT include the end of the range.";
/** @export */ Blockly.Msg.NUMBER_LIST_TOOLTIP = "Creates a list of numbers, in order within the specified range, including the start and end.";
/** @export */ Blockly.Msg.OBJECT_INCAMERA_FIELD_1 = "is";
/** @export */ Blockly.Msg.OBJECT_INCAMERA_FIELD_2 = "in camera?";
/** @export */ Blockly.Msg.OBJECT_INCAMERA_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Component.InCamera.html";
/** @export */ Blockly.Msg.OBJECT_INCAMERA_TOOLTIP = "Checks if an object is inside the boundaries of the camera.";
/** @export */ Blockly.Msg.OBJECT_SET_TO_FIELD_1 = "for";
/** @export */ Blockly.Msg.OBJECT_SET_TO_FIELD_2 = "set x to";
/** @export */ Blockly.Msg.OBJECT_SET_TO_FIELD_3 = "set y to";
/** @export */ Blockly.Msg.OBJECT_SET_TO_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Point.html#setTo";
/** @export */ Blockly.Msg.OBJECT_SET_TO_TOOLTIP = "Sets the x and y fields of an object.";
/** @export */ Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
/** @export */ Blockly.Msg.OUT_OF_BOUNDS_FAINT_FIELD_1 = "make";
/** @export */ Blockly.Msg.OUT_OF_BOUNDS_FAINT_FIELD_2 = "get deleted if it leaves the world?";
/** @export */ Blockly.Msg.OUT_OF_BOUNDS_FAINT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#outOfBoundsKill";
/** @export */ Blockly.Msg.OUT_OF_BOUNDS_FAINT_TOOLTIP = "Will automatically destroy this object if it goes outside the world bounds. Warning: this will not work on objects that are not checking to see if they are inside the world.";
/** @export */ Blockly.Msg.OUT_OF_BOUNDS_KILL_FIELD_1 = "make";
/** @export */ Blockly.Msg.OUT_OF_BOUNDS_KILL_FIELD_2 = "get deleted if it leaves the world?";
/** @export */ Blockly.Msg.OUT_OF_BOUNDS_KILL_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#outOfBoundsKill";
/** @export */ Blockly.Msg.OUT_OF_BOUNDS_KILL_TOOLTIP = "Will automatically destroy this object if it goes outside the world bounds. Warning: this will not work on objects that are not checking to see if they are inside the world.";
/** @export */ Blockly.Msg.PHASER_SIMPLE_INIT_FIELD_1 = "run phaser";
/** @export */ Blockly.Msg.PHASER_SIMPLE_INIT_FIELD_2 = "width";
/** @export */ Blockly.Msg.PHASER_SIMPLE_INIT_FIELD_3 = "height";
/** @export */ Blockly.Msg.PHASER_SIMPLE_INIT_FIELD_4 = "on preload do";
/** @export */ Blockly.Msg.PHASER_SIMPLE_INIT_FIELD_5 = "on create do";
/** @export */ Blockly.Msg.PHASER_SIMPLE_INIT_FIELD_6 = "on update do";
/** @export */ Blockly.Msg.PHASER_SIMPLE_INIT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Game.html";
/** @export */ Blockly.Msg.PHASER_SIMPLE_INIT_TOOLTIP = "Create a Phaser Game with given width and height.";
/** @export */ Blockly.Msg.PLAY_ANIMATION_FIELD_1 = "play animation";
/** @export */ Blockly.Msg.PLAY_ANIMATION_FIELD_2 = "on";
/** @export */ Blockly.Msg.PLAY_ANIMATION_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#play";
/** @export */ Blockly.Msg.PLAY_ANIMATION_TOOLTIP = "Starts playing an animation on the given sprite.";
/** @export */ Blockly.Msg.PLAY_ANIMATION_VI_FIELD_1 = "play animation";
/** @export */ Blockly.Msg.PLAY_ANIMATION_VI_FIELD_2 = "on";
/** @export */ Blockly.Msg.PLAY_ANIMATION_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#play";
/** @export */ Blockly.Msg.PLAY_ANIMATION_VI_TOOLTIP = "Plays an animation on the given sprite.";
/** @export */ Blockly.Msg.PLAY_SOUND_FIELD_1 = "play sound";
/** @export */ Blockly.Msg.PLAY_SOUND_FIELD_2 = "at volume";
/** @export */ Blockly.Msg.PLAY_SOUND_FIELD_3 = "looping";
/** @export */ Blockly.Msg.PLAY_SOUND_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.SoundManager.html#play";
/** @export */ Blockly.Msg.PLAY_SOUND_TOOLTIP = "Plays a sound that has been created. The volume goes from 0 to 1.";
/** @export */ Blockly.Msg.POINTS_ADD_FIELD_1 = "add points";
/** @export */ Blockly.Msg.POINTS_ADD_FIELD_2 = "and";
/** @export */ Blockly.Msg.POINTS_ADD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Point.html#.add";
/** @export */ Blockly.Msg.POINTS_ADD_TOOLTIP = "Adds the two points and returns the result";
/** @export */ Blockly.Msg.POINTS_ANGLE_BETWEEN_FIELD_1 = "angle between";
/** @export */ Blockly.Msg.POINTS_ANGLE_BETWEEN_FIELD_2 = "and";
/** @export */ Blockly.Msg.POINTS_ANGLE_BETWEEN_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Point.html#.angle";
/** @export */ Blockly.Msg.POINTS_ANGLE_BETWEEN_TOOLTIP = "Returns the angle in radians between the two point objects";
/** @export */ Blockly.Msg.POINTS_DISTANCE_FIELD_1 = "distance between";
/** @export */ Blockly.Msg.POINTS_DISTANCE_FIELD_2 = "and";
/** @export */ Blockly.Msg.POINTS_DISTANCE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Point.html#.distance";
/** @export */ Blockly.Msg.POINTS_DISTANCE_TOOLTIP = "Returns the distance between the two point objects";
/** @export */ Blockly.Msg.POINTS_DIVIDE_FIELD_1 = "divide";
/** @export */ Blockly.Msg.POINTS_DIVIDE_FIELD_2 = "and";
/** @export */ Blockly.Msg.POINTS_DIVIDE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Point.html#.divide";
/** @export */ Blockly.Msg.POINTS_DIVIDE_TOOLTIP = "Returns a new point p = [a.x / b.x, a.y / b.y]";
/** @export */ Blockly.Msg.POINTS_EQUALS_FIELD_1 = "is equal to";
/** @export */ Blockly.Msg.POINTS_EQUALS_FIELD_2 = "?";
/** @export */ Blockly.Msg.POINTS_EQUALS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Point.html#.equals";
/** @export */ Blockly.Msg.POINTS_EQUALS_TOOLTIP = "Determines if two points are equal";
/** @export */ Blockly.Msg.POINTS_INTERPOLATE_FIELD_1 = "interpolate between A";
/** @export */ Blockly.Msg.POINTS_INTERPOLATE_FIELD_2 = "and B";
/** @export */ Blockly.Msg.POINTS_INTERPOLATE_FIELD_3 = "percent to B";
/** @export */ Blockly.Msg.POINTS_INTERPOLATE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Point.html#.interpolate";
/** @export */ Blockly.Msg.POINTS_INTERPOLATE_TOOLTIP = "Interpolate between two points, the percent (0.0 - 1.0) determines how far towards the second point (1 - F) * A + F * B";
/** @export */ Blockly.Msg.POINTS_MULTIPLY_FIELD_1 = "multiply";
/** @export */ Blockly.Msg.POINTS_MULTIPLY_FIELD_2 = "and";
/** @export */ Blockly.Msg.POINTS_MULTIPLY_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Point.html#.multiply";
/** @export */ Blockly.Msg.POINTS_MULTIPLY_TOOLTIP = "Multiply two points";
/** @export */ Blockly.Msg.POINTS_NEGATE_FIELD_1 = "negate";
/** @export */ Blockly.Msg.POINTS_NEGATE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Point.html#.negative";
/** @export */ Blockly.Msg.POINTS_NEGATE_TOOLTIP = "Negate the point";
/** @export */ Blockly.Msg.POINTS_NORMALIZE_FIELD_1 = "normalize";
/** @export */ Blockly.Msg.POINTS_NORMALIZE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Point.html#.normalize";
/** @export */ Blockly.Msg.POINTS_NORMALIZE_TOOLTIP = "Normalize the point (make unit length)";
/** @export */ Blockly.Msg.POINTS_PERPENDICULAR_FIELD_1 = "find pependicular vector to";
/** @export */ Blockly.Msg.POINTS_PERPENDICULAR_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Point.html#.perp";
/** @export */ Blockly.Msg.POINTS_PERPENDICULAR_TOOLTIP = "Find a perpendicular vector to this point";
/** @export */ Blockly.Msg.POINTS_SUBTRACT_FIELD_1 = "subtract points";
/** @export */ Blockly.Msg.POINTS_SUBTRACT_FIELD_2 = "and";
/** @export */ Blockly.Msg.POINTS_SUBTRACT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Point.html#.subtract";
/** @export */ Blockly.Msg.POINTS_SUBTRACT_TOOLTIP = "Adds the two points and returns the result";
/** @export */ Blockly.Msg.POINT_CREATE_FIELD_1 = "make point";
/** @export */ Blockly.Msg.POINT_CREATE_FIELD_2 = "x";
/** @export */ Blockly.Msg.POINT_CREATE_FIELD_3 = "y";
/** @export */ Blockly.Msg.POINT_CREATE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Point.html";
/** @export */ Blockly.Msg.POINT_CREATE_TOOLTIP = "Defines a point which represents a location in 2D";
/** @export */ Blockly.Msg.POINT_GET_ELEMENT_ELEMENT_DROPDOWN_1 = "x";
/** @export */ Blockly.Msg.POINT_GET_ELEMENT_ELEMENT_DROPDOWN_2 = "y";
/** @export */ Blockly.Msg.POINT_GET_ELEMENT_FIELD_1 = "get point.";
/** @export */ Blockly.Msg.POINT_GET_ELEMENT_FIELD_2 = "of";
/** @export */ Blockly.Msg.POINT_GET_ELEMENT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Point.html";
/** @export */ Blockly.Msg.POINT_GET_ELEMENT_TOOLTIP = "Defines a point which represents a location in 2D";
/** @export */ Blockly.Msg.POINT_SET_ELEMENT_ELEMENT_DROPDOWN_1 = "x";
/** @export */ Blockly.Msg.POINT_SET_ELEMENT_ELEMENT_DROPDOWN_2 = "y";
/** @export */ Blockly.Msg.POINT_SET_ELEMENT_FIELD_1 = "set point.";
/** @export */ Blockly.Msg.POINT_SET_ELEMENT_FIELD_2 = "of";
/** @export */ Blockly.Msg.POINT_SET_ELEMENT_FIELD_3 = "to";
/** @export */ Blockly.Msg.POINT_SET_ELEMENT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Point.html";
/** @export */ Blockly.Msg.POINT_SET_ELEMENT_TOOLTIP = "Defines a point which represents a location in 2D";
/** @export */ Blockly.Msg.POINT_SET_MAGNITUDE_FIELD_1 = "set magnitude for";
/** @export */ Blockly.Msg.POINT_SET_MAGNITUDE_FIELD_2 = "to";
/** @export */ Blockly.Msg.POINT_SET_MAGNITUDE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Point.html#setMagnitude";
/** @export */ Blockly.Msg.POINT_SET_MAGNITUDE_TOOLTIP = "Sets the magnitude of the point";
/** @export */ Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "allow statements";
/** @export */ Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "with:";
/** @export */ Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
/** @export */ Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Run the user-defined function '%1'.";
/** @export */ Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
/** @export */ Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Run the user-defined function '%1' and use its output.";
/** @export */ Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "with:";
/** @export */ Blockly.Msg.PROCEDURES_CREATE_DO = "Create '%1'";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function...";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "do something";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "to";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Creates a function with no output.";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "return";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Creates a function with an output.";
/** @export */ Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Warning: This function has duplicate parameters.";
/** @export */ Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Highlight function definition";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "If a value is true, then return a second value.";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Warning: This block may be used only within a function definition.";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "input name:";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Add an input to the function.";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "inputs";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Add, remove, or reorder inputs to this function.";
/** @export */ Blockly.Msg.RANDOM_ANGLE_FIELD_1 = "get random angle";
/** @export */ Blockly.Msg.RANDOM_ANGLE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.RandomDataGenerator.html#angle";
/** @export */ Blockly.Msg.RANDOM_ANGLE_TOOLTIP = "Returns a random angle between -180 and 180.";
/** @export */ Blockly.Msg.RANDOM_PICK_FIELD_1 = "get random item from list";
/** @export */ Blockly.Msg.RANDOM_PICK_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.RandomDataGenerator.html#pick";
/** @export */ Blockly.Msg.RANDOM_PICK_TOOLTIP = "Returns a random member in a given list.";
/** @export */ Blockly.Msg.RANDOM_PICK_WEIGHTED_FIELD_1 = "get random item from list (weighted)";
/** @export */ Blockly.Msg.RANDOM_PICK_WEIGHTED_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.RandomDataGenerator.html#weightedPick";
/** @export */ Blockly.Msg.RANDOM_PICK_WEIGHTED_TOOLTIP = "Returns a random member in a given list. This version chooses items close to the start of the list more frequently.";
/** @export */ Blockly.Msg.RANDOM_REAL_FIELD_1 = "get random number";
/** @export */ Blockly.Msg.RANDOM_REAL_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.RandomDataGenerator.html#real";
/** @export */ Blockly.Msg.RANDOM_REAL_IN_RANGE_FIELD_1 = "get random number between";
/** @export */ Blockly.Msg.RANDOM_REAL_IN_RANGE_FIELD_2 = "and";
/** @export */ Blockly.Msg.RANDOM_REAL_IN_RANGE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.RandomDataGenerator.html#realInRange";
/** @export */ Blockly.Msg.RANDOM_REAL_IN_RANGE_TOOLTIP = "Returns a random real number in the specified range.";
/** @export */ Blockly.Msg.RANDOM_REAL_TOOLTIP = "Returns a random real number. This can be anywhere between 0 and 2^32 (about 4 billion).";
/** @export */ Blockly.Msg.RANDOM_SIGN_FIELD_1 = "get random sign";
/** @export */ Blockly.Msg.RANDOM_SIGN_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.RandomDataGenerator.html#sign";
/** @export */ Blockly.Msg.RANDOM_SIGN_TOOLTIP = "Returns either +1 or -1. For deciding if something needs to be positive or negative.";
/** @export */ Blockly.Msg.RECTANGLE_CREATE_FIELD_1 = "make rectangle";
/** @export */ Blockly.Msg.RECTANGLE_CREATE_FIELD_2 = "x";
/** @export */ Blockly.Msg.RECTANGLE_CREATE_FIELD_3 = "y";
/** @export */ Blockly.Msg.RECTANGLE_CREATE_FIELD_4 = "width";
/** @export */ Blockly.Msg.RECTANGLE_CREATE_FIELD_5 = "height";
/** @export */ Blockly.Msg.RECTANGLE_CREATE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Rectangle.html";
/** @export */ Blockly.Msg.RECTANGLE_CREATE_TOOLTIP = "Defines a rectangle, can be used for cropping, alignment and other tasks";
/** @export */ Blockly.Msg.REDO = "Redo";
/** @export */ Blockly.Msg.REFRESH_FRAME_FIELD_1 = "refresh frame of ";
/** @export */ Blockly.Msg.REFRESH_FRAME_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#refreshFrame";
/** @export */ Blockly.Msg.REFRESH_FRAME_TOOLTIP = "Refreshes the current frame data back to the parent Sprite and also resets the texture data.";
/** @export */ Blockly.Msg.REMOVE_CHILDREN_FIELD_1 = "remove all children from";
/** @export */ Blockly.Msg.REMOVE_CHILDREN_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#removeChildren";
/** @export */ Blockly.Msg.REMOVE_CHILDREN_TOOLTIP = "Removes all children from the parent. They will all stop moving together.";
/** @export */ Blockly.Msg.REMOVE_CHILDREN_VI_FIELD_1 = "remove all children from";
/** @export */ Blockly.Msg.REMOVE_CHILDREN_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#removeChildren";
/** @export */ Blockly.Msg.REMOVE_CHILDREN_VI_TOOLTIP = "Removes all children from the parent. They will all stop moving together.";
/** @export */ Blockly.Msg.REMOVE_CHILD_AT_FIELD_1 = "remove the child at index";
/** @export */ Blockly.Msg.REMOVE_CHILD_AT_FIELD_2 = "from";
/** @export */ Blockly.Msg.REMOVE_CHILD_AT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#removeChildAt";
/** @export */ Blockly.Msg.REMOVE_CHILD_AT_TOOLTIP = "Finds the child at the given index and removes it from its parent. It will no longer move with the parent.";
/** @export */ Blockly.Msg.REMOVE_CHILD_AT_VI_FIELD_1 = "remove the child at index";
/** @export */ Blockly.Msg.REMOVE_CHILD_AT_VI_FIELD_2 = "from";
/** @export */ Blockly.Msg.REMOVE_CHILD_AT_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#removeChildAt";
/** @export */ Blockly.Msg.REMOVE_CHILD_AT_VI_TOOLTIP = "Finds the child at the given index and removes it from its parent. It will no longer move with the parent.";
/** @export */ Blockly.Msg.REMOVE_CHILD_FIELD_1 = "remove child";
/** @export */ Blockly.Msg.REMOVE_CHILD_FIELD_2 = "from";
/** @export */ Blockly.Msg.REMOVE_CHILD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#removeChild";
/** @export */ Blockly.Msg.REMOVE_CHILD_TOOLTIP = "Makes this sprite/image stop being a child and moving with its parent.";
/** @export */ Blockly.Msg.REMOVE_CHILD_VI_FIELD_1 = "remove child";
/** @export */ Blockly.Msg.REMOVE_CHILD_VI_FIELD_2 = "from";
/** @export */ Blockly.Msg.REMOVE_CHILD_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#removeChild";
/** @export */ Blockly.Msg.REMOVE_CHILD_VI_TOOLTIP = "Makes this sprite/image stop being a child and moving with its parent.";
/** @export */ Blockly.Msg.REMOVE_COMMENT = "Remove Comment";
/** @export */ Blockly.Msg.REMOVE_FROM_GROUP_FIELD_1 = "remove";
/** @export */ Blockly.Msg.REMOVE_FROM_GROUP_FIELD_2 = "from group";
/** @export */ Blockly.Msg.REMOVE_FROM_GROUP_FIELD_3 = "destroy it too";
/** @export */ Blockly.Msg.REMOVE_FROM_GROUP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Group.html#remove";
/** @export */ Blockly.Msg.REMOVE_FROM_GROUP_TOOLTIP = "Removes an object from a group. Optionally, destroy it as well.";
/** @export */ Blockly.Msg.REMOVE_SOUND_FIELD_1 = "stop all sounds tagged";
/** @export */ Blockly.Msg.REMOVE_SOUND_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.SoundManager.html#removeByKey";
/** @export */ Blockly.Msg.REMOVE_SOUND_TOOLTIP = "Stops all sounds with the given tag.";
/** @export */ Blockly.Msg.RENAME_VARIABLE = "Rename variable...";
/** @export */ Blockly.Msg.RENAME_VARIABLE_TITLE = "Rename all '%1' variables to:";
/** @export */ Blockly.Msg.RESET_FIELD_1 = "reset object";
/** @export */ Blockly.Msg.RESET_FIELD_2 = "x";
/** @export */ Blockly.Msg.RESET_FIELD_3 = "y";
/** @export */ Blockly.Msg.RESET_FRAME_FIELD_1 = "reset the frame dimensions of";
/** @export */ Blockly.Msg.RESET_FRAME_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#resetFrame";
/** @export */ Blockly.Msg.RESET_FRAME_TOOLTIP = "Resets the texture frame dimensions that the sprite uses for rendering.";
/** @export */ Blockly.Msg.RESET_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#reset";
/** @export */ Blockly.Msg.RESET_TOOLTIP = "Gets most objects ready to play again in various ways and treats it like new. Specifically, moves it to a new position then makes sure it is visible, rendering, alive, and actually exists in the game world.";
/** @export */ Blockly.Msg.RESIZE_FRAME_FIELD_1 = "resize the frame of";
/** @export */ Blockly.Msg.RESIZE_FRAME_FIELD_2 = "to accomodate";
/** @export */ Blockly.Msg.RESIZE_FRAME_FIELD_3 = "Width";
/** @export */ Blockly.Msg.RESIZE_FRAME_FIELD_4 = "Height";
/** @export */ Blockly.Msg.RESIZE_FRAME_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#resizeFrame";
/** @export */ Blockly.Msg.RESIZE_FRAME_TOOLTIP = "Resizes the Frame dimensions that the Game Object uses for rendering. You shouldn't normally need to ever call this, but in the case of special texture types such as Video or BitmapData it can be useful to adjust the dimensions directly in this way.";
/** @export */ Blockly.Msg.REVIVE_FIELD_1 = "revive";
/** @export */ Blockly.Msg.REVIVE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#revive";
/** @export */ Blockly.Msg.REVIVE_TOOLTIP = "Brings a 'dead' Game Object back to life. Makes sure it counts as alive, existing, and visible. Will send an event named onRevived.";
/** @export */ Blockly.Msg.ROTATE_FIELD_1 = "rotate";
/** @export */ Blockly.Msg.ROTATE_FIELD_2 = "by";
/** @export */ Blockly.Msg.ROTATE_FIELD_3 = "degrees";
/** @export */ Blockly.Msg.ROTATE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#angle";
/** @export */ Blockly.Msg.ROTATE_TOOLTIP = "Rotates a game object by the given angle in degrees. Negative numbers will rotate it the opposite direction.";
/** @export */ Blockly.Msg.SEND_TO_BACK_FIELD_1 = "send";
/** @export */ Blockly.Msg.SEND_TO_BACK_FIELD_2 = "to the back";
/** @export */ Blockly.Msg.SEND_TO_BACK_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#sendToBack";
/** @export */ Blockly.Msg.SEND_TO_BACK_TOOLTIP = "Sends this sprite/image to the back of the display order. In case of overlapping sprites, it will draw behind everything else.";
/** @export */ Blockly.Msg.SET_ANIMATION_PROPERTY_FIELD_1 = "set animation.";
/** @export */ Blockly.Msg.SET_ANIMATION_PROPERTY_FIELD_2 = "on ";
/** @export */ Blockly.Msg.SET_ANIMATION_PROPERTY_FIELD_3 = "to";
/** @export */ Blockly.Msg.SET_ANIMATION_PROPERTY_FIELD_DROPDOWN_1 = "frame";
/** @export */ Blockly.Msg.SET_ANIMATION_PROPERTY_FIELD_DROPDOWN_2 = "frameName";
/** @export */ Blockly.Msg.SET_ANIMATION_PROPERTY_FIELD_DROPDOWN_3 = "paused";
/** @export */ Blockly.Msg.SET_ANIMATION_PROPERTY_FIELD_DROPDOWN_4 = "updateIfVisible";
/** @export */ Blockly.Msg.SET_ANIMATION_PROPERTY_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#destroy";
/** @export */ Blockly.Msg.SET_ANIMATION_PROPERTY_TOOLTIP = "Set a property from the animation manager on the object";
/** @export */ Blockly.Msg.SET_ANIMATION_PROPERTY_VI_FIELD_1 = "set animation.";
/** @export */ Blockly.Msg.SET_ANIMATION_PROPERTY_VI_FIELD_2 = "on ";
/** @export */ Blockly.Msg.SET_ANIMATION_PROPERTY_VI_FIELD_3 = "to";
/** @export */ Blockly.Msg.SET_ANIMATION_PROPERTY_VI_FIELD_DROPDOWN_1 = "paused";
/** @export */ Blockly.Msg.SET_ANIMATION_PROPERTY_VI_FIELD_DROPDOWN_2 = "updateIfVisible";
/** @export */ Blockly.Msg.SET_ANIMATION_PROPERTY_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#destroy";
/** @export */ Blockly.Msg.SET_ANIMATION_PROPERTY_VI_TOOLTIP = "Set a property from the animation manager on the object";
/** @export */ Blockly.Msg.SET_BODY_BOOLEAN_FIELD_ELEMENT_DROPDOWN_1 = "allowRotation";
/** @export */ Blockly.Msg.SET_BODY_BOOLEAN_FIELD_ELEMENT_DROPDOWN_2 = "allowGravity";
/** @export */ Blockly.Msg.SET_BODY_BOOLEAN_FIELD_ELEMENT_DROPDOWN_3 = "immovable";
/** @export */ Blockly.Msg.SET_BODY_BOOLEAN_FIELD_FIELD_1 = "set";
/** @export */ Blockly.Msg.SET_BODY_BOOLEAN_FIELD_FIELD_2 = "for";
/** @export */ Blockly.Msg.SET_BODY_BOOLEAN_FIELD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.Body.html";
/** @export */ Blockly.Msg.SET_BODY_BOOLEAN_FIELD_TOOLTIP = "Set the value of the specified boolean field";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_FIELD_1 = "set";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_FIELD_2 = "for";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_FIELD_3 = "to";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_FIELD_DROPDOWN_1 = "bounce";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_FIELD_DROPDOWN_2 = "gravity";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_FIELD_DROPDOWN_3 = "velocity";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_FIELD_DROPDOWN_4 = "acceleration";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_FIELD_DROPDOWN_5 = "drag";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_FIELD_DROPDOWN_6 = "friction";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_FIELD_DROPDOWN_7 = "maxVelocity";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_FIELD_DROPDOWN_8 = "worldBounce";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.Body.html";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_CLASS_VI_TOOLTIP = "Set the value of the body point field";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_ELEMENT_DROPDOWN_1 = "x";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_ELEMENT_DROPDOWN_2 = "y";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_1 = "Set";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_2 = "for";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_3 = "to";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_DROPDOWN_1 = "bounce";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_DROPDOWN_2 = "gravity";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_DROPDOWN_3 = "velocity";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_DROPDOWN_4 = "acceleration";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_DROPDOWN_5 = "drag";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_DROPDOWN_6 = "friction";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_DROPDOWN_7 = "maxVelocity";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_FIELD_DROPDOWN_8 = "worldBounce";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.Body.html";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_TOOLTIP = "Set the x or y value of the specified field";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_VI_ELEMENT_DROPDOWN_1 = "x";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_VI_ELEMENT_DROPDOWN_2 = "y";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_1 = "set";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_2 = "for";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_3 = "to";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_1 = "bounce";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_2 = "gravity";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_3 = "velocity";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_4 = "acceleration";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_5 = "drag";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_6 = "friction";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_7 = "maxVelocity";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_VI_FIELD_DROPDOWN_8 = "worldBounce";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.Body.html";
/** @export */ Blockly.Msg.SET_BODY_FIELD_POINT_VI_TOOLTIP = "Set the x or y value of the specified field";
/** @export */ Blockly.Msg.SET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_1 = "mass";
/** @export */ Blockly.Msg.SET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_2 = "rotation (degrees)";
/** @export */ Blockly.Msg.SET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_3 = "angularAcceleration";
/** @export */ Blockly.Msg.SET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_4 = "angularVelocity";
/** @export */ Blockly.Msg.SET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_5 = "maxAngularVelocity";
/** @export */ Blockly.Msg.SET_BODY_NUMERIC_FIELD_ELEMENT_DROPDOWN_6 = "angularDrag";
/** @export */ Blockly.Msg.SET_BODY_NUMERIC_FIELD_FIELD_1 = "set";
/** @export */ Blockly.Msg.SET_BODY_NUMERIC_FIELD_FIELD_2 = "for";
/** @export */ Blockly.Msg.SET_BODY_NUMERIC_FIELD_FIELD_3 = "to";
/** @export */ Blockly.Msg.SET_BODY_NUMERIC_FIELD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.Body.html";
/** @export */ Blockly.Msg.SET_BODY_NUMERIC_FIELD_TOOLTIP = "Set the value of the specified numeric field";
/** @export */ Blockly.Msg.SET_CHILD_INDEX_FIELD_1 = "move the child";
/** @export */ Blockly.Msg.SET_CHILD_INDEX_FIELD_2 = "of";
/** @export */ Blockly.Msg.SET_CHILD_INDEX_FIELD_3 = "to index";
/** @export */ Blockly.Msg.SET_CHILD_INDEX_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#setChildIndex";
/** @export */ Blockly.Msg.SET_CHILD_INDEX_TOOLTIP = "Moves the child to a specific index on its parent. This will affect how you find it in the future.";
/** @export */ Blockly.Msg.SET_CHILD_INDEX_VI_FIELD_1 = "move the child";
/** @export */ Blockly.Msg.SET_CHILD_INDEX_VI_FIELD_2 = "of";
/** @export */ Blockly.Msg.SET_CHILD_INDEX_VI_FIELD_3 = "to index";
/** @export */ Blockly.Msg.SET_CHILD_INDEX_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#setChildIndex";
/** @export */ Blockly.Msg.SET_CHILD_INDEX_VI_TOOLTIP = "Moves the child to a specific index on its parent. This will affect how you find it in the future.";
/** @export */ Blockly.Msg.SET_EMIT_FROM_CORD_DROPDOWN_1 = "X";
/** @export */ Blockly.Msg.SET_EMIT_FROM_CORD_DROPDOWN_2 = "Y";
/** @export */ Blockly.Msg.SET_EMIT_FROM_FIELD_1 = "on";
/** @export */ Blockly.Msg.SET_EMIT_FROM_FIELD_2 = "set emit from";
/** @export */ Blockly.Msg.SET_EMIT_FROM_FIELD_3 = "to";
/** @export */ Blockly.Msg.SET_EMIT_FROM_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Particles.Arcade.Emitter.html#emitX";
/** @export */ Blockly.Msg.SET_EMIT_FROM_TOOLTIP = "Set where the particles emit from, by individual coordinate.";
/** @export */ Blockly.Msg.SET_FRAME_FIELD_1 = "Set Current Frame # For";
/** @export */ Blockly.Msg.SET_FRAME_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#frame";
/** @export */ Blockly.Msg.SET_FRAME_TOOLTIP = "Jumps to a given animation frame.";
/** @export */ Blockly.Msg.SET_FRAME_VI_FIELD_1 = "set current frame # to";
/** @export */ Blockly.Msg.SET_FRAME_VI_FIELD_2 = "for";
/** @export */ Blockly.Msg.SET_FRAME_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Animation.html#frame";
/** @export */ Blockly.Msg.SET_FRAME_VI_TOOLTIP = "Sets the current frame number on the specified object";
/** @export */ Blockly.Msg.SET_GAME_OBJECT_BOOLEAN_FIELD_FIELD_1 = "set boolean field";
/** @export */ Blockly.Msg.SET_GAME_OBJECT_BOOLEAN_FIELD_FIELD_2 = "of";
/** @export */ Blockly.Msg.SET_GAME_OBJECT_BOOLEAN_FIELD_FIELD_3 = "to";
/** @export */ Blockly.Msg.SET_GAME_OBJECT_BOOLEAN_FIELD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html";
/** @export */ Blockly.Msg.SET_GAME_OBJECT_BOOLEAN_FIELD_TOOLTIP = "Set a boolean property on the object";
/** @export */ Blockly.Msg.SET_GAME_OBJECT_NUMERIC_FIELD_FIELD_1 = "set numeric field";
/** @export */ Blockly.Msg.SET_GAME_OBJECT_NUMERIC_FIELD_FIELD_2 = "of";
/** @export */ Blockly.Msg.SET_GAME_OBJECT_NUMERIC_FIELD_FIELD_3 = "to";
/** @export */ Blockly.Msg.SET_GAME_OBJECT_NUMERIC_FIELD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html";
/** @export */ Blockly.Msg.SET_GAME_OBJECT_NUMERIC_FIELD_TOOLTIP = "Set a numeric property on the object";
/** @export */ Blockly.Msg.SET_GAME_OBJECT_POINT_FIELD_FIELD_1 = "set point field";
/** @export */ Blockly.Msg.SET_GAME_OBJECT_POINT_FIELD_FIELD_2 = "of";
/** @export */ Blockly.Msg.SET_GAME_OBJECT_POINT_FIELD_FIELD_3 = "to";
/** @export */ Blockly.Msg.SET_GAME_OBJECT_POINT_FIELD_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html";
/** @export */ Blockly.Msg.SET_GAME_OBJECT_POINT_FIELD_TOOLTIP = "Set a point property on the object";
/** @export */ Blockly.Msg.SET_IMMOVABLE_FIELD_1 = "Set Immovable for Object";
/** @export */ Blockly.Msg.SET_IMMOVABLE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.Body.html#immovable";
/** @export */ Blockly.Msg.SET_IMMOVABLE_TOOLTIP = "Immovable bodies don't recoil from impacts at all. If two immovable bodies overlap or collide, it is ignored. Yes, we're sidestepping the question of unstoppable force versus immovable object.";
/** @export */ Blockly.Msg.SET_OBJECT_ANCHOR_FIELD_1 = "set anchor for";
/** @export */ Blockly.Msg.SET_OBJECT_ANCHOR_FIELD_2 = "to";
/** @export */ Blockly.Msg.SET_OBJECT_ANCHOR_FIELD_3 = "x";
/** @export */ Blockly.Msg.SET_OBJECT_ANCHOR_FIELD_4 = "y";
/** @export */ Blockly.Msg.SET_OBJECT_ANCHOR_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#anchor";
/** @export */ Blockly.Msg.SET_OBJECT_ANCHOR_TOOLTIP = "Sets an object's anchor.";
/** @export */ Blockly.Msg.SET_OBJECT_WIDTH_FIELD_1 = "set width of ";
/** @export */ Blockly.Msg.SET_OBJECT_WIDTH_HELP_URL = "https://photonstorm.github.io/phaser-ce/PIXI.Sprite.html#width";
/** @export */ Blockly.Msg.SET_OBJECT_WIDTH_TOOLTIP = "Sets the width of an object.";
/** @export */ Blockly.Msg.SET_POS_FIELD_1 = "Set";
/** @export */ Blockly.Msg.SET_POS_FIELD_2 = "on";
/** @export */ Blockly.Msg.SET_POS_FIELD_3 = "to";
/** @export */ Blockly.Msg.SET_POS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#position";
/** @export */ Blockly.Msg.SET_POS_PARAM_DROPDOWN_1 = "x";
/** @export */ Blockly.Msg.SET_POS_PARAM_DROPDOWN_2 = "y";
/** @export */ Blockly.Msg.SET_POS_TOOLTIP = "Sets the individual x or y coordinate of an object.";
/** @export */ Blockly.Msg.SET_ROTATION_FIELD_1 = "set the rotation of";
/** @export */ Blockly.Msg.SET_ROTATION_FIELD_2 = "to";
/** @export */ Blockly.Msg.SET_ROTATION_FIELD_3 = "degrees";
/** @export */ Blockly.Msg.SET_ROTATION_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#angle";
/** @export */ Blockly.Msg.SET_ROTATION_TOOLTIP = "Directly sets the rotation (in degrees) of this game object to the given value.";
/** @export */ Blockly.Msg.SET_SCALE_FIELD_1 = "Scale";
/** @export */ Blockly.Msg.SET_SCALE_FIELD_2 = "by";
/** @export */ Blockly.Msg.SET_SCALE_FIELD_3 = "X";
/** @export */ Blockly.Msg.SET_SCALE_FIELD_4 = "Y";
/** @export */ Blockly.Msg.SET_SCALE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#scale";
/** @export */ Blockly.Msg.SET_SCALE_MIN_MAX_FIELD_1 = "set scale constraints on";
/** @export */ Blockly.Msg.SET_SCALE_MIN_MAX_FIELD_2 = "min X";
/** @export */ Blockly.Msg.SET_SCALE_MIN_MAX_FIELD_3 = "min Y";
/** @export */ Blockly.Msg.SET_SCALE_MIN_MAX_FIELD_4 = "max X";
/** @export */ Blockly.Msg.SET_SCALE_MIN_MAX_FIELD_5 = "max Y";
/** @export */ Blockly.Msg.SET_SCALE_MIN_MAX_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#setScaleMinMax";
/** @export */ Blockly.Msg.SET_SCALE_MIN_MAX_TOOLTIP = "Limits how far this sprite will scale based on its parent.";
/** @export */ Blockly.Msg.SET_SCALE_TOOLTIP = "Sets the given object's width and height.";
/** @export */ Blockly.Msg.SET_SCALE_VI_FIELD_1 = "scale";
/** @export */ Blockly.Msg.SET_SCALE_VI_FIELD_2 = "by";
/** @export */ Blockly.Msg.SET_SCALE_VI_FIELD_3 = "x";
/** @export */ Blockly.Msg.SET_SCALE_VI_FIELD_4 = "y";
/** @export */ Blockly.Msg.SET_SCALE_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#scale";
/** @export */ Blockly.Msg.SET_SCALE_VI_TOOLTIP = "Sets the given object's width and height.";
/** @export */ Blockly.Msg.SET_SOUND_BOOLEAN_MEMBER_FIELD_1 = "set";
/** @export */ Blockly.Msg.SET_SOUND_BOOLEAN_MEMBER_FIELD_2 = "of";
/** @export */ Blockly.Msg.SET_SOUND_BOOLEAN_MEMBER_FIELD_3 = "to";
/** @export */ Blockly.Msg.SET_SOUND_BOOLEAN_MEMBER_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sound.html";
/** @export */ Blockly.Msg.SET_SOUND_BOOLEAN_MEMBER_TOOLTIP = "Set the selected member on the Sound";
/** @export */ Blockly.Msg.SET_SOUND_NUMERIC_MEMBER_FIELD_1 = "set";
/** @export */ Blockly.Msg.SET_SOUND_NUMERIC_MEMBER_FIELD_2 = "of";
/** @export */ Blockly.Msg.SET_SOUND_NUMERIC_MEMBER_FIELD_3 = "to";
/** @export */ Blockly.Msg.SET_SOUND_NUMERIC_MEMBER_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sound.html";
/** @export */ Blockly.Msg.SET_SOUND_NUMERIC_MEMBER_TOOLTIP = "Set the selected member on the Sound";
/** @export */ Blockly.Msg.SET_SPRITE_FRAME_FIELD_1 = "Set texture frame of";
/** @export */ Blockly.Msg.SET_SPRITE_FRAME_FIELD_2 = "to";
/** @export */ Blockly.Msg.SET_SPRITE_FRAME_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#setFrame";
/** @export */ Blockly.Msg.SET_SPRITE_FRAME_TOOLTIP = "Sets the Texture frame the Sprite uses for rendering. This is primarily an internal method used by Sprite.loadTexture, although you may call it directly.";
/** @export */ Blockly.Msg.SET_TEXTURE_FIELD_1 = "Set texture of";
/** @export */ Blockly.Msg.SET_TEXTURE_FIELD_2 = "to";
/** @export */ Blockly.Msg.SET_TEXTURE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#setTexture";
/** @export */ Blockly.Msg.SET_TEXTURE_TOOLTIP = "Sets the texture of the sprite. Be warned that this doesn't remove or destroy the previous texture this Sprite was using. Note that this takes a specific texture, not a tag.";
/** @export */ Blockly.Msg.SET_TEXT_FIELD_1 = "set text for";
/** @export */ Blockly.Msg.SET_TEXT_FIELD_2 = "to";
/** @export */ Blockly.Msg.SET_TEXT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Text.html#setText";
/** @export */ Blockly.Msg.SET_TEXT_TOOLTIP = "Sets what phaser text will display on the screen.";
/** @export */ Blockly.Msg.SET_TEXT_VI_FIELD_1 = "set text for";
/** @export */ Blockly.Msg.SET_TEXT_VI_FIELD_2 = "to";
/** @export */ Blockly.Msg.SET_TEXT_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Text.html#setText";
/** @export */ Blockly.Msg.SET_TEXT_VI_TOOLTIP = "Sets what phaser text will display on the screen.";
/** @export */ Blockly.Msg.SET_VELOCITY_FIELD_1 = "Set Velocity";
/** @export */ Blockly.Msg.SET_VELOCITY_FIELD_2 = "on";
/** @export */ Blockly.Msg.SET_VELOCITY_FIELD_3 = "to";
/** @export */ Blockly.Msg.SET_VELOCITY_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.Arcade.Body.html#velocity";
/** @export */ Blockly.Msg.SET_VELOCITY_TOOLTIP = "Sets an objects velocity. This is a combination of speed and direction.";
/** @export */ Blockly.Msg.SET_WORLD_BOUNDS_FIELD_1 = "set world bounds";
/** @export */ Blockly.Msg.SET_WORLD_BOUNDS_FIELD_2 = "x:";
/** @export */ Blockly.Msg.SET_WORLD_BOUNDS_FIELD_3 = "y:";
/** @export */ Blockly.Msg.SET_WORLD_BOUNDS_FIELD_4 = "width:";
/** @export */ Blockly.Msg.SET_WORLD_BOUNDS_FIELD_5 = "height:";
/** @export */ Blockly.Msg.SET_WORLD_BOUNDS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.World.html#setBounds";
/** @export */ Blockly.Msg.SET_WORLD_BOUNDS_TOOLTIP = "Updates the size of the world and sets the leftmost corner";
/** @export */ Blockly.Msg.SOUND_FADE_IN_FIELD_1 = "fade in sound";
/** @export */ Blockly.Msg.SOUND_FADE_IN_FIELD_2 = "over";
/** @export */ Blockly.Msg.SOUND_FADE_IN_FIELD_3 = "milliseconds loop";
/** @export */ Blockly.Msg.SOUND_FADE_IN_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sound.html#fadeIn";
/** @export */ Blockly.Msg.SOUND_FADE_IN_TOOLTIP = "Starts/Restarts the sound sets the volume to zero and increases from 0 to 1 over duration";
/** @export */ Blockly.Msg.SOUND_FADE_OUT_FIELD_1 = "fade out sound";
/** @export */ Blockly.Msg.SOUND_FADE_OUT_FIELD_2 = "over";
/** @export */ Blockly.Msg.SOUND_FADE_OUT_FIELD_3 = "milliseconds";
/** @export */ Blockly.Msg.SOUND_FADE_OUT_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sound.html#fadeOut";
/** @export */ Blockly.Msg.SOUND_FADE_OUT_TOOLTIP = "Fades the sounds volume to 0 over the given duration";
/** @export */ Blockly.Msg.SOUND_FADE_TO_FIELD_1 = "fade sound";
/** @export */ Blockly.Msg.SOUND_FADE_TO_FIELD_2 = "over";
/** @export */ Blockly.Msg.SOUND_FADE_TO_FIELD_3 = "milliseconds";
/** @export */ Blockly.Msg.SOUND_FADE_TO_FIELD_4 = "to volume";
/** @export */ Blockly.Msg.SOUND_FADE_TO_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sound.html#fadeTo";
/** @export */ Blockly.Msg.SOUND_FADE_TO_TOOLTIP = "Fades the sounds volume to a given volume over the given duration";
/** @export */ Blockly.Msg.SOUND_LOOP_FULL_FIELD_1 = "loop sound";
/** @export */ Blockly.Msg.SOUND_LOOP_FULL_FIELD_2 = "at volume";
/** @export */ Blockly.Msg.SOUND_LOOP_FULL_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sound.html#loopFull";
/** @export */ Blockly.Msg.SOUND_LOOP_FULL_TOOLTIP = "Loops the entire sound";
/** @export */ Blockly.Msg.SOUND_PAUSE_FIELD_1 = "pause sound";
/** @export */ Blockly.Msg.SOUND_PAUSE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sound.html#pause";
/** @export */ Blockly.Msg.SOUND_PAUSE_TOOLTIP = "Pause the sound";
/** @export */ Blockly.Msg.SOUND_PLAY_FIELD_1 = "play sound";
/** @export */ Blockly.Msg.SOUND_PLAY_FIELD_2 = "starting at position";
/** @export */ Blockly.Msg.SOUND_PLAY_FIELD_3 = "at volume";
/** @export */ Blockly.Msg.SOUND_PLAY_FIELD_4 = "loop";
/** @export */ Blockly.Msg.SOUND_PLAY_FIELD_5 = "force restart";
/** @export */ Blockly.Msg.SOUND_PLAY_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sound.html#play";
/** @export */ Blockly.Msg.SOUND_PLAY_TOOLTIP = "Play the sound";
/** @export */ Blockly.Msg.SOUND_RESTART_FIELD_1 = "restart sound";
/** @export */ Blockly.Msg.SOUND_RESTART_FIELD_2 = "starting at position";
/** @export */ Blockly.Msg.SOUND_RESTART_FIELD_3 = "at volume";
/** @export */ Blockly.Msg.SOUND_RESTART_FIELD_4 = "loop";
/** @export */ Blockly.Msg.SOUND_RESTART_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sound.html#restart";
/** @export */ Blockly.Msg.SOUND_RESTART_TOOLTIP = "Restart the entire sound";
/** @export */ Blockly.Msg.SOUND_RESUME_FIELD_1 = "resume sound";
/** @export */ Blockly.Msg.SOUND_RESUME_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sound.html#resume";
/** @export */ Blockly.Msg.SOUND_RESUME_TOOLTIP = "Resumes the sound";
/** @export */ Blockly.Msg.SOUND_STOP_FIELD_1 = "stop sound";
/** @export */ Blockly.Msg.SOUND_STOP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sound.html#stop";
/** @export */ Blockly.Msg.SOUND_STOP_TOOLTIP = "Stops the sound";
/** @export */ Blockly.Msg.SPRITE_OVERLAP_FIELD_1 = "does";
/** @export */ Blockly.Msg.SPRITE_OVERLAP_FIELD_2 = "overlap with";
/** @export */ Blockly.Msg.SPRITE_OVERLAP_FIELD_3 = "?";
/** @export */ Blockly.Msg.SPRITE_OVERLAP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#overlap";
/** @export */ Blockly.Msg.SPRITE_OVERLAP_TOOLTIP = "Checks to see if the rectangular bounds of the two given sprites overlap. Not a good substitute for the physics engine, but fine for something like UI.";
/** @export */ Blockly.Msg.START_ARCADE_PHYSICS_FIELD_1 = "start arcade physics system";
/** @export */ Blockly.Msg.START_ARCADE_PHYSICS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.html#startSystem";
/** @export */ Blockly.Msg.START_ARCADE_PHYSICS_TOOLTIP = "Start the specified arcade physics system";
/** @export */ Blockly.Msg.START_PHASER_FOR_STATES_FIELD_1 = "start phaser for states with";
/** @export */ Blockly.Msg.START_PHASER_FOR_STATES_FIELD_2 = "width";
/** @export */ Blockly.Msg.START_PHASER_FOR_STATES_FIELD_3 = "height";
/** @export */ Blockly.Msg.START_PHASER_FOR_STATES_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Game.html";
/** @export */ Blockly.Msg.START_PHASER_FOR_STATES_TOOLTIP = "Create a Phaser game using explicit states.";
/** @export */ Blockly.Msg.START_PHYSICS_FIELD_1 = "start";
/** @export */ Blockly.Msg.START_PHYSICS_FIELD_2 = "physics system";
/** @export */ Blockly.Msg.START_PHYSICS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Physics.html#startSystem";
/** @export */ Blockly.Msg.START_PHYSICS_SYSTEM_DROPDOWN_1 = "Arcade";
/** @export */ Blockly.Msg.START_PHYSICS_SYSTEM_DROPDOWN_2 = "P2JS";
/** @export */ Blockly.Msg.START_PHYSICS_TOOLTIP = "Start physics with the specified system";
/** @export */ Blockly.Msg.STATEMANAGER_ADD_STATE_FIELD_1 = "add state";
/** @export */ Blockly.Msg.STATEMANAGER_ADD_STATE_FIELD_2 = "tagged";
/** @export */ Blockly.Msg.STATEMANAGER_ADD_STATE_FIELD_3 = "to state manager";
/** @export */ Blockly.Msg.STATEMANAGER_ADD_STATE_KEY_TEXT_DEFAULT = "tag";
/** @export */ Blockly.Msg.STATEMANAGER_ADD_STATE_TOOLTIP = "Adds a state to the game engine, this should be an instance of a state class.";
/** @export */ Blockly.Msg.STATEMANAGER_START_STATE_FIELD_1 = "start state with tag";
/** @export */ Blockly.Msg.STATEMANAGER_START_STATE_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.StateManager.html#start";
/** @export */ Blockly.Msg.STATEMANAGER_START_STATE_TAG_TEXT_DEFAULT = "tag";
/** @export */ Blockly.Msg.STATEMANAGER_START_STATE_TOOLTIP = "Start the specified state, this should be a state that has been added to the game engine";
/** @export */ Blockly.Msg.STEP_FIELD_1 = "Step";
/** @export */ Blockly.Msg.STEP_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Game.html#step";
/** @export */ Blockly.Msg.STEP_TOOLTIP = "Manually steps to the next game loop. Stepping should be enabled before using this.";
/** @export */ Blockly.Msg.STOP_ANIMATION_FIELD_1 = "stop animation on";
/** @export */ Blockly.Msg.STOP_ANIMATION_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#stop";
/** @export */ Blockly.Msg.STOP_ANIMATION_TOOLTIP = "Stops any animation from playing on the given sprite.";
/** @export */ Blockly.Msg.STOP_ANIMATION_VI_FIELD_1 = "stop animation on";
/** @export */ Blockly.Msg.STOP_ANIMATION_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Animation.html#stop";
/** @export */ Blockly.Msg.STOP_ANIMATION_VI_TOOLTIP = "Stops the current animation on the specified Sprite";
/** @export */ Blockly.Msg.STOP_PAUSE_RESUME_SOUNDS_FIELD_1 = "all sounds";
/** @export */ Blockly.Msg.STOP_PAUSE_RESUME_SOUNDS_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.SoundManager.html#stopAll";
/** @export */ Blockly.Msg.STOP_PAUSE_RESUME_SOUNDS_OPTION_DROPDOWN_1 = "stop";
/** @export */ Blockly.Msg.STOP_PAUSE_RESUME_SOUNDS_OPTION_DROPDOWN_2 = "pause";
/** @export */ Blockly.Msg.STOP_PAUSE_RESUME_SOUNDS_OPTION_DROPDOWN_3 = "resume";
/** @export */ Blockly.Msg.STOP_PAUSE_RESUME_SOUNDS_TOOLTIP = "Stop - Stop everything dead. Pause - Stop everything, but remember where you were. Resume - Start playing paused sounds from where they left off.";
/** @export */ Blockly.Msg.SWAP_CHILDREN_FIELD_1 = "swap children of";
/** @export */ Blockly.Msg.SWAP_CHILDREN_FIELD_2 = "child 1";
/** @export */ Blockly.Msg.SWAP_CHILDREN_FIELD_3 = "child 2";
/** @export */ Blockly.Msg.SWAP_CHILDREN_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.Sprite.html#swapChildren";
/** @export */ Blockly.Msg.SWAP_CHILDREN_TOOLTIP = "Swaps the indices of the given children. They must both be on the same parent.";
/** @export */ Blockly.Msg.TEXT_APPEND_APPENDTEXT = "append text";
/** @export */ Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";
/** @export */ Blockly.Msg.TEXT_APPEND_TO = "to";
/** @export */ Blockly.Msg.TEXT_APPEND_TOOLTIP = "Append some text to variable '%1'.";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "to lower case";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "to Title Case";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "to UPPER CASE";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Return a copy of the text in a different case.";
/** @export */ Blockly.Msg.TEXT_CHARAT_FIRST = "get first letter";
/** @export */ Blockly.Msg.TEXT_CHARAT_FROM_END = "get letter # from end";
/** @export */ Blockly.Msg.TEXT_CHARAT_FROM_START = "get letter #";
/** @export */ Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";
/** @export */ Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "in text";
/** @export */ Blockly.Msg.TEXT_CHARAT_LAST = "get last letter";
/** @export */ Blockly.Msg.TEXT_CHARAT_RANDOM = "get random letter";
/** @export */ Blockly.Msg.TEXT_CHARAT_TAIL = "";
/** @export */ Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returns the letter at the specified position.";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Add an item to the text.";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "join";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Add, remove, or reorder sections to reconfigure this text block.";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "to letter # from end";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "to letter #";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "to last letter";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "in text";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "get substring from first letter";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "get substring from letter # from end";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "get substring from letter #";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returns a specified portion of the text.";
/** @export */ Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";
/** @export */ Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "in text";
/** @export */ Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "find first occurrence of text";
/** @export */ Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "find last occurrence of text";
/** @export */ Blockly.Msg.TEXT_INDEXOF_TAIL = "";
/** @export */ Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 is empty";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Returns true if the provided text is empty.";
/** @export */ Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";
/** @export */ Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "create text with";
/** @export */ Blockly.Msg.TEXT_JOIN_TOOLTIP = "Create a piece of text by joining together any number of items.";
/** @export */ Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";
/** @export */ Blockly.Msg.TEXT_LENGTH_TITLE = "length of %1";
/** @export */ Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Returns the number of letters (including spaces) in the provided text.";
/** @export */ Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";
/** @export */ Blockly.Msg.TEXT_PRINT_TITLE = "print %1";
/** @export */ Blockly.Msg.TEXT_PRINT_TOOLTIP = "Print the specified text, number or other value.";
/** @export */ Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";
/** @export */ Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Prompt for user for a number.";
/** @export */ Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Prompt for user for some text.";
/** @export */ Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "prompt for number with message";
/** @export */ Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "prompt for text with message";
/** @export */ Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
/** @export */ Blockly.Msg.TEXT_TEXT_TOOLTIP = "A letter, word, or line of text.";
/** @export */ Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "trim spaces from both sides of";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "trim spaces from left side of";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "trim spaces from right side of";
/** @export */ Blockly.Msg.TEXT_TRIM_TOOLTIP = "Return a copy of the text with spaces removed from one or both ends.";
/** @export */ Blockly.Msg.TODAY = "Today";
/** @export */ Blockly.Msg.UNDO = "Undo";
/** @export */ Blockly.Msg.VALIDATE_FRAMES_FIELD_1 = "validate animation frames of ";
/** @export */ Blockly.Msg.VALIDATE_FRAMES_FIELD_2 = "array of frames";
/** @export */ Blockly.Msg.VALIDATE_FRAMES_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#validateFrames";
/** @export */ Blockly.Msg.VALIDATE_FRAMES_TOOLTIP = "Validates the frames on the given Sprite.";
/** @export */ Blockly.Msg.VALIDATE_FRAMES_VI_FIELD_1 = "validate animation frames of ";
/** @export */ Blockly.Msg.VALIDATE_FRAMES_VI_FIELD_2 = "array of frames";
/** @export */ Blockly.Msg.VALIDATE_FRAMES_VI_HELP_URL = "https://photonstorm.github.io/phaser-ce/Phaser.AnimationManager.html#validateFrames";
/** @export */ Blockly.Msg.VALIDATE_FRAMES_VI_TOOLTIP = "Validates the frames on the given Sprite.";
/** @export */ Blockly.Msg.VARIABLES_DEFAULT_NAME = "item";
/** @export */ Blockly.Msg.VARIABLES_GET_CREATE_SET = "Create 'set %1'";
/** @export */ Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";
/** @export */ Blockly.Msg.VARIABLES_GET_TOOLTIP = "Returns the value of this variable.";
/** @export */ Blockly.Msg.VARIABLES_SET = "set %1 to %2";
/** @export */ Blockly.Msg.VARIABLES_SET_CREATE_GET = "Create 'get %1'";
/** @export */ Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";
/** @export */ Blockly.Msg.VARIABLES_SET_TOOLTIP = "Sets this variable to be equal to the input.";
/** @export */ Blockly.Msg.VARIABLE_ALREADY_EXISTS = "A variable named '%1' already exists.";
/** @export */ Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.CONTROLS_DOWHILE_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
/** @export */ Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
/** @export */ Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
/** @export */ Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;